rr
#QM: 1 6
#bool_vars: 1490
#int_vars:  1800
#constrs: 5836
base workload: 
[5, 10]: cenq(0, t) >= 4
[5, 10]: cenq(1, t) >= 4
[5, 10]: cenq(2, t) >= 4
[5, 10]: cenq(3, t) >= 4
[5, 10]: cenq(4, t) >= 4
[10, 10]: cenq(0, t) >= 8
[10, 10]: cenq(1, t) > cenq(2, t)
[10, 10]: cenq(1, t) >= 8
[10, 10]: cenq(2, t) >= 8
[10, 10]: cenq(3, t) >= 8
[10, 10]: cenq(4, t) >= 8

base workload: 
[5, 10]: cenq(0, t) >= 4
[5, 10]: cenq(1, t) >= 4
[5, 10]: cenq(2, t) >= 4
[5, 10]: cenq(3, t) >= 4
[5, 10]: cenq(4, t) >= 4
[10, 10]: cenq(0, t) >= 8
[10, 10]: cenq(1, t) > cenq(2, t)
[10, 10]: cenq(1, t) >= 8
[10, 10]: cenq(2, t) >= 8
[10, 10]: cenq(3, t) >= 8
[10, 10]: cenq(4, t) >= 8

cp setup: 0.186 s
base example:
total time: 10
RR.2
enqs:
0 0 0 0 0 4 1 0 0 0 3 
1 0 0 0 0 4 0 0 0 1 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 0 1 2 0 1 
4 0 0 0 0 4 2 0 2 0 0 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 1 0 0 0 0 0 
3 0 0 0 0 0 1 0 0 0 1 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [22, 40] [12, 13] [17, 18] [22, 40]  | [17, 18]  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [22, 40] [22, 40] [22, 40] [22, 40]  |  |  |  | [25, 26]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [22, 40] [22, 40] [22, 40]  |  | [22, 40]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [22, 40] [22, 40] [22, 40] [0, 37]  |  | [22, 37]  | [0, 37] [22, 0]  |  | [1000, 1000]  | 
4  |  |  |  | [22, 40] [22, 40] [22, 40] [0, 40]  | [0, 40] [0, 40]  |  | [0, 40] [38, 40]  |  |  | 

zero_queues: {}
target_queues: {0, 1, 2, 3, 4, }
base example generation: 1.011 s
seed is: 29663
Base example: 
total time: 10
RR.2
enqs:
0 0 0 0 0 4 1 0 0 0 3 
1 0 0 0 0 4 0 0 0 1 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 0 1 2 0 1 
4 0 0 0 0 4 2 0 2 0 0 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 1 0 0 0 0 0 
3 0 0 0 0 0 1 0 0 0 1 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [22, 40] [12, 13] [17, 18] [22, 40]  | [17, 18]  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [22, 40] [22, 40] [22, 40] [22, 40]  |  |  |  | [25, 26]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [22, 40] [22, 40] [22, 40]  |  | [22, 40]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [22, 40] [22, 40] [22, 40] [0, 37]  |  | [22, 37]  | [0, 37] [22, 0]  |  | [1000, 1000]  | 
4  |  |  |  | [22, 40] [22, 40] [22, 40] [0, 40]  | [0, 40] [0, 40]  |  | [0, 40] [38, 40]  |  |  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 6]: ecmp(4, t) = 40
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(0, t) = 17
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[7, 7]: ecmp(3, t) = 37
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(0, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 6]: ecmp(4, t) = 40
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(0, t) = 17
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[7, 7]: ecmp(3, t) = 37
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(0, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 6]: ecmp(4, t) = 40
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(0, t) = 17
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[7, 7]: ecmp(3, t) = 37
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 6]: ecmp(4, t) = 40
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[7, 7]: ecmp(3, t) = 37
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[7, 7]: ecmp(3, t) = 37
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[8, 8]: ecmp(4, t) = 40
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(0, t) = 1000
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(1, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[7, 7]: dst(3, t) = 22
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[9, 9]: ecmp(1, t) = 26
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: dst(1, t) = 22
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 6]: ecmp(0, t) = 18
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: dst(2, t) = 22
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: dst(2, t) = 22
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(1, t) = 1000
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 6]: dst(4, t) = 0
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[9, 9]: dst(1, t) = 25
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: ecmp(2, t) = 40
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: ecmp(2, t) = 40
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: dst(3, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: dst(2, t) = 1000
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2
[10, 10]: ecmp(3, t) = 1000

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 5]: ecmp(1, t) = 40
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: cenq(3, t) = 5
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8
[10, 10]: aipg(3, t) = 2

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8
[10, 10]: cenq(3, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9
[10, 10]: cenq(2, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8
[10, 10]: cenq(1, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4
[10, 10]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5
[9, 9]: aipg(1, t) = 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8
[9, 9]: cenq(1, t) = 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 5]: cenq(4, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[7, 7]: aipg(3, t) = 2
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 5]: cenq(0, t) = 4
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(2, t) = 3
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 7]: cenq(4, t) = 6
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 9]: cenq(3, t) = 7
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 6]: cenq(3, t) = 4
[5, 8]: cenq(1, t) = 4
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 8]: cenq(1, t) = 4
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1
[8, 10]: cenq(4, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 8]: cenq(1, t) = 4
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[5, 8]: cenq(1, t) = 4
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 1 0 0 0 4 
1 1 0 0 0 3 0 0 0 3 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 1 2 0 0 4 
4 0 0 1 0 4 1 3 0 1 0 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 1 0 0 0 0 0 0 1 0 
2 0 0 1 0 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 1 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [12, 13] [44, 45] [62, 63] [80, 81]  | [28, 29]  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
1 [90, 91]  |  |  |  | [98, 99] [116, 117] [134, 135]  |  |  |  | [106, 107] [124, 125] [142, 143]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [14, 15] [164, 165] [170, 171]  |  | [186, 187]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [16, 17] [254, 255] [272, 273] [288, 289]  | [240, 241]  | [242, 243] [258, 259]  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  | [304, 305]  |  | [18, 19] [308, 309] [324, 325] [354, 355]  | [344, 345]  | [360, 361] [362, 363] [364, 365]  |  | [312, 313]  |  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[6, 9]: cenq(0, t) = 5
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 2 1 0 1 1 0 0 0 0 4 
1 0 0 1 0 3 0 0 1 0 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 1 2 0 0 4 
4 0 0 0 1 3 2 3 1 4 1 
deqs:
0 0 1 0 1 0 0 0 0 1 0 
1 0 0 0 0 1 0 0 0 0 1 
2 0 0 1 0 0 1 0 0 0 0 
3 0 0 0 0 0 0 1 0 0 0 
4 0 0 0 0 0 0 0 1 0 0 
pkts metadata: 
0 [19, 18] [34, 35]  | [22, 23]  |  | [22, 23]  | [24, 25]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
1  |  | [90, 91]  |  | [94, 95] [112, 113] [128, 129]  |  |  | [100, 101]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [12, 13] [160, 161] [16, 17]  |  | [158, 159]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [232, 233] [250, 251] [268, 269] [286, 287]  | [234, 235]  | [236, 237] [254, 255]  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  | [302, 303]  | [304, 305] [322, 323] [338, 339]  | [306, 307] [324, 325]  | [308, 309] [326, 327] [342, 343]  | [310, 311]  | [312, 313] [1000, 1000] [1000, 1000] [1000, 1000]  | [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2
[6, 9]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 1 0 4 1 1 0 0 4 
1 0 0 0 0 4 1 0 1 0 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 1 2 0 0 4 
4 0 0 0 0 4 2 4 1 4 1 
deqs:
0 0 0 0 1 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 0 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  | [17, 18]  |  | [21, 22] [37, 38] [57, 58] [47, 48]  | [67, 68]  | [23, 24]  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [91, 92] [107, 108] [125, 126] [143, 144]  | [93, 94]  |  | [95, 96]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [153, 154] [171, 172] [189, 190]  |  | [157, 158]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [233, 234] [251, 252] [269, 270] [287, 288]  | [235, 236]  | [237, 238] [255, 256]  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [305, 306] [321, 322] [333, 334] [345, 346]  | [307, 308] [323, 324]  | [309, 310] [309, 310] [309, 310] [349, 350]  | [311, 312]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 2 0 2 
1 1 0 0 1 2 1 1 1 1 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 1 1 0 1 4 
4 0 0 0 0 4 0 0 1 4 3 
deqs:
0 0 0 0 0 0 0 0 0 1 0 
1 0 1 0 0 1 0 0 0 0 1 
2 0 0 1 1 0 1 0 0 0 0 
3 0 0 0 0 0 0 1 0 0 0 
4 0 0 0 0 0 0 0 1 0 0 
pkts metadata: 
0  |  |  |  | [21, 22] [37, 38] [55, 56] [71, 72]  |  |  | [27, 28] [43, 44]  |  | [1000, 1000] [1000, 1000]  | 
1 [77, 78]  |  |  | [83, 84]  | [85, 86] [103, 104]  | [87, 88]  | [89, 90]  | [91, 92]  | [93, 94]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [147, 148] [165, 166] [183, 184]  |  | [151, 152]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [227, 228] [245, 246] [263, 264] [281, 282]  | [229, 230]  | [231, 232]  |  | [235, 236]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [299, 300] [317, 318] [333, 334] [351, 352]  |  |  | [305, 306]  | [307, 308] [323, 324] [341, 342] [357, 358]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 2 0 2 
1 0 0 0 0 4 2 1 1 4 4 
2 2 0 1 0 1 0 0 0 0 4 
3 0 0 0 0 4 1 1 0 1 4 
4 0 0 0 0 4 1 0 1 4 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 0 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [24, 25] [42, 43] [58, 59] [72, 73]  |  |  | [30, 31] [46, 47]  |  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [86, 87] [98, 99] [112, 113] [130, 131]  | [136, 137] [138, 139]  | [140, 141]  | [140, 141]  | [88, 89] [88, 89] [120, 121] [1000, 1000]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [142, 143] [9, 14]  |  | [146, 147]  |  | [150, 151]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [220, 221] [238, 239] [256, 257] [274, 275]  | [222, 223]  | [224, 225]  |  | [228, 229]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [292, 293] [310, 311] [328, 329] [346, 347]  | [294, 295]  |  | [298, 299]  | [300, 301] [318, 319] [336, 337] [354, 355]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 2 0 2 
1 0 0 0 0 4 2 1 1 4 4 
2 1 0 3 0 0 0 0 0 0 4 
3 0 0 0 0 4 1 1 0 1 4 
4 0 0 0 0 4 1 0 1 4 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 0 1 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [22, 23] [38, 39] [54, 55] [68, 69]  |  |  | [28, 29] [42, 43]  |  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [84, 85] [96, 97] [112, 113] [130, 131]  | [136, 137] [138, 139]  | [140, 141]  | [142, 143]  | [86, 87] [102, 103] [120, 121] [1000, 1000]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [144, 145]  |  | [148, 149] [166, 167] [184, 185]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [224, 225] [242, 243] [260, 261] [278, 279]  | [226, 227]  | [228, 229]  |  | [232, 233]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [296, 297] [314, 315] [332, 333] [350, 351]  | [298, 299]  |  | [302, 303]  | [304, 305] [322, 323] [340, 341] [358, 359]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 1 0 0 0 3 0 0 1 2 2 
1 0 1 0 2 1 1 0 0 1 4 
2 3 0 1 0 0 0 0 0 0 4 
3 0 0 0 0 4 0 0 1 4 4 
4 0 0 0 0 4 0 0 0 4 3 
deqs:
0 0 1 0 0 0 0 0 0 1 0 
1 0 0 1 0 1 0 0 0 0 1 
2 0 0 0 1 0 1 0 0 0 0 
3 0 0 0 0 0 0 1 0 0 0 
4 0 0 0 0 0 0 0 1 0 0 
pkts metadata: 
0 [14, 12]  |  |  |  | [21, 22] [39, 40] [57, 58]  |  |  | [27, 28]  | [29, 30] [47, 48]  | [1000, 1000] [1000, 1000]  | 
1  | [83, 84]  |  | [87, 88] [105, 106]  | [89, 90]  | [91, 92]  |  |  | [97, 98]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [153, 154] [171, 172] [189, 190]  |  | [157, 158]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [233, 234] [249, 250] [265, 266] [285, 286]  |  |  | [275, 276]  | [239, 240] [255, 256] [273, 274] [293, 294]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [303, 304] [321, 322] [339, 340] [357, 358]  |  |  |  | [311, 312] [329, 330] [347, 348] [365, 366]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 2 4 
2 2 0 1 0 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 0 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [19, 20] [35, 36] [53, 54] [67, 68]  |  |  | [23, 24]  | [25, 26] [43, 44]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [85, 86] [103, 104] [121, 122] [139, 140]  |  |  |  | [93, 94] [111, 112]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [149, 150] [167, 168]  |  | [153, 154]  |  | [157, 158]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [229, 230] [247, 248] [265, 266] [283, 284]  |  |  |  | [237, 238]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [301, 302] [319, 320] [335, 336] [353, 354]  | [303, 304]  |  |  | [309, 310] [325, 326]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 2 4 
2 1 0 3 0 0 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 0 1 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [19, 20] [37, 38] [55, 56] [69, 70]  |  |  | [25, 26]  | [27, 28] [45, 46]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [87, 88] [105, 106] [123, 124] [141, 142]  |  |  |  | [95, 96] [113, 114]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [151, 152]  |  | [155, 156] [173, 174] [191, 192]  |  |  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [231, 232] [249, 250] [265, 266] [283, 284]  |  |  |  | [239, 240]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [301, 302] [319, 320] [337, 338] [355, 356]  | [303, 304]  |  |  | [309, 310] [327, 328]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

Workload after combining: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

zero_in_base: {}
in_wl: {0, 1, 2, 3, 4, }
Workload after aggregating indivs to sums: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: cenq(2, t) = 4
[3, 9]: aipg(2, t) = 2

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[1, 9]: cenq(2, t) <= 4
[3, 9]: aipg(2, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 2 4 
2 2 0 1 0 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 0 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [21, 22] [39, 40] [55, 56] [69, 70]  |  |  | [27, 28]  | [29, 30] [45, 46]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [87, 88] [105, 106] [123, 124] [141, 142]  |  |  |  | [95, 96] [113, 114]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [151, 152] [11, 12]  |  | [155, 156]  |  | [159, 160]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [229, 230] [247, 248] [265, 266] [283, 284]  |  |  |  | [237, 238]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [301, 302] [319, 320] [335, 336] [353, 354]  | [303, 304]  |  |  | [309, 310] [325, 326]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) = 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) <= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 4 4 
2 0 1 3 2 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 0 1 1 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [21, 22] [39, 40] [57, 58] [71, 72]  |  |  | [27, 28]  | [29, 30] [47, 48]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [89, 90] [107, 108] [125, 126] [143, 144]  |  |  |  | [97, 98] [115, 116] [133, 134] [151, 152]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2  | [155, 156]  | [157, 158] [175, 176] [193, 194]  | [159, 160] [177, 178]  | [161, 162]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [233, 234] [251, 252] [269, 270] [287, 288]  |  |  |  | [241, 242]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [305, 306] [323, 324] [341, 342] [359, 360]  | [307, 308]  |  |  | [313, 314] [331, 332]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 1
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 4 4 
2 0 3 1 1 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 0 1 1 1 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [22, 23] [40, 41] [56, 57] [72, 73]  |  |  | [28, 29]  | [30, 31] [46, 47]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [88, 89] [106, 107] [124, 125] [142, 143]  |  |  |  | [96, 97] [114, 115] [132, 133] [150, 151]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2  | [11, 13] [156, 157] [174, 175]  | [154, 155]  | [158, 159]  | [160, 161]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [230, 231] [248, 249] [266, 267] [284, 285]  |  |  |  | [238, 239]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [302, 303] [320, 321] [336, 337] [354, 355]  | [304, 305]  |  |  | [310, 311] [326, 327]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 3

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 0 0 1 2 2 
1 0 0 0 0 4 0 0 0 4 4 
2 2 0 1 0 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 0 4 1 0 0 2 3 
deqs:
0 0 0 0 0 0 0 0 1 0 0 
1 0 0 0 0 0 0 0 0 1 0 
2 0 1 1 1 0 0 0 0 0 1 
3 0 0 0 0 0 1 0 0 0 0 
4 0 0 0 0 0 0 1 0 0 0 
pkts metadata: 
0  |  |  |  | [20, 21] [38, 39] [56, 57] [70, 71]  |  |  | [26, 27]  | [28, 29] [46, 47]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [88, 89] [106, 107] [124, 125] [142, 143]  |  |  |  | [96, 97] [114, 115] [132, 133] [150, 151]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [152, 153] [170, 171]  |  | [156, 157]  |  | [160, 161]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [232, 233] [250, 251] [268, 269] [286, 287]  |  |  |  | [240, 241]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  |  | [304, 305] [322, 323] [338, 339] [356, 357]  | [306, 307]  |  |  | [312, 313] [328, 329]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

checking: 
[1, 3]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 10
RR.2
enqs:
0 0 0 0 0 4 1 0 1 2 2 
1 0 0 0 0 4 1 1 0 4 4 
2 3 0 1 0 1 0 0 0 0 4 
3 0 0 0 0 4 0 0 0 1 4 
4 0 0 0 1 3 0 0 0 2 3 
deqs:
0 0 0 0 0 0 1 0 0 0 0 
1 0 0 0 0 0 0 1 0 0 0 
2 0 1 1 1 0 0 0 1 0 0 
3 0 0 0 0 0 0 0 0 1 0 
4 0 0 0 0 1 0 0 0 0 1 
pkts metadata: 
0  |  |  |  | [24, 25] [42, 43] [60, 61] [78, 79]  | [26, 27]  |  | [30, 31]  | [32, 33] [50, 51]  | [1000, 1000] [1000, 1000]  | 
1  |  |  |  | [94, 95] [108, 109] [126, 127] [144, 145]  | [134, 135]  | [152, 153]  |  | [98, 99] [116, 117] [116, 117] [154, 155]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
2 [156, 157] [172, 173] [190, 191]  |  | [11, 12]  |  | [162, 163]  |  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
3  |  |  |  | [234, 235] [252, 253] [270, 271] [288, 289]  |  |  |  | [242, 243]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 
4  |  |  | [304, 305]  | [13, 15] [308, 309] [326, 327]  |  |  |  | [314, 315] [330, 331]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 9]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 8]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 7]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 6]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 5]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 4]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 1357 milliseconds
Final Workload after restricting time ranges: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

Final Workload after improving: 
[1, 4]: SUM_[q in {0, 1, 3, 4, }] cenq(q ,t) <= 0
[3, 3]: aipg(2, t) >= 2
[3, 10]: cenq(2, t) >= 4

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 349ms
avg_check_time: 116.333ms
max_check_time: 146ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 2
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 284ms
avg_check_time: 71ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 38ms
avg_check_time: 38ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 26
opt_count: 19
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 1.30151e+08
Timing Stats: 
sum_check_time: 1943ms
avg_check_time: 74.7308ms
max_check_time: 182ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 38ms
avg_check_time: 38ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 23
opt_count: 23
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 7.40512e+07
Timing Stats: 
sum_check_time: 1188ms
avg_check_time: 51.6522ms
max_check_time: 58ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 7.40512e+07
Timing Stats: 
sum_check_time: 229ms
avg_check_time: 229ms
max_check_time: 229ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 17
opt_count: 16
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 1346ms
avg_check_time: 79.1765ms
max_check_time: 143ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 265ms
avg_check_time: 132.5ms
max_check_time: 159ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/rr.csv"
Test execution time: 7 seconds.
