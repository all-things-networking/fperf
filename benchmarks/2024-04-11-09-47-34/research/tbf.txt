#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 4 1 1 1 
deqs:
0 0 1 1 4 1 1 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 4 1 1 1 
deqs:
0 0 1 1 4 1 1 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = t
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

checking: 
[1, 2]: cenq(0, t) = t
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = t
[1, 6]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 0 0 
deqs:
0 0 1 1 3 1 0 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  |  |  | 

checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 1 1 1 
deqs:
0 0 2 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 2 1 
deqs:
0 0 1 1 3 1 2 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000]  | 

Last valid workload: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 2]: cenq(0, t) = t
[3, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[3, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [24, 25] [32, 33]  | [11, 12] [13, 14] [42, 43]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 2 1 
deqs:
0 0 1 1 1 3 2 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 1 1 
deqs:
0 0 1 1 3 1 1 
pkts metadata: 
0 [19, 20]  | [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

Workload after combining: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 2]: cenq(0, t) = t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 2 1 2 
deqs:
0 0 1 1 2 2 1 
pkts metadata: 
0 [23, 24]  | [11, 12]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= t
[1, 6]: cenq(0, t) <= 9
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 0 0 
deqs:
0 0 1 1 3 1 0 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  |  |  | 

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 2 3 3 9 
deqs:
0 0 0 2 2 3 3 
pkts metadata: 
0  | [11, 12] [15, 16]  | [34, 35] [40, 41]  | [13, 14] [17, 18] [20, 21]  | [36, 37] [42, 43] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 1 1 
deqs:
0 0 1 1 3 1 1 
pkts metadata: 
0 [29, 30]  | [11, 12]  | [13, 14] [15, 16] [17, 18]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 3 1 1 1 
deqs:
0 0 1 2 3 1 1 
pkts metadata: 
0 [27, 28]  | [29, 30] [37, 38]  | [11, 12] [13, 14] [15, 16]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) <= t
[4, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 1 1 6 
deqs:
0 0 2 0 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 3 1 1 
deqs:
0 0 0 2 3 3 1 
pkts metadata: 
0  | [29, 30] [37, 38]  | [31, 32] [39, 40] [47, 48]  | [11, 12] [13, 14] [15, 16]  | [33, 34]  | [1000, 1000]  | 

restrict_time_ranges took 124 milliseconds
Workload after restricting time ranges: 
[2, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

Final Workload: 
[2, 2]: cenq(0, t) <= t
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 29.3333ms
max_check_time: 37ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 3
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 116ms
avg_check_time: 23.2ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1
avg_cost_improvement_rel: 0.142857
Timing Stats: 
sum_check_time: 12ms
avg_check_time: 12ms
max_check_time: 12ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 4
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.30382e+08
Timing Stats: 
sum_check_time: 153ms
avg_check_time: 19.125ms
max_check_time: 45ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1
avg_cost_improvement_rel: 0.142857
Timing Stats: 
sum_check_time: 14ms
avg_check_time: 14ms
max_check_time: 14ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 2
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.86331e+08
Timing Stats: 
sum_check_time: 22ms
avg_check_time: 11ms
max_check_time: 12ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.86331e+08
Timing Stats: 
sum_check_time: 62ms
avg_check_time: 62ms
max_check_time: 62ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 1
avg_cost_improvement_abs: 1
avg_cost_improvement_rel: 0.142857
Timing Stats: 
sum_check_time: 120ms
avg_check_time: 30ms
max_check_time: 39ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 106ms
avg_check_time: 53ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 3ms
avg_check_time: 1ms
max_check_time: 1ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 4 1 1 1 1 
deqs:
0 0 1 4 1 1 1 
pkts metadata: 
0 [20, 21]  | [20, 21] [24, 22] [20, 23] [24, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 4 1 1 1 1 
deqs:
0 0 1 4 1 1 1 
pkts metadata: 
0 [20, 21]  | [20, 21] [24, 22] [20, 23] [24, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 20
[1, 1]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 20
[3, 6]: ecmp(0, t) = 21
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 20
[1, 1]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 20
[3, 6]: ecmp(0, t) = 21
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 20
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 20
[3, 6]: ecmp(0, t) = 21
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 20
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 20
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 20
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 1 1 1 
deqs:
0 0 3 2 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 1 1 1 
deqs:
0 0 3 2 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [23, 24] [31, 32]  | [11, 12] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [22, 23]  | [11, 12] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 2 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [22, 23]  | [11, 12] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 3 1 1 1 
deqs:
0 0 1 2 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

Workload after combining: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 0 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [27, 28]  | [29, 30] [37, 38] [45, 46]  | [11, 12] [13, 14] [15, 16]  | [31, 32]  | [33, 34]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[1, 6]: cenq(0, t) <= 9
[3, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 2 3 0 10 
deqs:
0 0 1 0 2 3 0 
pkts metadata: 
0 [25, 26]  |  | [11, 12] [13, 14]  | [29, 30] [37, 38] [47, 48]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 0 3 
deqs:
0 0 1 3 1 1 0 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  |  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [29, 30] [37, 38] [45, 46]  | [11, 12] [13, 14] [15, 16]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

restrict_time_ranges took 84 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 117ms
avg_check_time: 39ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 6
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 139ms
avg_check_time: 27.8ms
max_check_time: 37ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0.5
avg_cost_improvement_rel: 0.0714286
Timing Stats: 
sum_check_time: 17ms
avg_check_time: 17ms
max_check_time: 17ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 8
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.30382e+08
Timing Stats: 
sum_check_time: 336ms
avg_check_time: 28ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0.5
avg_cost_improvement_rel: 0.0714286
Timing Stats: 
sum_check_time: 16ms
avg_check_time: 16ms
max_check_time: 16ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 6
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69488e+08
Timing Stats: 
sum_check_time: 52ms
avg_check_time: 13ms
max_check_time: 14ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69488e+08
Timing Stats: 
sum_check_time: 66ms
avg_check_time: 66ms
max_check_time: 66ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 1
avg_cost_improvement_abs: 0.5
avg_cost_improvement_rel: 0.0714286
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 41.5ms
max_check_time: 44ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 147ms
avg_check_time: 73.5ms
max_check_time: 92ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 6ms
avg_check_time: 2ms
max_check_time: 2ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 1 4 1 1 
deqs:
0 0 1 1 1 4 1 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23]  | [22, 23] [22, 23] [20, 21] [22, 23]  | [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 1 4 1 1 
deqs:
0 0 1 1 1 4 1 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23]  | [22, 23] [22, 23] [20, 21] [22, 23]  | [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 22
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 9

checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 22
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 22
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 22
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 0 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 0 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  |  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 2 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 2 1 1 
deqs:
0 0 2 0 3 2 1 
pkts metadata: 
0 [27, 28] [35, 36]  |  | [11, 12] [13, 14] [15, 16]  | [31, 32] [39, 40]  | [33, 34]  | [1000, 1000]  | 

Last valid workload: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 3]: cenq(0, t) = t
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[4, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 2 1 1 
deqs:
0 0 0 2 3 2 1 
pkts metadata: 
0  | [11, 12] [15, 16]  | [13, 14] [17, 18] [19, 20]  | [31, 32] [37, 38]  | [33, 34]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 0 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  |  | 

checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 0 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

Workload after removing specs: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

Workload after combining: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 3]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 2 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= t
[1, 6]: cenq(0, t) <= 9
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 1 1 
deqs:
0 0 0 2 1 3 1 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 3 10 
deqs:
0 0 0 0 3 3 3 
pkts metadata: 
0  |  | [11, 12] [13, 14] [15, 16]  | [32, 33] [40, 41] [48, 49]  | [34, 35] [42, 43] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [11, 12] [13, 14] [15, 16]  | [31, 32] [39, 40] [47, 48]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 1 1 
deqs:
0 0 1 1 2 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 1 10 
deqs:
0 0 3 0 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 9
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 2 1 
deqs:
0 0 3 0 0 3 2 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [1000, 1000]  | 

restrict_time_ranges took 338 milliseconds
Workload after restricting time ranges: 
[3, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

Final Workload: 
[3, 3]: cenq(0, t) <= t
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 111ms
avg_check_time: 37ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 9
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 195ms
avg_check_time: 39ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0.666667
avg_cost_improvement_rel: 0.0952381
Timing Stats: 
sum_check_time: 24ms
avg_check_time: 24ms
max_check_time: 24ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 11
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.50405e+08
Timing Stats: 
sum_check_time: 227ms
avg_check_time: 28.375ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 0.666667
avg_cost_improvement_rel: 0.0952381
Timing Stats: 
sum_check_time: 18ms
avg_check_time: 18ms
max_check_time: 18ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 10
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.75102e+08
Timing Stats: 
sum_check_time: 81ms
avg_check_time: 20.25ms
max_check_time: 25ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.75102e+08
Timing Stats: 
sum_check_time: 78ms
avg_check_time: 78ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 3
avg_cost_improvement_abs: 0.666667
avg_cost_improvement_rel: 0.0952381
Timing Stats: 
sum_check_time: 333ms
avg_check_time: 66.6ms
max_check_time: 91ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 85ms
avg_check_time: 42.5ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 6ms
avg_check_time: 2ms
max_check_time: 2ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 4 2 1 1 1 
deqs:
0 0 1 4 2 1 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22] [23, 24] [21, 22]  | [21, 22] [20, 0]  | [21, 22]  | [21, 22]  | [21, 22]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 4 2 1 1 1 
deqs:
0 0 1 4 2 1 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22] [23, 24] [21, 22]  | [21, 22] [20, 0]  | [21, 22]  | [21, 22]  | [21, 22]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 21
[1, 1]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 21
[1, 1]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 1 1 1 
deqs:
0 0 3 2 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 1 1 1 
deqs:
0 0 2 3 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 1 1 1 
deqs:
0 0 3 2 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 0 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [27, 28] [35, 36]  | [11, 12] [13, 14] [15, 16]  | [29, 30] [37, 38] [45, 46]  | [31, 32]  | [33, 34]  |  | 

checking: 
[1, 1]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [26, 27]  | [28, 29] [36, 37] [44, 45]  | [11, 12] [13, 14] [15, 16]  | [30, 31]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [27, 28]  | [29, 30] [37, 38] [45, 46]  | [11, 12] [13, 14] [15, 16]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 0 0 1 
deqs:
0 0 2 3 3 0 0 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  |  |  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 0 0 1 
deqs:
0 0 1 3 3 0 0 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  |  |  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

Workload after combining: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 5

checking: 
[1, 1]: cenq(0, t) <= 1
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[1, 2]: cenq(0, t) <= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 1 0 1 
deqs:
0 0 0 2 3 1 0 
pkts metadata: 
0  | [31, 32] [37, 38]  | [11, 12] [15, 16] [17, 18]  | [13, 14]  |  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 2 0 10 
deqs:
0 0 1 3 1 2 0 
pkts metadata: 
0 [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 104 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

Final Workload: 
[1, 1]: cenq(0, t) <= 1
[2, 6]: cenq(0, t) >= 5

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 91ms
avg_check_time: 45.5ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 11
avg_cost_improvement_abs: 1.07374e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 159ms
avg_check_time: 53ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.07374e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 16
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.45399e+08
Timing Stats: 
sum_check_time: 546ms
avg_check_time: 34.125ms
max_check_time: 58ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.07374e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 16ms
avg_check_time: 16ms
max_check_time: 16ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 14
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69488e+08
Timing Stats: 
sum_check_time: 66ms
avg_check_time: 16.5ms
max_check_time: 22ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69488e+08
Timing Stats: 
sum_check_time: 93ms
avg_check_time: 93ms
max_check_time: 93ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 7
avg_cost_improvement_abs: 0.5
avg_cost_improvement_rel: 0.0714286
Timing Stats: 
sum_check_time: 101ms
avg_check_time: 25.25ms
max_check_time: 29ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 53ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 4 1 1 1 1 
deqs:
0 0 2 4 1 1 1 
pkts metadata: 
0 [0, 0] [0, 0]  | [0, 0] [20, 0] [30, 21] [20, 21]  | [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 4 1 1 1 1 
deqs:
0 0 2 4 1 1 1 
pkts metadata: 
0 [0, 0] [0, 0]  | [0, 0] [20, 0] [30, 21] [20, 21]  | [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 0
[3, 6]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 0
[3, 6]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 0
[3, 6]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 0
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [25, 26] [33, 34] [43, 44]  | [27, 28]  | [29, 30]  | [11, 12]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  | [11, 12] [13, 14] [15, 16]  | [28, 29]  | [30, 31]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [24, 25] [32, 33] [40, 41] [50, 51]  | [11, 12] [13, 14]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  | [11, 12] [13, 14] [15, 16]  | [28, 29]  | [30, 31]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 1 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 3 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 1]: cenq(0, t) = 2
[2, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 1 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 2 2 2 
deqs:
0 0 2 0 2 2 2 
pkts metadata: 
0 [24, 25] [32, 33]  |  | [28, 29] [36, 37]  | [11, 12] [13, 14]  | [30, 31] [38, 39]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 1 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

Workload after combining: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 2 2 2 
deqs:
0 0 2 0 2 2 2 
pkts metadata: 
0 [24, 25] [32, 33]  |  | [28, 29] [36, 37]  | [11, 12] [13, 14]  | [30, 31] [38, 39]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[1, 6]: cenq(0, t) <= 10
[3, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 2 2 10 
deqs:
0 0 2 1 2 2 2 
pkts metadata: 
0 [26, 27] [34, 35]  | [28, 29]  | [30, 31] [38, 39]  | [11, 12] [13, 14]  | [32, 33] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 1 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 2 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 0 1 
deqs:
0 0 2 3 3 1 0 
pkts metadata: 
0 [25, 26] [33, 34]  | [11, 12] [13, 14] [43, 44]  | [27, 28] [35, 36] [45, 46]  | [29, 30]  |  | [1000, 1000]  | 

restrict_time_ranges took 91 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 1]: cenq(0, t) <= 2
[3, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 296ms
avg_check_time: 98.6667ms
max_check_time: 190ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 14
avg_cost_improvement_abs: 8.58993e+08
avg_cost_improvement_rel: 1.71799e+08
Timing Stats: 
sum_check_time: 167ms
avg_check_time: 33.4ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 8.58993e+08
avg_cost_improvement_rel: 1.71799e+08
Timing Stats: 
sum_check_time: 46ms
avg_check_time: 46ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 20
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.42396e+08
Timing Stats: 
sum_check_time: 476ms
avg_check_time: 39.6667ms
max_check_time: 85ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 8.58993e+08
avg_cost_improvement_rel: 1.71799e+08
Timing Stats: 
sum_check_time: 85ms
avg_check_time: 85ms
max_check_time: 85ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 18
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.6612e+08
Timing Stats: 
sum_check_time: 71ms
avg_check_time: 17.75ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.6612e+08
Timing Stats: 
sum_check_time: 122ms
avg_check_time: 122ms
max_check_time: 122ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 7
avg_cost_improvement_abs: 0.4
avg_cost_improvement_rel: 0.0571429
Timing Stats: 
sum_check_time: 89ms
avg_check_time: 44.5ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 118ms
avg_check_time: 59ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 3.66667ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 1 1 4 1 1 
deqs:
0 0 2 1 1 4 1 
pkts metadata: 
0 [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 1 1 4 1 1 
deqs:
0 0 2 1 1 4 1 
pkts metadata: 
0 [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 3
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 3 1 1 
deqs:
0 0 3 2 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  | [23, 24]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 1 1 
deqs:
0 0 3 1 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 1 1 1 1 0 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52] [61, 62] [71, 72]  | [23, 24]  | [25, 26]  | [27, 28]  | [29, 30]  |  | 

checking: 
[2, 3]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 2 1 0 
deqs:
0 0 3 1 0 2 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  |  | [26, 27] [36, 37]  | [28, 29]  |  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 2 3 1 1 
deqs:
0 0 1 2 2 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 0 2 1 1 
deqs:
0 0 1 3 0 2 1 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 0 2 2 2 
deqs:
0 0 1 3 0 2 2 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 4
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 4
[4, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 4
[4, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 0 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [25, 26] [33, 34]  | [11, 12] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  |  | 

checking: 
[3, 3]: cenq(0, t) = 4
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 2 1 3 
deqs:
0 0 3 0 1 2 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 2 1 0 
deqs:
0 0 3 0 1 2 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  | [24, 25]  | [26, 27] [36, 37]  | [28, 29]  |  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

Workload after combining: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 0 3 2 2 
deqs:
0 0 2 1 0 3 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[1, 6]: cenq(0, t) <= 10
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 2 1 1 
deqs:
0 0 1 1 2 2 1 
pkts metadata: 
0 [22, 23]  | [24, 25]  | [26, 27] [34, 35]  | [11, 12] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 0 2 3 10 
deqs:
0 0 2 2 0 2 3 
pkts metadata: 
0 [33, 34] [37, 38]  | [11, 12] [17, 18]  |  | [13, 14] [41, 42]  | [15, 16] [20, 21] [22, 23]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 0 3 1 1 
deqs:
0 0 1 3 0 3 1 
pkts metadata: 
0 [27, 28]  | [11, 12] [13, 14] [15, 16]  |  | [31, 32] [39, 40] [47, 48]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 2]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 3 1 1 
deqs:
0 0 1 3 1 3 1 
pkts metadata: 
0 [28, 29]  | [11, 12] [15, 16] [17, 18]  | [13, 14]  | [30, 31] [38, 39] [46, 47]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 0 3 1 7 
deqs:
0 0 0 3 0 3 1 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  |  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[6, 6]: cenq(0, t) >= 10
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 2 3 1 
deqs:
0 0 2 0 2 2 3 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

restrict_time_ranges took 261 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 3]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 192ms
avg_check_time: 64ms
max_check_time: 101ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 17
avg_cost_improvement_abs: 1.43166e+09
avg_cost_improvement_rel: 2.32644e+08
Timing Stats: 
sum_check_time: 245ms
avg_check_time: 49ms
max_check_time: 64ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.43166e+09
avg_cost_improvement_rel: 2.32644e+08
Timing Stats: 
sum_check_time: 72ms
avg_check_time: 72ms
max_check_time: 72ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 25
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.36461e+08
Timing Stats: 
sum_check_time: 772ms
avg_check_time: 59.3846ms
max_check_time: 167ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.43166e+09
avg_cost_improvement_rel: 2.32644e+08
Timing Stats: 
sum_check_time: 59ms
avg_check_time: 59ms
max_check_time: 59ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 20
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.66506e+08
Timing Stats: 
sum_check_time: 59ms
avg_check_time: 29.5ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.66506e+08
Timing Stats: 
sum_check_time: 165ms
avg_check_time: 165ms
max_check_time: 165ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 9
avg_cost_improvement_abs: 0.333333
avg_cost_improvement_rel: 0.047619
Timing Stats: 
sum_check_time: 256ms
avg_check_time: 51.2ms
max_check_time: 77ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 146ms
avg_check_time: 73ms
max_check_time: 82ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 10ms
avg_check_time: 3.33333ms
max_check_time: 5ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 1 4 1 1 1 
deqs:
0 0 2 1 4 1 1 
pkts metadata: 
0 [20, 21] [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 1 4 1 1 1 
deqs:
0 0 2 1 4 1 1 
pkts metadata: 
0 [20, 21] [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: ecmp(0, t) = 21
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 2 1 1 1 
deqs:
0 0 3 2 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41] [50, 51]  | [22, 23]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 1 1 1 
deqs:
0 0 2 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 0 1 3 
deqs:
0 0 3 0 3 0 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  | [24, 25] [34, 35] [44, 45]  |  | [28, 29]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 3
[3, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 3
[3, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 3
[3, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 2 1 1 1 
deqs:
0 0 3 2 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41] [50, 51] [60, 61]  |  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 1 2 2 2 
deqs:
0 0 2 1 1 2 2 
pkts metadata: 
0 [22, 23] [30, 31]  | [11, 12]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 1 1 1 
deqs:
0 0 3 0 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

Workload after combining: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 2 2 
deqs:
0 0 3 0 0 3 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[1, 6]: cenq(0, t) <= 10
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 1 1 1 
deqs:
0 0 3 0 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 2 10 
deqs:
0 0 3 0 0 3 2 
pkts metadata: 
0 [31, 32] [37, 38] [43, 44]  |  |  | [11, 12] [15, 16] [20, 21]  | [13, 14] [17, 19]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 1 1 1 
deqs:
0 0 3 0 3 1 1 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44]  |  | [11, 12] [13, 14] [15, 16]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

checking: 
[1, 1]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 1 1 10 
deqs:
0 0 0 2 3 1 1 
pkts metadata: 
0  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 2 3 1 1 
deqs:
0 0 1 2 2 3 1 
pkts metadata: 
0 [31, 32]  | [11, 12] [15, 16]  | [33, 34] [39, 40]  | [13, 14] [17, 18] [19, 20]  | [35, 36]  | [1000, 1000]  | 

restrict_time_ranges took 171 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 2]: cenq(0, t) <= 3
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 148ms
avg_check_time: 49.3333ms
max_check_time: 72ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 20
avg_cost_improvement_abs: 1.8407e+09
avg_cost_improvement_rel: 2.76105e+08
Timing Stats: 
sum_check_time: 164ms
avg_check_time: 32.8ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.8407e+09
avg_cost_improvement_rel: 2.76105e+08
Timing Stats: 
sum_check_time: 29ms
avg_check_time: 29ms
max_check_time: 29ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 30
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32221e+08
Timing Stats: 
sum_check_time: 559ms
avg_check_time: 43ms
max_check_time: 77ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.8407e+09
avg_cost_improvement_rel: 2.76105e+08
Timing Stats: 
sum_check_time: 34ms
avg_check_time: 34ms
max_check_time: 34ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 22
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.66781e+08
Timing Stats: 
sum_check_time: 37ms
avg_check_time: 18.5ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.66781e+08
Timing Stats: 
sum_check_time: 91ms
avg_check_time: 91ms
max_check_time: 91ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 10
avg_cost_improvement_abs: 0.285714
avg_cost_improvement_rel: 0.0408163
Timing Stats: 
sum_check_time: 168ms
avg_check_time: 42ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 130ms
avg_check_time: 65ms
max_check_time: 76ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 7ms
avg_check_time: 2.33333ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 4 2 1 1 
deqs:
0 0 1 1 4 2 1 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [0, 0]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 4 2 1 1 
deqs:
0 0 1 1 4 2 1 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [0, 0]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 20
[1, 3]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 20
[5, 6]: ecmp(0, t) = 21
[6, 6]: cenq(0, t) = 10

checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 20
[1, 3]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 20
[5, 6]: ecmp(0, t) = 21
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 20
[5, 6]: ecmp(0, t) = 21
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: ecmp(0, t) = 21
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 20
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 20
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 5]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 1 1 
deqs:
0 0 1 1 3 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 1 1 
deqs:
0 0 1 1 3 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 1 1 
deqs:
0 0 1 1 2 3 1 
pkts metadata: 
0 [25, 26]  | [27, 28]  | [11, 12] [13, 14]  | [29, 30] [37, 38] [47, 48]  | [31, 32]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 1 1 
deqs:
0 0 3 0 3 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 1 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 1 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [28, 29]  | [30, 31]  | [11, 12]  | [13, 14] [15, 16] [17, 18]  | [32, 33]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

Workload after combining: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 6

checking: 
[1, 2]: cenq(0, t) <= t
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= t
[1, 3]: cenq(0, t) <= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 1 1 
deqs:
0 0 0 2 1 3 1 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

checking: 
[1, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 1 1 
deqs:
0 0 1 1 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

checking: 
[1, 1]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 3 0 1 1 
deqs:
0 0 1 2 3 0 1 
pkts metadata: 
0 [25, 26]  | [11, 12] [13, 14]  | [27, 28] [35, 36] [45, 46]  |  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 207 milliseconds
Workload after restricting time ranges: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

Final Workload: 
[2, 2]: cenq(0, t) <= t
[3, 6]: cenq(0, t) >= 6

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 114ms
avg_check_time: 57ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 22
avg_cost_improvement_abs: 2.14748e+09
avg_cost_improvement_rel: 3.48966e+08
Timing Stats: 
sum_check_time: 179ms
avg_check_time: 59.6667ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.61061e+09
avg_cost_improvement_rel: 2.41592e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 35
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.31991e+08
Timing Stats: 
sum_check_time: 302ms
avg_check_time: 30.2ms
max_check_time: 55ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.61061e+09
avg_cost_improvement_rel: 2.41592e+08
Timing Stats: 
sum_check_time: 20ms
avg_check_time: 20ms
max_check_time: 20ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 26
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.65014e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 19.75ms
max_check_time: 23ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.65014e+08
Timing Stats: 
sum_check_time: 91ms
avg_check_time: 91ms
max_check_time: 91ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 14
avg_cost_improvement_abs: 0.375
avg_cost_improvement_rel: 0.0669643
Timing Stats: 
sum_check_time: 204ms
avg_check_time: 40.8ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 63ms
avg_check_time: 63ms
max_check_time: 63ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 1 4 2 1 
deqs:
0 0 1 1 1 4 2 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 1 4 2 1 
deqs:
0 0 1 1 1 4 2 
pkts metadata: 
0 [20, 21]  | [20, 21]  | [20, 21]  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 3]: cenq(0, t) = t
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) = t
[1, 6]: dst(0, t) = 20
[1, 6]: ecmp(0, t) = 21
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 3]: cenq(0, t) = t
[1, 6]: dst(0, t) = 20
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 2 3 1 
deqs:
0 0 3 1 1 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

Last valid workload: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

checking: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 1 3 1 
deqs:
0 0 2 2 2 1 3 
pkts metadata: 
0 [26, 27] [34, 35]  | [12, 13] [14, 15]  | [28, 29] [36, 37]  | [30, 31]  | [32, 33] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

Workload after combining: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 3]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7

checking: 
[1, 3]: cenq(0, t) <= t
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= t
[1, 4]: cenq(0, t) <= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [23, 24]  | [25, 26]  | [11, 12]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

checking: 
[1, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 3 1 
deqs:
0 0 0 2 1 3 3 
pkts metadata: 
0  | [11, 12] [13, 14]  | [26, 27]  | [28, 29] [36, 37] [46, 47]  | [30, 31] [38, 39] [48, 49]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

checking: 
[1, 2]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 2 3 3 1 
deqs:
0 0 0 2 2 3 3 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[2, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 292 milliseconds
Workload after restricting time ranges: 
[3, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

Final Workload: 
[3, 3]: cenq(0, t) <= t
[4, 6]: cenq(0, t) >= 7

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 100ms
avg_check_time: 50ms
max_check_time: 58ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 24
avg_cost_improvement_abs: 2.38609e+09
avg_cost_improvement_rel: 4.05636e+08
Timing Stats: 
sum_check_time: 158ms
avg_check_time: 52.6667ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.43166e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 40ms
avg_check_time: 40ms
max_check_time: 40ms
sum_call_time: 1ms
avg_call_time: 1ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 39
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.38487e+08
Timing Stats: 
sum_check_time: 414ms
avg_check_time: 37.6364ms
max_check_time: 56ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.43166e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 30ms
avg_check_time: 30ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 28
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.72277e+08
Timing Stats: 
sum_check_time: 40ms
avg_check_time: 20ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.72277e+08
Timing Stats: 
sum_check_time: 92ms
avg_check_time: 92ms
max_check_time: 92ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 18
avg_cost_improvement_abs: 0.444444
avg_cost_improvement_rel: 0.0873016
Timing Stats: 
sum_check_time: 288ms
avg_check_time: 57.6ms
max_check_time: 76ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 53ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 4 1 1 1 2 
deqs:
0 0 2 4 1 1 1 
pkts metadata: 
0 [0, 23] [0, 23]  | [0, 23] [0, 23] [21, 22] [21, 22]  | [0, 23]  | [0, 23]  | [0, 23]  | [0, 23] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 4 1 1 1 2 
deqs:
0 0 2 4 1 1 1 
pkts metadata: 
0 [0, 23] [0, 23]  | [0, 23] [0, 23] [21, 22] [21, 22]  | [0, 23]  | [0, 23]  | [0, 23]  | [0, 23] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[3, 5]: dst(0, t) = 0
[3, 5]: ecmp(0, t) = 23
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[3, 5]: dst(0, t) = 0
[3, 5]: ecmp(0, t) = 23
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[3, 5]: ecmp(0, t) = 23
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[3, 5]: ecmp(0, t) = 23
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[3, 5]: ecmp(0, t) = 23
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 5]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 3 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 3 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [11, 13] [14, 15] [16, 17]  | [30, 31]  | [32, 33]  | [34, 35]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 3 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 3 3 
deqs:
0 0 2 2 1 1 3 
pkts metadata: 
0 [23, 24] [31, 32]  | [25, 26] [33, 34]  | [27, 28]  | [11, 13]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 1]: cenq(0, t) = 2
[2, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 3 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 2 2 3 
deqs:
0 0 2 1 2 2 2 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 3 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

Workload after combining: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) <= 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 2 2 3 
deqs:
0 0 2 0 3 2 2 
pkts metadata: 
0 [20, 21] [30, 31]  |  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[1, 5]: cenq(0, t) <= 9
[3, 5]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 10 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 2 8 
deqs:
0 0 1 3 3 3 2 
pkts metadata: 
0 [41, 42]  | [11, 13] [18, 19] [25, 26]  | [14, 15] [21, 22] [27, 28]  | [16, 17] [23, 24] [29, 30]  | [43, 44] [47, 48]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 1 8 
deqs:
0 0 2 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 4]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 2 8 
deqs:
0 0 2 3 1 1 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 1 1 8 
deqs:
0 0 2 3 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 111 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 1]: cenq(0, t) <= 2
[3, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 127ms
avg_check_time: 42.3333ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 27
avg_cost_improvement_abs: 2.14748e+09
avg_cost_improvement_rel: 3.65072e+08
Timing Stats: 
sum_check_time: 139ms
avg_check_time: 27.8ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.28849e+09
avg_cost_improvement_rel: 1.93274e+08
Timing Stats: 
sum_check_time: 18ms
avg_check_time: 18ms
max_check_time: 18ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 43
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.37676e+08
Timing Stats: 
sum_check_time: 512ms
avg_check_time: 39.3846ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.28849e+09
avg_cost_improvement_rel: 1.93274e+08
Timing Stats: 
sum_check_time: 16ms
avg_check_time: 16ms
max_check_time: 16ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 32
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.70314e+08
Timing Stats: 
sum_check_time: 64ms
avg_check_time: 16ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.70314e+08
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 88ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 19
avg_cost_improvement_abs: 0.4
avg_cost_improvement_rel: 0.0785714
Timing Stats: 
sum_check_time: 108ms
avg_check_time: 36ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 97ms
avg_check_time: 48.5ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 6ms
avg_check_time: 2ms
max_check_time: 2ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 4 1 2 1 1 
deqs:
0 0 2 4 1 2 1 
pkts metadata: 
0 [23, 24] [23, 24]  | [23, 24] [23, 24] [21, 22] [21, 22]  | [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 4 1 2 1 1 
deqs:
0 0 2 4 1 2 1 
pkts metadata: 
0 [23, 24] [23, 24]  | [23, 24] [23, 24] [21, 22] [21, 22]  | [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 23
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 23
[3, 6]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 23
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 23
[3, 6]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 23
[3, 6]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 23
[3, 6]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[3, 6]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 1 1 
deqs:
0 0 3 3 1 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 1 1 
deqs:
0 0 3 3 1 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 1 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 2 1 1 
deqs:
0 0 2 3 2 2 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 1 1 
deqs:
0 0 3 3 1 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 1 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 2 1 1 
deqs:
0 0 2 3 2 2 1 
pkts metadata: 
0 [26, 27] [34, 35]  | [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39]  | [12, 13] [14, 15]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 1 0 2 1 1 
deqs:
0 0 3 3 1 2 1 
pkts metadata: 
0 [30, 31] [38, 39] [48, 49] [12, 13] [14, 15] [16, 17]  | [18, 19]  |  | [34, 35] [44, 45]  | [36, 37]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 1 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 3 1 0 
deqs:
0 0 2 3 2 3 1 
pkts metadata: 
0 [28, 29] [36, 37]  | [30, 31] [38, 39] [46, 47]  | [32, 33] [40, 41]  | [12, 13] [14, 15] [16, 17]  | [34, 35]  |  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 1 0 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  |  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 0 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  |  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 3 1 0 
deqs:
0 0 2 3 2 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  |  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 1]: cenq(0, t) = 2
[2, 3]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 3]: cenq(0, t) = t

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 1 1 
deqs:
0 0 2 0 1 3 1 
pkts metadata: 
0 [20, 21] [30, 31]  |  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = 2

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 1 1 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 1 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 1 1 
deqs:
0 0 2 2 3 3 1 
pkts metadata: 
0 [29, 30] [37, 38]  | [31, 32] [39, 40]  | [13, 14] [15, 16] [17, 18]  | [33, 34] [41, 42] [49, 50]  | [35, 36]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

Workload after combining: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[1, 3]: cenq(0, t) <= 7
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 2 10 
deqs:
0 0 2 3 1 3 2 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) = 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) <= 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 0 1 10 
deqs:
0 0 1 3 3 0 1 
pkts metadata: 
0 [28, 29]  | [11, 12] [13, 14] [15, 16]  | [30, 31] [38, 39] [46, 47]  |  | [34, 35]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 0
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 0 1 10 
deqs:
0 0 2 2 3 0 1 
pkts metadata: 
0 [27, 28] [35, 36]  | [29, 30] [37, 38]  | [11, 12] [13, 14] [15, 16]  |  | [33, 34]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 10 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 124 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

Final Workload: 
[1, 1]: cenq(0, t) <= 2
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 7

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 203ms
avg_check_time: 67.6667ms
max_check_time: 70ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 30
avg_cost_improvement_abs: 1.95226e+09
avg_cost_improvement_rel: 3.31884e+08
Timing Stats: 
sum_check_time: 299ms
avg_check_time: 59.8ms
max_check_time: 100ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.17135e+09
avg_cost_improvement_rel: 1.75703e+08
Timing Stats: 
sum_check_time: 30ms
avg_check_time: 30ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 19
opt_count: 48
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.34868e+08
Timing Stats: 
sum_check_time: 1049ms
avg_check_time: 55.2105ms
max_check_time: 113ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.17135e+09
avg_cost_improvement_rel: 1.75703e+08
Timing Stats: 
sum_check_time: 28ms
avg_check_time: 28ms
max_check_time: 28ms
sum_call_time: 1ms
avg_call_time: 1ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 36
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.67432e+08
Timing Stats: 
sum_check_time: 85ms
avg_check_time: 21.25ms
max_check_time: 23ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.67432e+08
Timing Stats: 
sum_check_time: 109ms
avg_check_time: 109ms
max_check_time: 109ms
sum_call_time: 1ms
avg_call_time: 1ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 22
avg_cost_improvement_abs: 0.363636
avg_cost_improvement_rel: 0.0714286
Timing Stats: 
sum_check_time: 121ms
avg_check_time: 40.3333ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 119ms
avg_check_time: 59.5ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 49ms
avg_check_time: 16.3333ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 1 3 4 1 
deqs:
0 0 1 1 1 3 4 
pkts metadata: 
0 [23, 24]  | [23, 24]  | [23, 24]  | [23, 24] [26, 24] [23, 27]  | [23, 24] [0, 21] [22, 21] [22, 21]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 1 3 4 1 
deqs:
0 0 1 1 1 3 4 
pkts metadata: 
0 [23, 24]  | [23, 24]  | [23, 24]  | [23, 24] [26, 24] [23, 27]  | [23, 24] [0, 21] [22, 21] [22, 21]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 23
[1, 3]: ecmp(0, t) = 24
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 23
[1, 3]: ecmp(0, t) = 24
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 23
[1, 3]: ecmp(0, t) = 24
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[1, 3]: dst(0, t) = 23
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 0 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [27, 28]  | [29, 30]  | [31, 32]  | [11, 12] [13, 14] [15, 16]  | [33, 34]  |  | 

checking: 
[1, 3]: cenq(0, t) = t
[2, 3]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 4 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [28, 29]  | [30, 31]  | [32, 33]  | [12, 13] [14, 15] [16, 17]  | [34, 35]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 1 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 1 4 
deqs:
0 0 1 1 1 3 1 
pkts metadata: 
0 [22, 23]  | [24, 25]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 2 1 
deqs:
0 0 3 1 1 3 2 
pkts metadata: 
0 [24, 25] [32, 33] [42, 43]  | [12, 13]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000]  | 

Last valid workload: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 3]: cenq(0, t) = t
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 2 3 2 1 
deqs:
0 0 1 2 2 3 2 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 2 1 
deqs:
0 0 1 1 1 3 2 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 2 3 
deqs:
0 0 1 1 1 3 2 
pkts metadata: 
0 [28, 29]  | [30, 31]  | [32, 33]  | [12, 13] [14, 15] [16, 17]  | [34, 35] [42, 43]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 3]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= t
[1, 6]: cenq(0, t) <= 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 2 3 1 1 
deqs:
0 0 1 0 2 3 1 
pkts metadata: 
0 [20, 21]  |  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 10 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [29, 30]  | [31, 32]  | [11, 12]  | [33, 34] [41, 42] [49, 50]  | [13, 14] [15, 16] [17, 18]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 10
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 3 1 
deqs:
0 0 0 0 3 3 3 
pkts metadata: 
0  |  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 3 2 
deqs:
0 0 0 0 3 3 3 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 3 3 1 
deqs:
0 0 0 2 3 3 3 
pkts metadata: 
0  | [13, 14] [19, 20]  | [15, 16] [21, 22] [25, 26]  | [17, 18] [23, 24] [27, 28]  | [40, 41] [44, 45] [50, 51]  | [1000, 1000]  | 

checking: 
[2, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 157 milliseconds
Workload after restricting time ranges: 
[3, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[3, 3]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 204ms
avg_check_time: 68ms
max_check_time: 117ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 33
avg_cost_improvement_abs: 1.78957e+09
avg_cost_improvement_rel: 3.04227e+08
Timing Stats: 
sum_check_time: 326ms
avg_check_time: 65.2ms
max_check_time: 133ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.07374e+09
avg_cost_improvement_rel: 1.61061e+08
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 53ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 9
opt_count: 51
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.395e+08
Timing Stats: 
sum_check_time: 399ms
avg_check_time: 44.3333ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.07374e+09
avg_cost_improvement_rel: 1.61061e+08
Timing Stats: 
sum_check_time: 35ms
avg_check_time: 35ms
max_check_time: 35ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 40
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69007e+08
Timing Stats: 
sum_check_time: 114ms
avg_check_time: 28.5ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.69007e+08
Timing Stats: 
sum_check_time: 118ms
avg_check_time: 118ms
max_check_time: 118ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 24
avg_cost_improvement_abs: 0.416667
avg_cost_improvement_rel: 0.0793651
Timing Stats: 
sum_check_time: 155ms
avg_check_time: 51.6667ms
max_check_time: 63ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 44ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 3 1 4 1 1 
deqs:
0 0 1 3 1 4 1 
pkts metadata: 
0 [0, 22]  | [0, 22] [0, 22] [0, 21]  | [0, 22]  | [0, 22] [23, 22] [0, 25] [23, 22]  | [0, 22]  | [0, 22]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 3 1 4 1 1 
deqs:
0 0 1 3 1 4 1 
pkts metadata: 
0 [0, 22]  | [0, 22] [0, 22] [0, 21]  | [0, 22]  | [0, 22] [23, 22] [0, 25] [23, 22]  | [0, 22]  | [0, 22]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 22
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 22
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 0
[5, 6]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 22
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 22
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 0
[5, 6]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 22
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 22
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 22
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 3]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 1 1 
deqs:
0 0 2 3 1 3 1 
pkts metadata: 
0 [28, 29] [36, 37]  | [12, 13] [14, 15] [16, 17]  | [30, 31]  | [32, 33] [40, 41] [48, 49]  | [34, 35]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 1 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 2 1 1 
deqs:
0 0 3 2 2 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 2 1 1 
deqs:
0 0 2 3 2 2 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 2 1 1 
deqs:
0 0 2 3 0 2 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 3 1 2 
deqs:
0 0 2 3 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 5
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 2 1 0 
deqs:
0 0 3 3 2 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31]  |  | 

checking: 
[3, 3]: cenq(0, t) = 5
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 3 1 2 
deqs:
0 0 3 0 2 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 3 1 1 
deqs:
0 0 3 0 2 3 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

Workload after combining: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 2 2 2 
deqs:
0 0 1 3 1 2 2 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[1, 6]: cenq(0, t) <= 11
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 1 1 
deqs:
0 0 0 2 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 2 3 10 
deqs:
0 0 3 0 2 2 3 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  |  | [32, 33] [40, 41]  | [34, 35] [42, 43]  | [11, 12] [13, 14] [15, 16]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 3 1 1 
deqs:
0 0 2 2 1 3 1 
pkts metadata: 
0 [29, 30] [35, 36]  | [11, 12] [37, 38]  | [31, 32]  | [13, 14] [15, 16] [17, 18]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

checking: 
[1, 2]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 1 1 
deqs:
0 0 3 0 3 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 1 0 10 
deqs:
0 0 2 0 3 1 0 
pkts metadata: 
0 [27, 28] [35, 36]  |  | [11, 12] [13, 14] [15, 17]  | [31, 32]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 3 1 
deqs:
0 0 2 0 3 3 3 
pkts metadata: 
0 [24, 25] [32, 33]  |  | [28, 29] [36, 37] [46, 47]  | [30, 31] [38, 39] [48, 49]  | [13, 14] [40, 41] [50, 51]  | [1000, 1000]  | 

restrict_time_ranges took 616 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

Final Workload: 
[1, 3]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 221ms
avg_check_time: 73.6667ms
max_check_time: 98ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 36
avg_cost_improvement_abs: 1.98229e+09
avg_cost_improvement_rel: 3.22123e+08
Timing Stats: 
sum_check_time: 514ms
avg_check_time: 102.8ms
max_check_time: 157ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.32153e+09
avg_cost_improvement_rel: 1.8997e+08
Timing Stats: 
sum_check_time: 57ms
avg_check_time: 57ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 56
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.36983e+08
Timing Stats: 
sum_check_time: 769ms
avg_check_time: 64.0833ms
max_check_time: 115ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.32153e+09
avg_cost_improvement_rel: 1.8997e+08
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 42ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 45
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.65702e+08
Timing Stats: 
sum_check_time: 123ms
avg_check_time: 24.6ms
max_check_time: 29ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.65702e+08
Timing Stats: 
sum_check_time: 100ms
avg_check_time: 100ms
max_check_time: 100ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 26
avg_cost_improvement_abs: 0.384615
avg_cost_improvement_rel: 0.0732601
Timing Stats: 
sum_check_time: 609ms
avg_check_time: 121.8ms
max_check_time: 277ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 151ms
avg_check_time: 75.5ms
max_check_time: 89ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 3.66667ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 2 1 4 1 2 
deqs:
0 0 1 2 1 4 1 
pkts metadata: 
0 [25, 26]  | [25, 26] [21, 22]  | [25, 26]  | [25, 26] [24, 23] [24, 23] [24, 23]  | [25, 26]  | [25, 26] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 2 1 4 1 2 
deqs:
0 0 1 2 1 4 1 
pkts metadata: 
0 [25, 26]  | [25, 26] [21, 22]  | [25, 26]  | [25, 26] [24, 23] [24, 23] [24, 23]  | [25, 26]  | [25, 26] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 26
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 26
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 26
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 26
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 25
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 1 2 
deqs:
0 0 3 1 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 1 2 
deqs:
0 0 2 0 3 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 3 1 3 
deqs:
0 0 2 0 2 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 2 3 2 
deqs:
0 0 2 0 2 2 3 
pkts metadata: 
0 [22, 23] [32, 33]  |  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 4
[4, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 4
[4, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 2 1 10 
deqs:
0 0 3 2 1 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 3 1 5 
deqs:
0 0 3 0 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 3 2 5 
deqs:
0 0 3 0 1 3 2 
pkts metadata: 
0 [24, 25] [32, 33] [42, 43]  |  | [11, 12]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

Workload after combining: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: cenq(0, t) = 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[1, 5]: cenq(0, t) <= 9
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 1 5 
deqs:
0 0 2 0 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  |  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) = 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) <= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 3 5 
deqs:
0 0 0 2 1 3 3 
pkts metadata: 
0  | [11, 12] [16, 17]  | [34, 35]  | [13, 15] [18, 19] [20, 21]  | [36, 37] [42, 43] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 2 3 5 
deqs:
0 0 3 1 0 2 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 3 1 5 
deqs:
0 0 3 1 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 1 5 
deqs:
0 0 3 1 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 305 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 3]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 171ms
avg_check_time: 57ms
max_check_time: 74ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 39
avg_cost_improvement_abs: 2.14748e+09
avg_cost_improvement_rel: 3.37462e+08
Timing Stats: 
sum_check_time: 389ms
avg_check_time: 77.8ms
max_check_time: 96ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.53392e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 48ms
avg_check_time: 48ms
max_check_time: 48ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 61
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.34826e+08
Timing Stats: 
sum_check_time: 491ms
avg_check_time: 44.6364ms
max_check_time: 59ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.53392e+09
avg_cost_improvement_rel: 2.14748e+08
Timing Stats: 
sum_check_time: 46ms
avg_check_time: 46ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 51
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.62063e+08
Timing Stats: 
sum_check_time: 109ms
avg_check_time: 18.1667ms
max_check_time: 25ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.62063e+08
Timing Stats: 
sum_check_time: 89ms
avg_check_time: 89ms
max_check_time: 89ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 29
avg_cost_improvement_abs: 0.357143
avg_cost_improvement_rel: 0.0680272
Timing Stats: 
sum_check_time: 301ms
avg_check_time: 75.25ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 125ms
avg_check_time: 62.5ms
max_check_time: 71ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 6ms
avg_check_time: 2ms
max_check_time: 2ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 2 1 4 2 1 
deqs:
0 0 1 2 1 4 2 
pkts metadata: 
0 [25, 26]  | [25, 26] [21, 22]  | [25, 26]  | [25, 26] [23, 24] [23, 24] [23, 24]  | [25, 26] [30, 31]  | [25, 26]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 2 1 4 2 1 
deqs:
0 0 1 2 1 4 2 
pkts metadata: 
0 [25, 26]  | [25, 26] [21, 22]  | [25, 26]  | [25, 26] [23, 24] [23, 24] [23, 24]  | [25, 26] [30, 31]  | [25, 26]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 26
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 4
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 2 1 
deqs:
0 0 3 1 1 3 2 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 3 2 1 
deqs:
0 0 3 2 0 3 2 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  |  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 0 3 3 1 
deqs:
0 0 2 2 0 3 3 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 3 2 1 
deqs:
0 0 3 2 0 3 2 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45] [12, 13]  | [14, 15]  |  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 3 3 1 
deqs:
0 0 3 0 1 3 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 3 2 1 
deqs:
0 0 2 1 2 3 2 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 1 3 2 1 
deqs:
0 0 2 1 1 3 2 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 3 2 
deqs:
0 0 3 1 1 3 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 3 3 2 
deqs:
0 0 3 1 0 3 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

Workload after combining: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 8

checking: 
[1, 3]: cenq(0, t) <= 4
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[1, 4]: cenq(0, t) <= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 2 1 2 
deqs:
0 0 3 1 0 2 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  |  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 3 2 2 
deqs:
0 0 3 0 1 3 2 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 2 2 
deqs:
0 0 2 0 3 3 2 
pkts metadata: 
0 [22, 23] [32, 33]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 219 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

Final Workload: 
[1, 3]: cenq(0, t) <= 4
[4, 6]: cenq(0, t) >= 8

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 94ms
avg_check_time: 47ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 41
avg_cost_improvement_abs: 2.29065e+09
avg_cost_improvement_rel: 3.62686e+08
Timing Stats: 
sum_check_time: 149ms
avg_check_time: 49.6667ms
max_check_time: 65ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.71799e+09
avg_cost_improvement_rel: 2.48154e+08
Timing Stats: 
sum_check_time: 59ms
avg_check_time: 59ms
max_check_time: 59ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 67
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32957e+08
Timing Stats: 
sum_check_time: 644ms
avg_check_time: 46ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.71799e+09
avg_cost_improvement_rel: 2.48154e+08
Timing Stats: 
sum_check_time: 61ms
avg_check_time: 61ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 57
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58909e+08
Timing Stats: 
sum_check_time: 119ms
avg_check_time: 19.8333ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58909e+08
Timing Stats: 
sum_check_time: 86ms
avg_check_time: 86ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 33
avg_cost_improvement_abs: 0.333333
avg_cost_improvement_rel: 0.0634921
Timing Stats: 
sum_check_time: 216ms
avg_check_time: 43.2ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 56ms
avg_check_time: 56ms
max_check_time: 56ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 2 2 4 1 
deqs:
0 0 1 1 2 2 4 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23] [25, 26]  | [22, 23] [21, 23] [21, 0] [21, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 2 2 4 1 
deqs:
0 0 1 1 2 2 4 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23] [25, 26]  | [22, 23] [21, 23] [21, 0] [21, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 3 1 
deqs:
0 0 1 1 2 3 3 
pkts metadata: 
0 [27, 28]  | [29, 30]  | [31, 32] [39, 40]  | [12, 13] [14, 15] [16, 17]  | [33, 34] [41, 42] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 2 3 1 
deqs:
0 0 1 1 3 2 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 3 1 
deqs:
0 0 1 1 2 3 3 
pkts metadata: 
0 [31, 32]  | [33, 34]  | [12, 13] [16, 17]  | [14, 15] [18, 19] [20, 21]  | [35, 36] [41, 42] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 6
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 1 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [26, 27]  | [28, 29]  | [30, 31]  | [11, 12] [13, 14] [15, 16]  | [32, 33] [40, 41] [48, 49]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 3 2 
deqs:
0 0 1 1 1 3 3 
pkts metadata: 
0 [27, 28]  | [29, 30]  | [31, 32]  | [12, 13] [14, 15] [16, 17]  | [33, 34] [41, 42] [49, 50]  | [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 6
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 6
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 6
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 10 1 0 0 0 0 
deqs:
0 0 3 3 3 2 0 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53] [60, 61] [68, 69] [74, 75] [80, 81] [86, 87] [90, 91]  | [24, 25]  |  |  |  |  | 

checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 1 0 0 
deqs:
0 0 2 1 2 1 0 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28]  |  |  | 

checking: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 1 0 5 
deqs:
0 0 2 1 2 1 0 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[1, 6]: cenq(0, t) <= 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 1 0 0 
deqs:
0 0 3 0 2 1 0 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  | [24, 25] [34, 35]  | [26, 27]  |  |  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 1 0 10 
deqs:
0 0 2 3 0 1 0 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 10
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 0 3 1 
deqs:
0 0 3 2 1 0 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  | [25, 26]  |  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 0 3 2 
deqs:
0 0 3 2 1 0 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  | [25, 26]  |  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 2 2 2 1 
deqs:
0 0 3 1 2 2 2 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42] [51, 52]  |  | [27, 28] [35, 36]  | [12, 13] [37, 38]  | [29, 30] [39, 40]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 270 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 259ms
avg_check_time: 86.3333ms
max_check_time: 177ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 44
avg_cost_improvement_abs: 2.41592e+09
avg_cost_improvement_rel: 3.78366e+08
Timing Stats: 
sum_check_time: 392ms
avg_check_time: 78.4ms
max_check_time: 147ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.87905e+09
avg_cost_improvement_rel: 2.70992e+08
Timing Stats: 
sum_check_time: 132ms
avg_check_time: 132ms
max_check_time: 132ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 71
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32796e+08
Timing Stats: 
sum_check_time: 487ms
avg_check_time: 48.7ms
max_check_time: 137ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 1.87905e+09
avg_cost_improvement_rel: 2.70992e+08
Timing Stats: 
sum_check_time: 73ms
avg_check_time: 73ms
max_check_time: 73ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 61
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58517e+08
Timing Stats: 
sum_check_time: 110ms
avg_check_time: 27.5ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58517e+08
Timing Stats: 
sum_check_time: 86ms
avg_check_time: 86ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 36
avg_cost_improvement_abs: 0.3125
avg_cost_improvement_rel: 0.0595238
Timing Stats: 
sum_check_time: 266ms
avg_check_time: 66.5ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 178ms
avg_check_time: 89ms
max_check_time: 126ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 4 2 1 1 1 
deqs:
0 0 2 4 2 1 1 
pkts metadata: 
0 [21, 0] [21, 0]  | [21, 0] [21, 0] [21, 0] [21, 0]  | [21, 0] [0, 27]  | [21, 0]  | [21, 0]  | [21, 0]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 4 2 1 1 1 
deqs:
0 0 2 4 2 1 1 
pkts metadata: 
0 [21, 0] [21, 0]  | [21, 0] [21, 0] [21, 0] [21, 0]  | [21, 0] [0, 27]  | [21, 0]  | [21, 0]  | [21, 0]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[1, 2]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 0
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[1, 2]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 0
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 0
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 0
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 0
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 1 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [24, 25] [32, 33] [42, 43]  | [26, 27] [34, 35] [44, 45]  | [28, 29] [36, 37]  | [12, 13]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 1 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [12, 13] [14, 15] [16, 17]  | [30, 31] [38, 39]  | [32, 33]  | [34, 35]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 1 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [28, 29] [36, 37]  | [30, 31] [38, 39] [46, 47]  | [12, 13] [14, 15] [16, 17]  | [32, 33]  | [34, 35]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 0 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  | [12, 13] [16, 17] [20, 21]  | [14, 15] [18, 19] [22, 23]  | [36, 37]  | [38, 39]  |  | 

checking: 
[1, 1]: cenq(0, t) = 2
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [13, 14] [15, 16] [17, 18]  | [31, 32] [39, 40] [47, 48]  | [33, 34]  | [35, 36]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [31, 32]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 2

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 1 1 1 
deqs:
0 0 2 3 0 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

Workload after combining: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 6

checking: 
[1, 1]: cenq(0, t) <= 2
[2, 2]: cenq(0, t) = 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[1, 2]: cenq(0, t) <= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 0 3 1 1 
deqs:
0 0 2 2 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 3 1 1 
deqs:
0 0 2 3 0 3 1 
pkts metadata: 
0 [27, 28] [35, 36]  | [29, 30] [37, 38] [45, 46]  |  | [11, 12] [13, 14] [15, 16]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 126 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

Final Workload: 
[1, 1]: cenq(0, t) <= 2
[2, 6]: cenq(0, t) >= 6

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 161ms
avg_check_time: 80.5ms
max_check_time: 84ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 46
avg_cost_improvement_abs: 2.52645e+09
avg_cost_improvement_rel: 4.06638e+08
Timing Stats: 
sum_check_time: 111ms
avg_check_time: 37ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.02116e+09
avg_cost_improvement_rel: 3.0558e+08
Timing Stats: 
sum_check_time: 39ms
avg_check_time: 39ms
max_check_time: 39ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 76
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32654e+08
Timing Stats: 
sum_check_time: 751ms
avg_check_time: 46.9375ms
max_check_time: 76ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.02116e+09
avg_cost_improvement_rel: 3.0558e+08
Timing Stats: 
sum_check_time: 38ms
avg_check_time: 38ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 65
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58172e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 19.75ms
max_check_time: 22ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58172e+08
Timing Stats: 
sum_check_time: 94ms
avg_check_time: 94ms
max_check_time: 94ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 40
avg_cost_improvement_abs: 0.294118
avg_cost_improvement_rel: 0.0560224
Timing Stats: 
sum_check_time: 122ms
avg_check_time: 30.5ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 54ms
avg_check_time: 54ms
max_check_time: 54ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 2 4 1 1 2 
deqs:
0 0 1 2 4 1 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 2 4 1 1 2 
deqs:
0 0 1 2 4 1 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 1 2 
deqs:
0 0 3 3 1 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 1 2 
deqs:
0 0 2 2 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 1 0 2 
deqs:
0 0 3 2 3 1 0 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 1 0 4 
deqs:
0 0 2 1 3 1 0 
pkts metadata: 
0 [27, 28] [35, 36]  | [29, 30]  | [12, 13] [14, 15] [16, 17]  | [31, 32]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 4 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 1 1 4 
deqs:
0 0 3 0 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 1 2 4 
deqs:
0 0 3 0 3 1 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 3
[3, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 3
[3, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 3
[3, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 1 6 
deqs:
0 0 2 2 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 2 2 6 
deqs:
0 0 2 1 2 2 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 2 1 1 6 
deqs:
0 0 1 2 2 1 1 
pkts metadata: 
0 [23, 24]  | [25, 26] [33, 34]  | [27, 28] [35, 36]  | [11, 12]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

Workload after combining: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) <= 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 3 6 
deqs:
0 0 2 0 1 3 3 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 5]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[1, 5]: cenq(0, t) <= 9
[4, 5]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 1 0 6 
deqs:
0 0 3 0 2 1 0 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37]  | [28, 29]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 3 6 
deqs:
0 0 0 2 1 3 3 
pkts metadata: 
0  | [11, 12] [18, 19]  | [39, 40]  | [13, 14] [20, 21] [24, 25]  | [16, 17] [22, 23] [26, 27]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 6 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 4 1 0 6 
deqs:
0 0 3 3 3 3 0 
pkts metadata: 
0 [40, 41] [46, 47] [52, 53]  | [13, 14] [17, 19] [22, 23] [15, 16]  | [20, 21] [24, 25] [26, 27] [28, 29]  | [42, 43]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[4, 4]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 1 3 9 
deqs:
0 0 2 0 3 1 3 
pkts metadata: 
0 [25, 26] [33, 34]  |  | [11, 12] [13, 14] [45, 46]  | [29, 30]  | [31, 32] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 3 1 5 
deqs:
0 0 2 1 2 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 563 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 2]: cenq(0, t) <= 3
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 140ms
avg_check_time: 46.6667ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 49
avg_cost_improvement_abs: 2.6247e+09
avg_cost_improvement_rel: 4.10559e+08
Timing Stats: 
sum_check_time: 390ms
avg_check_time: 78ms
max_check_time: 123ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.14748e+09
avg_cost_improvement_rel: 3.15116e+08
Timing Stats: 
sum_check_time: 31ms
avg_check_time: 31ms
max_check_time: 31ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 80
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32527e+08
Timing Stats: 
sum_check_time: 608ms
avg_check_time: 50.6667ms
max_check_time: 80ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.14748e+09
avg_cost_improvement_rel: 3.15116e+08
Timing Stats: 
sum_check_time: 29ms
avg_check_time: 29ms
max_check_time: 29ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 67
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59736e+08
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 21ms
max_check_time: 24ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59736e+08
Timing Stats: 
sum_check_time: 95ms
avg_check_time: 95ms
max_check_time: 95ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 42
avg_cost_improvement_abs: 0.277778
avg_cost_improvement_rel: 0.0529101
Timing Stats: 
sum_check_time: 555ms
avg_check_time: 111ms
max_check_time: 187ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 240ms
avg_check_time: 120ms
max_check_time: 178ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 7ms
avg_check_time: 2.33333ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 2 4 1 1 1 
deqs:
0 0 2 2 4 1 1 
pkts metadata: 
0 [21, 22] [21, 22]  | [21, 22] [21, 22]  | [21, 22] [23, 24] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 2 4 1 1 1 
deqs:
0 0 2 2 4 1 1 
pkts metadata: 
0 [21, 22] [21, 22]  | [21, 22] [21, 22]  | [21, 22] [23, 24] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[1, 2]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[1, 2]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: dst(0, t) = 21
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[1, 2]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[4, 6]: ecmp(0, t) = 22
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 3 1 1 1 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53] [62, 63]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 1 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 1 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [24, 25] [32, 33]  | [26, 27] [34, 35] [44, 45]  | [12, 13] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 2 3 2 0 
deqs:
0 0 1 3 2 3 2 
pkts metadata: 
0 [32, 33]  | [12, 13] [16, 17] [20, 21]  | [14, 15] [18, 19]  | [34, 35] [40, 41] [48, 49]  | [36, 37] [42, 43]  |  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 4
[3, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[3, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[3, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 1 1 1 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [26, 27] [32, 33] [42, 43]  | [28, 29] [34, 35] [44, 45] [54, 55]  | [30, 31]  | [12, 13]  | [14, 15]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 1 1 3 
deqs:
0 0 3 1 2 1 1 
pkts metadata: 
0 [31, 32] [33, 34] [41, 42]  | [12, 13]  | [14, 15] [20, 21]  | [16, 17]  | [18, 19]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 1 1 1 
deqs:
0 0 3 1 2 1 1 
pkts metadata: 
0 [31, 32] [33, 34] [41, 42]  | [11, 12]  | [13, 14] [19, 20]  | [15, 16]  | [17, 18]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

Workload after combining: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 1 3 2 3 
deqs:
0 0 1 1 1 3 2 
pkts metadata: 
0 [22, 23]  | [24, 25]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[1, 6]: cenq(0, t) <= 11
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 1 0 1 
deqs:
0 0 2 0 3 1 0 
pkts metadata: 
0 [19, 20] [29, 30]  |  | [23, 24] [33, 34] [43, 44]  | [25, 26]  |  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 3 10 
deqs:
0 0 0 2 1 3 3 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [27, 28]  | [11, 12] [13, 14] [15, 16]  | [29, 30] [37, 38] [45, 46]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

checking: 
[1, 1]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 1 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [34, 35] [40, 41]  | [12, 13] [16, 17] [20, 21]  | [14, 15] [18, 19] [22, 23]  | [36, 37]  | [38, 39]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 1 0 10 
deqs:
0 0 0 3 2 1 0 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 3 1 1 
deqs:
0 0 3 1 2 3 1 
pkts metadata: 
0 [24, 25] [32, 33] [42, 43]  | [12, 13]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

restrict_time_ranges took 239 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

Final Workload: 
[1, 2]: cenq(0, t) <= 4
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 171ms
avg_check_time: 57ms
max_check_time: 74ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 52
avg_cost_improvement_abs: 2.71261e+09
avg_cost_improvement_rel: 4.17207e+08
Timing Stats: 
sum_check_time: 429ms
avg_check_time: 85.8ms
max_check_time: 119ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.26051e+09
avg_cost_improvement_rel: 3.26787e+08
Timing Stats: 
sum_check_time: 57ms
avg_check_time: 57ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 84
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.32415e+08
Timing Stats: 
sum_check_time: 722ms
avg_check_time: 65.6364ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.26051e+09
avg_cost_improvement_rel: 3.26787e+08
Timing Stats: 
sum_check_time: 50ms
avg_check_time: 50ms
max_check_time: 50ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 71
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59363e+08
Timing Stats: 
sum_check_time: 140ms
avg_check_time: 35ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59363e+08
Timing Stats: 
sum_check_time: 123ms
avg_check_time: 123ms
max_check_time: 123ms
sum_call_time: 1ms
avg_call_time: 1ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 43
avg_cost_improvement_abs: 0.263158
avg_cost_improvement_rel: 0.0501253
Timing Stats: 
sum_check_time: 236ms
avg_check_time: 59ms
max_check_time: 81ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 166ms
avg_check_time: 83ms
max_check_time: 109ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 3.66667ms
max_check_time: 5ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 1 4 2 1 1 
deqs:
0 0 2 1 4 2 1 
pkts metadata: 
0 [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 1 4 2 1 1 
deqs:
0 0 2 1 4 2 1 
pkts metadata: 
0 [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 21
[1, 6]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: dst(0, t) = 21
[1, 6]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 6]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 2 1 1 
deqs:
0 0 3 1 3 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 2 1 1 
deqs:
0 0 3 1 3 2 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 3 1 1 
deqs:
0 0 2 1 3 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 2 1 1 
deqs:
0 0 3 2 2 2 1 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  | [12, 13] [14, 15]  | [28, 29] [36, 37]  | [30, 31] [38, 39]  | [32, 33]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[5, 5]: cenq(0, t) = 10
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 3 3 1 1 
deqs:
0 0 1 2 3 3 1 
pkts metadata: 
0 [26, 27]  | [12, 13] [14, 15]  | [28, 29] [36, 37] [46, 47]  | [30, 31] [38, 39] [48, 49]  | [32, 33]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 0 3 1 0 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [12, 13] [14, 15] [16, 17] [18, 19]  |  | [34, 35] [42, 43] [50, 51]  | [36, 37]  |  | 

checking: 
[2, 2]: cenq(0, t) = 3
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 1 1 
deqs:
0 0 0 3 3 3 1 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 1 1 
deqs:
0 0 1 3 3 3 1 
pkts metadata: 
0 [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 3 1 1 
deqs:
0 0 2 1 3 3 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 0 2 5 
deqs:
0 0 3 3 1 0 2 
pkts metadata: 
0 [32, 33] [38, 39] [44, 45]  | [11, 12] [16, 17] [20, 21]  | [34, 35]  |  | [13, 15] [18, 19]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 3

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 0 2 8 
deqs:
0 0 3 0 3 0 2 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  |  | [30, 31] [38, 39] [46, 47]  |  | [11, 12] [13, 14]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

Workload after combining: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 7

checking: 
[1, 2]: cenq(0, t) <= 3
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[1, 3]: cenq(0, t) <= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 2 0 
deqs:
0 0 3 0 0 3 2 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  |  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 2 0 
deqs:
0 0 0 3 3 3 2 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  |  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

checking: 
[1, 1]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 0 2 0 
deqs:
0 0 2 3 2 0 2 
pkts metadata: 
0 [29, 30] [35, 36]  | [31, 32] [37, 38] [43, 44]  | [11, 12] [15, 16]  |  | [13, 14] [17, 18]  |  | 

checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 272 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

Final Workload: 
[1, 2]: cenq(0, t) <= 3
[3, 6]: cenq(0, t) >= 7

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 96ms
avg_check_time: 48ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 54
avg_cost_improvement_abs: 2.79173e+09
avg_cost_improvement_rel: 4.32138e+08
Timing Stats: 
sum_check_time: 99ms
avg_check_time: 33ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.36223e+09
avg_cost_improvement_rel: 3.46239e+08
Timing Stats: 
sum_check_time: 36ms
avg_check_time: 36ms
max_check_time: 36ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 90
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.31133e+08
Timing Stats: 
sum_check_time: 1005ms
avg_check_time: 62.8125ms
max_check_time: 134ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.36223e+09
avg_cost_improvement_rel: 3.46239e+08
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 42ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 73
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59817e+08
Timing Stats: 
sum_check_time: 65ms
avg_check_time: 32.5ms
max_check_time: 37ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59817e+08
Timing Stats: 
sum_check_time: 191ms
avg_check_time: 191ms
max_check_time: 191ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 47
avg_cost_improvement_abs: 0.25
avg_cost_improvement_rel: 0.047619
Timing Stats: 
sum_check_time: 268ms
avg_check_time: 53.6ms
max_check_time: 70ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 45ms
avg_check_time: 45ms
max_check_time: 45ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 3 1 4 1 2 
deqs:
0 0 1 3 1 4 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 3 1 4 1 2 
deqs:
0 0 1 3 1 4 1 
pkts metadata: 
0 [21, 22]  | [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 5]: dst(0, t) = 21
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 2 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 1 2 
deqs:
0 0 0 3 3 3 1 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 2 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 1 1 5 
deqs:
0 0 3 2 0 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  |  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 2 3 2 
deqs:
0 0 2 3 0 2 3 
pkts metadata: 
0 [28, 29] [36, 37]  | [11, 13] [14, 15] [16, 17]  |  | [32, 33] [40, 41]  | [34, 35] [42, 43] [50, 51]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 5
[4, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 9 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 3 1 9 
deqs:
0 0 3 2 0 3 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 2 3 9 
deqs:
0 0 3 2 0 2 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

Workload after combining: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: cenq(0, t) = 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[1, 5]: cenq(0, t) <= 10
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 0 1 1 3 
deqs:
0 0 3 2 0 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52] [61, 62]  |  |  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) = 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) <= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 3 3 
deqs:
0 0 1 1 2 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 3 5 
deqs:
0 0 1 1 2 3 3 
pkts metadata: 
0 [30, 31]  | [11, 12]  | [32, 33] [40, 41]  | [13, 14] [16, 17] [18, 19]  | [34, 35] [42, 43] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 1 5 
deqs:
0 0 3 1 1 3 1 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44]  | [29, 30]  | [31, 32]  | [11, 12] [13, 15] [16, 17]  | [33, 34]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 2]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 3 1 5 
deqs:
0 0 3 1 2 3 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 312 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 3]: cenq(0, t) <= 5
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 235ms
avg_check_time: 78.3333ms
max_check_time: 113ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 57
avg_cost_improvement_abs: 2.86331e+09
avg_cost_improvement_rel: 4.37126e+08
Timing Stats: 
sum_check_time: 414ms
avg_check_time: 82.8ms
max_check_time: 126ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.45427e+09
avg_cost_improvement_rel: 3.55317e+08
Timing Stats: 
sum_check_time: 80ms
avg_check_time: 80ms
max_check_time: 80ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 95
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.29973e+08
Timing Stats: 
sum_check_time: 892ms
avg_check_time: 81.0909ms
max_check_time: 138ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.45427e+09
avg_cost_improvement_rel: 3.55317e+08
Timing Stats: 
sum_check_time: 147ms
avg_check_time: 147ms
max_check_time: 147ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 75
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60227e+08
Timing Stats: 
sum_check_time: 54ms
avg_check_time: 27ms
max_check_time: 29ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60227e+08
Timing Stats: 
sum_check_time: 112ms
avg_check_time: 112ms
max_check_time: 112ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 50
avg_cost_improvement_abs: 0.238095
avg_cost_improvement_rel: 0.0453515
Timing Stats: 
sum_check_time: 308ms
avg_check_time: 77ms
max_check_time: 166ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 151ms
avg_check_time: 75.5ms
max_check_time: 102ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 7ms
avg_check_time: 2.33333ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 3 1 4 2 1 
deqs:
0 0 1 3 1 4 2 
pkts metadata: 
0 [23, 24]  | [23, 24] [0, 25] [23, 24]  | [23, 24]  | [23, 24] [22, 24] [22, 24] [22, 24]  | [23, 24] [26, 27]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 3 1 4 2 1 
deqs:
0 0 1 3 1 4 2 
pkts metadata: 
0 [23, 24]  | [23, 24] [0, 25] [23, 24]  | [23, 24]  | [23, 24] [22, 24] [22, 24] [22, 24]  | [23, 24] [26, 27]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[3, 4]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[3, 4]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[3, 4]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 23
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 2 1 
deqs:
0 0 3 2 1 3 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 2 1 
deqs:
0 0 2 3 3 1 2 
pkts metadata: 
0 [35, 36] [39, 40]  | [13, 14] [19, 20] [47, 48]  | [15, 16] [21, 22] [23, 24]  | [17, 18]  | [37, 38] [43, 44]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 3 1 
deqs:
0 0 2 0 3 3 3 
pkts metadata: 
0 [23, 24] [33, 34]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 2 1 
deqs:
0 0 3 0 3 3 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 3 3 1 
deqs:
0 0 3 0 2 3 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 2 3 1 
deqs:
0 0 3 2 2 2 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 2 3 1 
deqs:
0 0 3 2 0 2 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 3 3 4 
deqs:
0 0 2 2 2 3 3 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 3 3 4 
deqs:
0 0 2 2 1 3 3 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

Workload after combining: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 9

checking: 
[1, 3]: cenq(0, t) <= 5
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[1, 4]: cenq(0, t) <= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 0 3 0 2 
deqs:
0 0 2 1 0 3 0 
pkts metadata: 
0 [23, 24] [31, 32]  | [11, 12]  |  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 3 0 2 
deqs:
0 0 0 2 3 3 0 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 3 3 0 2 
deqs:
0 0 1 2 3 3 0 
pkts metadata: 
0 [28, 29]  | [30, 31] [38, 39]  | [12, 13] [14, 15] [16, 17]  | [32, 33] [40, 41] [48, 49]  |  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 333 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 3]: cenq(0, t) <= 5
[4, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 139ms
avg_check_time: 69.5ms
max_check_time: 84ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 59
avg_cost_improvement_abs: 2.92839e+09
avg_cost_improvement_rel: 4.49794e+08
Timing Stats: 
sum_check_time: 197ms
avg_check_time: 65.6667ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.53794e+09
avg_cost_improvement_rel: 3.71704e+08
Timing Stats: 
sum_check_time: 134ms
avg_check_time: 134ms
max_check_time: 134ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 101
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.28919e+08
Timing Stats: 
sum_check_time: 962ms
avg_check_time: 68.7143ms
max_check_time: 110ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.53794e+09
avg_cost_improvement_rel: 3.71704e+08
Timing Stats: 
sum_check_time: 101ms
avg_check_time: 101ms
max_check_time: 101ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 81
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5816e+08
Timing Stats: 
sum_check_time: 131ms
avg_check_time: 21.8333ms
max_check_time: 33ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5816e+08
Timing Stats: 
sum_check_time: 97ms
avg_check_time: 97ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 54
avg_cost_improvement_abs: 0.227273
avg_cost_improvement_rel: 0.04329
Timing Stats: 
sum_check_time: 329ms
avg_check_time: 65.8ms
max_check_time: 115ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 104ms
avg_check_time: 104ms
max_check_time: 104ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 2 2 4 1 1 
deqs:
0 0 2 2 2 4 1 
pkts metadata: 
0 [24, 25] [35, 25]  | [24, 25] [26, 29]  | [24, 25] [24, 29]  | [24, 25] [24, 29] [22, 29] [23, 29]  | [24, 25]  | [24, 25]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 2 2 4 1 1 
deqs:
0 0 2 2 2 4 1 
pkts metadata: 
0 [24, 25] [35, 25]  | [24, 25] [26, 29]  | [24, 25] [24, 29]  | [24, 25] [24, 29] [22, 29] [23, 29]  | [24, 25]  | [24, 25]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[3, 3]: dst(0, t) = 24
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 24
[5, 6]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[3, 3]: dst(0, t) = 24
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 24
[5, 6]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[5, 6]: dst(0, t) = 24
[5, 6]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 1 1 
deqs:
0 0 1 3 3 3 1 
pkts metadata: 
0 [29, 30]  | [31, 32] [39, 40] [47, 48]  | [13, 14] [15, 16] [17, 18]  | [33, 34] [41, 42] [49, 50]  | [35, 36]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 1 1 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [31, 32] [37, 38] [45, 46]  | [13, 14] [17, 18] [19, 20]  | [15, 16]  | [33, 34] [41, 42] [49, 50]  | [35, 36]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 3 1 1 
deqs:
0 0 3 2 2 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 1 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [28, 29] [34, 35] [42, 43]  | [12, 13] [16, 17]  | [14, 15]  | [30, 31] [38, 39] [48, 49]  | [32, 33]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 3 1 2 
deqs:
0 0 3 2 1 3 1 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  | [11, 13] [14, 15]  | [28, 29]  | [30, 31] [38, 39] [48, 49]  | [32, 33]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 6
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 1 1 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 2 2 2 
deqs:
0 0 3 3 0 2 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 3 1 1 
deqs:
0 0 3 3 0 3 1 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  | [12, 13] [16, 17] [20, 21]  |  | [14, 15] [18, 19] [22, 23]  | [38, 39]  | [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

Workload after combining: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 0 2 4 
deqs:
0 0 3 3 0 0 2 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [11, 13] [14, 15] [16, 17]  |  |  | [34, 35] [42, 43]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[1, 6]: cenq(0, t) <= 12
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 1 1 1 
deqs:
0 0 2 3 0 1 1 
pkts metadata: 
0 [26, 27] [34, 35]  | [11, 12] [13, 14] [15, 16]  |  | [30, 31]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 0 10 
deqs:
0 0 3 0 0 3 0 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  |  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 1 1 
deqs:
0 0 3 0 3 3 1 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  |  | [12, 13] [16, 17] [20, 21]  | [14, 15] [18, 19] [22, 23]  | [38, 39]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

checking: 
[1, 2]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 2 1 1 
deqs:
0 0 3 2 3 2 1 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44] [53, 54]  | [13, 14]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 0 1 10 
deqs:
0 0 3 2 1 0 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  |  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [37, 38]  | [39, 40]  | [13, 14] [19, 20] [23, 24]  | [15, 16] [21, 22] [25, 26]  | [17, 18] [45, 46] [51, 52]  | [1000, 1000]  | 

restrict_time_ranges took 335 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

Final Workload: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 157ms
avg_check_time: 52.3333ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 62
avg_cost_improvement_abs: 2.9878e+09
avg_cost_improvement_rel: 4.5358e+08
Timing Stats: 
sum_check_time: 308ms
avg_check_time: 61.6ms
max_check_time: 76ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.61433e+09
avg_cost_improvement_rel: 3.78885e+08
Timing Stats: 
sum_check_time: 78ms
avg_check_time: 78ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 105
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.28983e+08
Timing Stats: 
sum_check_time: 768ms
avg_check_time: 76.8ms
max_check_time: 128ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.61433e+09
avg_cost_improvement_rel: 3.78885e+08
Timing Stats: 
sum_check_time: 69ms
avg_check_time: 69ms
max_check_time: 69ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 85
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5792e+08
Timing Stats: 
sum_check_time: 118ms
avg_check_time: 29.5ms
max_check_time: 34ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5792e+08
Timing Stats: 
sum_check_time: 121ms
avg_check_time: 121ms
max_check_time: 121ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 56
avg_cost_improvement_abs: 0.217391
avg_cost_improvement_rel: 0.0414079
Timing Stats: 
sum_check_time: 330ms
avg_check_time: 66ms
max_check_time: 87ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 182ms
avg_check_time: 91ms
max_check_time: 113ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 2 1 1 4 2 
deqs:
0 0 2 2 1 1 4 
pkts metadata: 
0 [22, 0] [22, 0]  | [22, 0] [22, 0]  | [22, 0]  | [22, 0]  | [22, 0] [21, 0] [0, 27] [21, 0]  | [22, 0] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 2 1 1 4 2 
deqs:
0 0 2 2 1 1 4 
pkts metadata: 
0 [22, 0] [22, 0]  | [22, 0] [22, 0]  | [22, 0]  | [22, 0]  | [22, 0] [21, 0] [0, 27] [21, 0]  | [22, 0] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 4]: dst(0, t) = 22
[1, 4]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 2
[1, 4]: dst(0, t) = 22
[1, 4]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 4]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 2 2 
deqs:
0 0 3 3 1 1 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 3 3 
deqs:
0 0 1 3 1 1 3 
pkts metadata: 
0 [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 1 3 10 
deqs:
0 0 2 3 1 1 3 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 0 3 10 
deqs:
0 0 2 3 1 0 3 
pkts metadata: 
0 [23, 24] [31, 32]  | [25, 26] [33, 34] [43, 44]  | [11, 12]  |  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

checking: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 2 3 7 
deqs:
0 0 2 0 3 2 3 
pkts metadata: 
0 [25, 26] [33, 34]  |  | [29, 30] [37, 38] [45, 46]  | [11, 12] [13, 14]  | [31, 32] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 2 3 7 
deqs:
0 0 2 0 2 2 3 
pkts metadata: 
0 [29, 30] [35, 36]  |  | [11, 12] [15, 17]  | [13, 14] [18, 19]  | [33, 34] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

Workload after combining: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 10

checking: 
[1, 4]: cenq(0, t) <= 6
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[1, 5]: cenq(0, t) <= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 1 0 7 
deqs:
0 0 0 2 3 1 0 
pkts metadata: 
0  | [26, 27] [34, 35]  | [28, 29] [36, 37] [46, 47]  | [11, 12]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 2 3 8 
deqs:
0 0 3 1 0 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  |  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 2 3 3 
deqs:
0 0 3 0 2 2 3 
pkts metadata: 
0 [25, 26] [33, 34] [41, 42]  |  | [11, 12] [14, 15]  | [29, 30] [37, 38]  | [31, 32] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 334 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 4]: cenq(0, t) <= 6
[5, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 81ms
avg_check_time: 40.5ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 64
avg_cost_improvement_abs: 3.04227e+09
avg_cost_improvement_rel: 4.64507e+08
Timing Stats: 
sum_check_time: 172ms
avg_check_time: 57.3333ms
max_check_time: 71ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.68435e+09
avg_cost_improvement_rel: 3.92924e+08
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 88ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 110
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.29041e+08
Timing Stats: 
sum_check_time: 719ms
avg_check_time: 71.9ms
max_check_time: 210ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.68435e+09
avg_cost_improvement_rel: 3.92924e+08
Timing Stats: 
sum_check_time: 63ms
avg_check_time: 63ms
max_check_time: 63ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 87
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59104e+08
Timing Stats: 
sum_check_time: 39ms
avg_check_time: 19.5ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59104e+08
Timing Stats: 
sum_check_time: 98ms
avg_check_time: 98ms
max_check_time: 98ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 60
avg_cost_improvement_abs: 0.208333
avg_cost_improvement_rel: 0.0396825
Timing Stats: 
sum_check_time: 331ms
avg_check_time: 66.2ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 57ms
avg_check_time: 57ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 2 4 1 1 1 
deqs:
0 0 3 2 4 1 1 
pkts metadata: 
0 [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 2 4 1 1 1 
deqs:
0 0 3 2 4 1 1 
pkts metadata: 
0 [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 22
[1, 6]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 22
[1, 6]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [35, 36] [41, 42] [47, 48]  | [13, 14] [17, 18] [21, 22]  | [15, 16] [19, 20] [23, 24]  | [37, 38]  | [39, 40]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44] [53, 54]  | [13, 14] [15, 16]  | [29, 30] [37, 38] [47, 48]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [31, 32] [39, 40] [47, 48]  | [13, 14] [15, 16] [17, 18]  | [33, 34]  | [35, 36]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 1 1 1 
deqs:
0 0 3 2 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 2 2 0 
deqs:
0 0 3 2 3 2 2 
pkts metadata: 
0 [32, 33] [38, 39] [44, 45]  | [11, 13] [16, 17]  | [14, 15] [18, 19] [20, 21]  | [34, 35] [40, 41]  | [36, 37] [42, 43]  |  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 5
[3, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 5
[3, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [13, 14] [15, 16] [17, 18]  | [31, 32] [39, 40] [47, 48]  | [33, 34]  | [35, 36]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 2 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 1 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

Workload after combining: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 1 2 2 4 
deqs:
0 0 2 1 1 2 2 
pkts metadata: 
0 [24, 25] [32, 33]  | [11, 13]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[1, 6]: cenq(0, t) <= 12
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 0 2 2 10 
deqs:
0 0 3 1 0 2 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  |  |  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 1 1 1 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

checking: 
[1, 1]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 1 1 
deqs:
0 0 3 3 3 1 1 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [13, 14] [15, 16] [17, 18]  | [31, 32] [39, 40] [47, 48]  | [33, 34]  | [35, 36]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[4, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 1 1 10 
deqs:
0 0 3 2 0 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34]  |  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 2 3 1 1 
deqs:
0 0 3 2 2 3 1 
pkts metadata: 
0 [33, 34] [41, 42] [49, 50] [13, 14] [17, 18]  |  | [37, 38] [45, 46]  | [15, 16] [19, 20] [21, 22]  | [39, 40]  | [1000, 1000]  | 

restrict_time_ranges took 246 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

Final Workload: 
[1, 2]: cenq(0, t) <= 5
[4, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 161ms
avg_check_time: 53.6667ms
max_check_time: 65ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 67
avg_cost_improvement_abs: 3.09238e+09
avg_cost_improvement_rel: 4.67402e+08
Timing Stats: 
sum_check_time: 216ms
avg_check_time: 43.2ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.74878e+09
avg_cost_improvement_rel: 3.98682e+08
Timing Stats: 
sum_check_time: 49ms
avg_check_time: 49ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 114
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.29095e+08
Timing Stats: 
sum_check_time: 598ms
avg_check_time: 54.3636ms
max_check_time: 70ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.74878e+09
avg_cost_improvement_rel: 3.98682e+08
Timing Stats: 
sum_check_time: 34ms
avg_check_time: 34ms
max_check_time: 34ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 89
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60193e+08
Timing Stats: 
sum_check_time: 41ms
avg_check_time: 20.5ms
max_check_time: 22ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60193e+08
Timing Stats: 
sum_check_time: 82ms
avg_check_time: 82ms
max_check_time: 82ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 61
avg_cost_improvement_abs: 0.2
avg_cost_improvement_rel: 0.0380952
Timing Stats: 
sum_check_time: 243ms
avg_check_time: 60.75ms
max_check_time: 77ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 89ms
avg_check_time: 44.5ms
max_check_time: 48ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 4 1 1 2 
deqs:
0 0 3 1 4 1 1 
pkts metadata: 
0 [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 4 1 1 2 
deqs:
0 0 3 1 4 1 1 
pkts metadata: 
0 [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22] [21, 22] [21, 22] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 21
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 2 1 1 2 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [30, 31] [36, 37] [46, 47] [11, 13] [16, 17]  | [18, 19]  | [32, 33] [40, 41]  | [14, 15]  | [34, 35]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 2 1 1 2 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53]  | [24, 25] [34, 35]  | [26, 27] [36, 37]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 2 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [24, 25] [32, 33] [42, 43]  | [26, 27] [34, 35] [44, 45]  | [28, 29] [36, 37]  | [11, 13]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 2 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 1 3 
deqs:
0 0 2 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 3 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [26, 27] [34, 35] [42, 43]  | [11, 12] [14, 15]  | [28, 29] [36, 37] [46, 47]  | [30, 31]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 3 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 2 3 
deqs:
0 0 3 1 3 1 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 4
[3, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[3, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 1 5 
deqs:
0 0 3 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 2 5 
deqs:
0 0 3 1 3 1 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 5 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

Workload after combining: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) <= 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 2 3 2 5 
deqs:
0 0 2 1 2 3 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 5]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[1, 5]: cenq(0, t) <= 10
[4, 5]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 5 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 3 3 3 5 
deqs:
0 0 0 1 3 3 3 
pkts metadata: 
0  | [26, 27]  | [28, 29] [36, 37] [46, 47]  | [11, 12] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 1 5 
deqs:
0 0 2 2 3 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

checking: 
[1, 1]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 1 5 
deqs:
0 0 2 3 3 1 1 
pkts metadata: 
0 [26, 27] [34, 35]  | [11, 12] [13, 14] [44, 45]  | [28, 29] [36, 37] [46, 47]  | [30, 31]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 1 3 3 
deqs:
0 0 3 0 3 1 3 
pkts metadata: 
0 [28, 29] [34, 35] [42, 43]  |  | [11, 12] [16, 17] [46, 47]  | [32, 33]  | [14, 15] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 1 3 
deqs:
0 0 0 3 3 3 1 
pkts metadata: 
0  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 348 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 2]: cenq(0, t) <= 4
[4, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 127ms
avg_check_time: 42.3333ms
max_check_time: 48ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 70
avg_cost_improvement_abs: 3.13863e+09
avg_cost_improvement_rel: 4.67779e+08
Timing Stats: 
sum_check_time: 173ms
avg_check_time: 34.6ms
max_check_time: 37ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.80825e+09
avg_cost_improvement_rel: 4.01703e+08
Timing Stats: 
sum_check_time: 47ms
avg_check_time: 47ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 119
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.28237e+08
Timing Stats: 
sum_check_time: 568ms
avg_check_time: 40.5714ms
max_check_time: 56ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.80825e+09
avg_cost_improvement_rel: 4.01703e+08
Timing Stats: 
sum_check_time: 52ms
avg_check_time: 52ms
max_check_time: 52ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 91
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.6051e+08
Timing Stats: 
sum_check_time: 45ms
avg_check_time: 22.5ms
max_check_time: 23ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.6051e+08
Timing Stats: 
sum_check_time: 92ms
avg_check_time: 92ms
max_check_time: 92ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 63
avg_cost_improvement_abs: 0.192308
avg_cost_improvement_rel: 0.03663
Timing Stats: 
sum_check_time: 343ms
avg_check_time: 68.6ms
max_check_time: 102ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 127ms
avg_check_time: 63.5ms
max_check_time: 66ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 3.66667ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 4 1 2 1 
deqs:
0 0 3 1 4 1 2 
pkts metadata: 
0 [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [25, 0]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 4 1 2 1 
deqs:
0 0 3 1 4 1 2 
pkts metadata: 
0 [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [25, 0]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 4]: dst(0, t) = 22
[1, 4]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

checking: 
[1, 1]: cenq(0, t) = 3
[1, 4]: dst(0, t) = 22
[1, 4]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 4]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22
[6, 6]: ecmp(0, t) = 23

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 4]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 1 2 1 
deqs:
0 0 3 2 3 1 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 3 1 2 1 
deqs:
0 0 3 2 3 1 2 
pkts metadata: 
0 [27, 28] [37, 38] [47, 48] [13, 14] [15, 16]  |  | [31, 32] [41, 42] [51, 52]  | [33, 34]  | [35, 36] [45, 46]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 2 1 
deqs:
0 0 2 3 3 1 2 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 3 1 
deqs:
0 0 2 2 3 1 3 
pkts metadata: 
0 [25, 26] [33, 34]  | [27, 28] [35, 36]  | [29, 30] [37, 38] [47, 48]  | [13, 14]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 3 2 1 
deqs:
0 0 2 2 2 3 2 
pkts metadata: 
0 [27, 28] [35, 36]  | [13, 14] [15, 16]  | [29, 30] [37, 38]  | [31, 32] [39, 40] [49, 50]  | [33, 34] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 2 1 
deqs:
0 0 2 3 3 1 2 
pkts metadata: 
0 [25, 26] [33, 34]  | [27, 28] [35, 36] [45, 46]  | [29, 30] [37, 38] [47, 48]  | [13, 14]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 3 1 
deqs:
0 0 2 2 3 1 3 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 2 3 2 1 
deqs:
0 0 1 3 2 3 2 
pkts metadata: 
0 [29, 30]  | [13, 14] [15, 16] [17, 18]  | [31, 32] [39, 40]  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 1 2 1 
deqs:
0 0 2 3 3 1 2 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: aipg(0, t) = 1
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 2 1 
deqs:
0 0 2 2 3 1 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 3 2 1 
deqs:
0 0 2 2 2 3 2 
pkts metadata: 
0 [33, 34] [39, 40]  | [13, 14] [17, 18]  | [35, 36] [41, 42]  | [15, 16] [19, 20] [21, 22]  | [37, 38] [43, 44]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 2]: cenq(0, t) = 4
[3, 4]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[3, 4]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[3, 4]: cenq(0, t) = 3

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 1 2 1 
deqs:
0 0 3 2 3 1 2 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44]  | [27, 28] [35, 36]  | [29, 30] [37, 38] [47, 48]  | [13, 14]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 2 1 
deqs:
0 0 3 1 3 1 2 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [12, 13]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 2 0 1 
deqs:
0 0 3 1 3 2 0 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [11, 12]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  |  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

Workload after combining: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: cenq(0, t) = 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[1, 4]: cenq(0, t) <= 9
[4, 4]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 0 2 
deqs:
0 0 1 3 1 1 0 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  |  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) = 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) <= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 0 1 
deqs:
0 0 3 0 3 3 0 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 0
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 0 1 
deqs:
0 0 3 0 3 3 0 
pkts metadata: 
0 [33, 34] [39, 40] [45, 46]  |  | [11, 12] [15, 16] [19, 20]  | [13, 14] [17, 18] [21, 22]  |  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 0 1 
deqs:
0 0 3 1 3 1 0 
pkts metadata: 
0 [29, 30] [35, 36] [43, 44]  | [11, 12]  | [13, 14] [15, 16] [17, 18]  | [31, 32]  |  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 7 0 1 0 1 
deqs:
0 0 3 3 3 2 0 
pkts metadata: 
0 [35, 36] [43, 44] [51, 52]  | [13, 14] [17, 18] [21, 22] [15, 16] [19, 20] [23, 24] [85, 86]  |  | [39, 40]  |  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 216 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 2]: cenq(0, t) <= 4
[4, 4]: aipg(0, t) >= 1
[4, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 149ms
avg_check_time: 49.6667ms
max_check_time: 63ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 73
avg_cost_improvement_abs: 3.18146e+09
avg_cost_improvement_rel: 4.70338e+08
Timing Stats: 
sum_check_time: 215ms
avg_check_time: 43ms
max_check_time: 55ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.86331e+09
avg_cost_improvement_rel: 4.06709e+08
Timing Stats: 
sum_check_time: 30ms
avg_check_time: 30ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 18
opt_count: 125
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26685e+08
Timing Stats: 
sum_check_time: 779ms
avg_check_time: 43.2778ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.86331e+09
avg_cost_improvement_rel: 4.06709e+08
Timing Stats: 
sum_check_time: 28ms
avg_check_time: 28ms
max_check_time: 28ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 95
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59234e+08
Timing Stats: 
sum_check_time: 78ms
avg_check_time: 19.5ms
max_check_time: 22ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59234e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 66
avg_cost_improvement_abs: 0.185185
avg_cost_improvement_rel: 0.0352734
Timing Stats: 
sum_check_time: 213ms
avg_check_time: 53.25ms
max_check_time: 59ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 44ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 3 2 4 1 
deqs:
0 0 1 1 3 2 4 
pkts metadata: 
0 [25, 26]  | [25, 26]  | [25, 26] [25, 26] [25, 26]  | [25, 26] [25, 26]  | [25, 26] [22, 23] [0, 0] [24, 0]  | [25, 26]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 3 2 4 1 
deqs:
0 0 1 1 3 2 4 
pkts metadata: 
0 [25, 26]  | [25, 26]  | [25, 26] [25, 26] [25, 26]  | [25, 26] [25, 26]  | [25, 26] [22, 23] [0, 0] [24, 0]  | [25, 26]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = t
[1, 4]: dst(0, t) = 25
[1, 4]: ecmp(0, t) = 26
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

checking: 
[1, 2]: cenq(0, t) = t
[1, 4]: dst(0, t) = 25
[1, 4]: ecmp(0, t) = 26
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = t
[1, 4]: dst(0, t) = 25
[1, 4]: ecmp(0, t) = 26
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[1, 4]: ecmp(0, t) = 26
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[1, 4]: ecmp(0, t) = 26
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [29, 30]  | [31, 32]  | [13, 14] [15, 16] [17, 18]  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [27, 28]  | [29, 30]  | [31, 32] [39, 40] [47, 48]  | [13, 14] [15, 16] [49, 50]  | [33, 34] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [29, 30]  | [31, 32]  | [33, 34] [41, 42] [49, 50]  | [13, 14] [15, 16] [17, 18]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 2 3 1 
deqs:
0 0 1 1 3 2 3 
pkts metadata: 
0 [22, 23]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 2 1 4 
deqs:
0 0 1 1 3 2 1 
pkts metadata: 
0 [26, 27]  | [28, 29]  | [30, 31] [38, 39] [46, 47]  | [11, 13] [14, 15]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 7
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 7
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 7
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 1 1 
deqs:
0 0 2 2 3 3 1 
pkts metadata: 
0 [35, 36] [41, 42]  | [37, 38] [43, 44]  | [13, 14] [17, 18] [21, 22]  | [15, 16] [19, 20] [23, 24]  | [39, 40]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 0 1 1 
deqs:
0 0 2 2 3 0 1 
pkts metadata: 
0 [27, 28] [35, 36]  | [29, 30] [37, 38]  | [11, 12] [13, 14] [15, 16]  |  | [33, 34]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 0 1 4 
deqs:
0 0 2 2 3 0 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  |  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[1, 6]: cenq(0, t) <= 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 1 2 1 1 
deqs:
0 0 3 0 1 2 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 2 0 10 
deqs:
0 0 0 3 1 2 0 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 11
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 3 3 1 
deqs:
0 0 3 1 0 3 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  |  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 3 3 2 
deqs:
0 0 3 1 0 3 3 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 0 3 3 1 
deqs:
0 0 3 2 0 3 3 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39]  |  | [13, 14] [15, 16] [17, 18]  | [34, 35] [42, 43] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 284 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 191ms
avg_check_time: 63.6667ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 76
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.75453e+08
Timing Stats: 
sum_check_time: 353ms
avg_check_time: 70.6ms
max_check_time: 105ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.91444e+09
avg_cost_improvement_rel: 4.14097e+08
Timing Stats: 
sum_check_time: 70ms
avg_check_time: 70ms
max_check_time: 70ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 129
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26817e+08
Timing Stats: 
sum_check_time: 465ms
avg_check_time: 46.5ms
max_check_time: 104ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.91444e+09
avg_cost_improvement_rel: 4.14097e+08
Timing Stats: 
sum_check_time: 98ms
avg_check_time: 98ms
max_check_time: 98ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 99
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58998e+08
Timing Stats: 
sum_check_time: 97ms
avg_check_time: 24.25ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58998e+08
Timing Stats: 
sum_check_time: 80ms
avg_check_time: 80ms
max_check_time: 80ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 69
avg_cost_improvement_abs: 0.178571
avg_cost_improvement_rel: 0.0340136
Timing Stats: 
sum_check_time: 281ms
avg_check_time: 70.25ms
max_check_time: 107ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 41.5ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 7ms
avg_check_time: 2.33333ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 4 2 1 1 
deqs:
0 0 3 1 4 2 1 
pkts metadata: 
0 [22, 23] [0, 0] [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 4 2 1 1 
deqs:
0 0 3 1 4 2 1 
pkts metadata: 
0 [22, 23] [0, 0] [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 22
[2, 6]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 22
[2, 6]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 6]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 2 1 1 
deqs:
0 0 3 2 3 2 1 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44] [53, 54]  | [13, 14]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 2 1 1 
deqs:
0 0 3 2 3 2 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 1 1 
deqs:
0 0 2 2 3 3 1 
pkts metadata: 
0 [35, 36] [41, 42]  | [37, 38] [43, 44]  | [13, 14] [17, 18] [21, 22]  | [15, 16] [19, 20] [23, 24]  | [39, 40]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 2 1 1 
deqs:
0 0 3 2 3 2 1 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44]  | [13, 14] [15, 16]  | [29, 30] [37, 38] [47, 48]  | [31, 32] [39, 40]  | [33, 34]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 11
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 1 1 
deqs:
0 0 3 1 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 0 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  |  | 

checking: 
[2, 2]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 1 1 
deqs:
0 0 2 2 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 2 1 1 
deqs:
0 0 2 3 3 2 1 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 1 1 1 
deqs:
0 0 2 2 3 1 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 0 1 1 
deqs:
0 0 3 2 3 0 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41] [50, 51]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  |  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 0 1 0 
deqs:
0 0 3 1 3 0 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  |  | [28, 29]  |  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

Workload after combining: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 8

checking: 
[1, 2]: cenq(0, t) <= 4
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[1, 3]: cenq(0, t) <= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 1 1 
deqs:
0 0 2 0 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 0 9 
deqs:
0 0 1 3 3 1 0 
pkts metadata: 
0 [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

checking: 
[1, 1]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 0 0 9 
deqs:
0 0 3 2 3 0 0 
pkts metadata: 
0 [28, 29] [34, 35] [42, 43]  | [11, 12] [15, 16]  | [13, 14] [36, 37] [46, 47]  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 236 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

Final Workload: 
[1, 2]: cenq(0, t) <= 4
[3, 6]: cenq(0, t) >= 8

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 41.5ms
max_check_time: 43ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 78
avg_cost_improvement_abs: 3.25825e+09
avg_cost_improvement_rel: 4.83742e+08
Timing Stats: 
sum_check_time: 124ms
avg_check_time: 41.3333ms
max_check_time: 45ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.96205e+09
avg_cost_improvement_rel: 4.24501e+08
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 42ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 135
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26126e+08
Timing Stats: 
sum_check_time: 644ms
avg_check_time: 40.25ms
max_check_time: 77ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.96205e+09
avg_cost_improvement_rel: 4.24501e+08
Timing Stats: 
sum_check_time: 33ms
avg_check_time: 33ms
max_check_time: 33ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 101
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59324e+08
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 21ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59324e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 79ms
max_check_time: 79ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 73
avg_cost_improvement_abs: 0.172414
avg_cost_improvement_rel: 0.0328407
Timing Stats: 
sum_check_time: 234ms
avg_check_time: 46.8ms
max_check_time: 103ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 60ms
avg_check_time: 60ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 3 1 2 4 2 
deqs:
0 0 1 3 1 2 4 
pkts metadata: 
0 [24, 25]  | [24, 25] [24, 0] [24, 25]  | [24, 25]  | [24, 25] [24, 25]  | [24, 25] [22, 23] [0, 0] [0, 0]  | [24, 25] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 3 1 2 4 2 
deqs:
0 0 1 3 1 2 4 
pkts metadata: 
0 [24, 25]  | [24, 25] [24, 0] [24, 25]  | [24, 25]  | [24, 25] [24, 25]  | [24, 25] [22, 23] [0, 0] [0, 0]  | [24, 25] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 25
[1, 4]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 4]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

checking: 
[1, 1]: cenq(0, t) = 1
[1, 1]: ecmp(0, t) = 25
[1, 4]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 4]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 4]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 4]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[3, 4]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 2 2 3 3 2 
deqs:
0 0 1 2 2 3 3 
pkts metadata: 
0 [27, 28]  | [29, 30] [37, 38]  | [12, 14] [15, 16]  | [31, 32] [39, 40] [49, 50]  | [33, 34] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 3 3 
deqs:
0 0 1 1 2 3 3 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

checking: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [23, 24]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 3 1 
deqs:
0 0 1 0 3 3 3 
pkts metadata: 
0 [21, 22]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

Workload after combining: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 11

checking: 
[1, 4]: cenq(0, t) <= 7
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[1, 5]: cenq(0, t) <= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 0 0 0 
deqs:
0 0 3 3 0 0 0 
pkts metadata: 
0 [25, 26] [33, 34] [41, 42]  | [11, 12] [13, 14] [43, 44]  |  |  |  |  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 2 3 1 
deqs:
0 0 0 2 3 2 3 
pkts metadata: 
0  | [12, 13] [16, 17]  | [14, 15] [18, 19] [20, 21]  | [34, 35] [40, 41]  | [36, 37] [42, 43] [50, 51]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 0 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [33, 34]  | [35, 36]  | [12, 13] [16, 17] [20, 21]  | [14, 15] [18, 19] [22, 23]  | [37, 38] [43, 44] [49, 50]  |  | 

checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 287 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

Final Workload: 
[1, 4]: cenq(0, t) <= 7
[5, 6]: cenq(0, t) >= 11

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 143ms
avg_check_time: 71.5ms
max_check_time: 109ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 80
avg_cost_improvement_abs: 3.29281e+09
avg_cost_improvement_rel: 4.91478e+08
Timing Stats: 
sum_check_time: 182ms
avg_check_time: 60.6667ms
max_check_time: 77ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.00648e+09
avg_cost_improvement_rel: 4.34212e+08
Timing Stats: 
sum_check_time: 96ms
avg_check_time: 96ms
max_check_time: 96ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 140
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26268e+08
Timing Stats: 
sum_check_time: 514ms
avg_check_time: 64.25ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.00648e+09
avg_cost_improvement_rel: 4.34212e+08
Timing Stats: 
sum_check_time: 97ms
avg_check_time: 97ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 104
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59627e+08
Timing Stats: 
sum_check_time: 61ms
avg_check_time: 20.3333ms
max_check_time: 22ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59627e+08
Timing Stats: 
sum_check_time: 78ms
avg_check_time: 78ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 77
avg_cost_improvement_abs: 0.166667
avg_cost_improvement_rel: 0.031746
Timing Stats: 
sum_check_time: 284ms
avg_check_time: 56.8ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 46ms
avg_check_time: 46ms
max_check_time: 46ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 2 4 2 1 1 
deqs:
0 0 3 2 4 2 1 
pkts metadata: 
0 [23, 24] [25, 26] [27, 28]  | [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 2 4 2 1 1 
deqs:
0 0 3 2 4 2 1 
pkts metadata: 
0 [23, 24] [25, 26] [27, 28]  | [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[2, 6]: dst(0, t) = 23
[2, 6]: ecmp(0, t) = 24
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[2, 6]: dst(0, t) = 23
[2, 6]: ecmp(0, t) = 24
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[2, 6]: dst(0, t) = 23
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 2 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [32, 33]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 1 1 
deqs:
0 0 3 2 3 3 1 
pkts metadata: 
0 [40, 41] [44, 45] [48, 49]  | [14, 15] [20, 21]  | [16, 17] [22, 23] [26, 27]  | [18, 19] [24, 25] [28, 29]  | [42, 43]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 3 2 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45] [54, 55]  | [28, 29] [36, 37]  | [30, 31] [38, 39] [48, 49]  | [32, 33] [40, 41]  | [14, 15]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 3 3 1 1 
deqs:
0 0 3 2 3 3 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 2 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [14, 15] [16, 17] [18, 19]  | [32, 33] [40, 41] [48, 49]  | [34, 35] [42, 43]  | [36, 37]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 1 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [42, 43] [46, 47]  | [14, 15] [20, 21] [26, 27]  | [16, 17] [22, 23] [28, 29]  | [18, 19] [24, 25] [30, 31]  | [44, 45]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 2 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [14, 15] [16, 17] [18, 19]  | [32, 33] [40, 41] [48, 49]  | [34, 35] [42, 43]  | [36, 37]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 2 1 1 
deqs:
0 0 2 3 1 2 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 0 2 2 
deqs:
0 0 3 3 3 0 2 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [31, 32] [39, 40] [47, 48]  | [12, 14] [15, 16] [17, 18]  |  | [35, 36] [43, 44]  | [1000, 1000] [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 2 2 1 
deqs:
0 0 3 2 0 2 2 
pkts metadata: 
0 [29, 30] [35, 36] [43, 44] [11, 12]  | [15, 16]  |  | [13, 14] [17, 18]  | [33, 34] [41, 42]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

Workload after combining: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 9

checking: 
[1, 2]: cenq(0, t) <= 5
[3, 3]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[1, 3]: cenq(0, t) <= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 2 2 1 
deqs:
0 0 3 1 1 2 2 
pkts metadata: 
0 [24, 25] [32, 33] [40, 41]  | [26, 27]  | [28, 29]  | [11, 12] [13, 14]  | [30, 31] [38, 39]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 2 2 1 
deqs:
0 0 2 3 3 2 2 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32] [41, 42]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

checking: 
[1, 1]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 2 2 1 
deqs:
0 0 3 3 3 2 2 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [12, 15] [16, 17] [18, 19]  | [32, 33] [40, 41] [48, 49]  | [34, 35] [42, 43]  | [36, 37] [44, 45]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 244 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

Final Workload: 
[1, 2]: cenq(0, t) <= 5
[3, 6]: cenq(0, t) >= 9

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 80ms
avg_check_time: 40ms
max_check_time: 40ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 82
avg_cost_improvement_abs: 3.32514e+09
avg_cost_improvement_rel: 4.98715e+08
Timing Stats: 
sum_check_time: 72ms
avg_check_time: 24ms
max_check_time: 26ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.04804e+09
avg_cost_improvement_rel: 4.43296e+08
Timing Stats: 
sum_check_time: 27ms
avg_check_time: 27ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 145
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26401e+08
Timing Stats: 
sum_check_time: 532ms
avg_check_time: 38ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.04804e+09
avg_cost_improvement_rel: 4.43296e+08
Timing Stats: 
sum_check_time: 25ms
avg_check_time: 25ms
max_check_time: 25ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 106
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60489e+08
Timing Stats: 
sum_check_time: 31ms
avg_check_time: 15.5ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60489e+08
Timing Stats: 
sum_check_time: 60ms
avg_check_time: 60ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 81
avg_cost_improvement_abs: 0.16129
avg_cost_improvement_rel: 0.030722
Timing Stats: 
sum_check_time: 240ms
avg_check_time: 48ms
max_check_time: 58ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 30ms
avg_check_time: 30ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 1 3 3 4 1 
deqs:
0 0 1 1 3 3 4 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23] [24, 34]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 1 3 3 4 1 
deqs:
0 0 1 1 3 3 4 
pkts metadata: 
0 [22, 23]  | [22, 23]  | [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23] [24, 34]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 6]: dst(0, t) = 22
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 6]: dst(0, t) = 22
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: dst(0, t) = 22
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 6]: dst(0, t) = 22
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[1, 3]: ecmp(0, t) = 23
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 6]: dst(0, t) = 22
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 6]: dst(0, t) = 22
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = t
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 2 1 1 
deqs:
0 0 1 1 2 2 1 
pkts metadata: 
0 [24, 25]  | [26, 27]  | [11, 12] [13, 14]  | [28, 29] [36, 37]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 2 1 6 
deqs:
0 0 1 1 2 2 1 
pkts metadata: 
0 [25, 26]  | [27, 28]  | [11, 12] [14, 15]  | [29, 30] [37, 38]  | [31, 32]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 3 3 1 
deqs:
0 0 2 1 3 3 3 
pkts metadata: 
0 [31, 32] [37, 38]  | [11, 14]  | [33, 34] [41, 42] [49, 50]  | [15, 16] [17, 18] [19, 20]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

Last valid workload: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 2]: cenq(0, t) = t
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 2]: cenq(0, t) = t
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 0 2 1 
deqs:
0 0 3 3 3 1 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48] [57, 58]  |  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 1 1 1 
deqs:
0 0 1 1 3 1 1 
pkts metadata: 
0 [19, 20]  | [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 2 2 4 
deqs:
0 0 1 1 3 2 2 
pkts metadata: 
0 [20, 21]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 2]: cenq(0, t) = t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= t
[1, 6]: cenq(0, t) <= 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 2 1 0 
deqs:
0 0 1 1 2 2 1 
pkts metadata: 
0 [22, 23]  | [24, 25]  | [11, 12] [34, 35]  | [26, 27] [36, 37]  | [28, 29]  |  | 

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 2 3 0 10 
deqs:
0 0 1 0 2 3 0 
pkts metadata: 
0 [21, 22]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 1 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [24, 25]  | [13, 14]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 3 2 
deqs:
0 0 1 1 3 3 3 
pkts metadata: 
0 [24, 25]  | [12, 14]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 1]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 2 3 3 1 
deqs:
0 0 1 3 2 3 3 
pkts metadata: 
0 [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 86 milliseconds
Workload after restricting time ranges: 
[2, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[2, 2]: cenq(0, t) <= t
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 142ms
avg_check_time: 47.3333ms
max_check_time: 74ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 85
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.83131e+08
Timing Stats: 
sum_check_time: 275ms
avg_check_time: 55ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.95279e+09
avg_cost_improvement_rel: 4.29443e+08
Timing Stats: 
sum_check_time: 19ms
avg_check_time: 19ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 149
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.26525e+08
Timing Stats: 
sum_check_time: 213ms
avg_check_time: 26.625ms
max_check_time: 40ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.95279e+09
avg_cost_improvement_rel: 4.29443e+08
Timing Stats: 
sum_check_time: 18ms
avg_check_time: 18ms
max_check_time: 18ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 110
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60244e+08
Timing Stats: 
sum_check_time: 87ms
avg_check_time: 21.75ms
max_check_time: 24ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60244e+08
Timing Stats: 
sum_check_time: 75ms
avg_check_time: 75ms
max_check_time: 75ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 82
avg_cost_improvement_abs: 0.1875
avg_cost_improvement_rel: 0.0349702
Timing Stats: 
sum_check_time: 85ms
avg_check_time: 42.5ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 44ms
max_check_time: 52ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 8ms
avg_check_time: 2.66667ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 2 1 3 4 1 
deqs:
0 0 2 2 1 3 4 
pkts metadata: 
0 [25, 26] [25, 26]  | [25, 26] [25, 26]  | [25, 26]  | [25, 26] [27, 28] [25, 26]  | [25, 26] [22, 23] [24, 26] [24, 26]  | [25, 26]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 2 1 3 4 1 
deqs:
0 0 2 2 1 3 4 
pkts metadata: 
0 [25, 26] [25, 26]  | [25, 26] [25, 26]  | [25, 26]  | [25, 26] [27, 28] [25, 26]  | [25, 26] [22, 23] [24, 26] [24, 26]  | [25, 26]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 3]: dst(0, t) = 25
[1, 3]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

checking: 
[1, 1]: cenq(0, t) = 2
[1, 3]: dst(0, t) = 25
[1, 3]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 3]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25
[6, 6]: ecmp(0, t) = 26

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 3]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 3]: ecmp(0, t) = 26
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 3 1 
deqs:
0 0 3 3 2 1 3 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44]  | [27, 28] [35, 36] [45, 46]  | [29, 30] [37, 38]  | [11, 14]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 2 5 1 0 0 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44] [53, 54] [63, 64]  | [27, 28] [35, 36]  | [11, 14] [37, 38] [47, 48] [57, 58] [67, 68]  | [29, 30]  |  |  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 3 0 0 3 1 
deqs:
0 0 3 3 2 0 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53] [62, 63]  | [24, 25] [34, 35] [44, 45]  |  |  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 3 0 0 3 2 
deqs:
0 0 3 3 2 0 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53] [62, 63]  | [24, 25] [34, 35] [44, 45]  |  |  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 8
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 3 3 1 
deqs:
0 0 3 1 2 3 3 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44]  | [29, 30]  | [11, 14] [15, 16]  | [31, 32] [39, 40] [49, 50]  | [33, 34] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 2 3 1 
deqs:
0 0 3 1 2 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 0 5 
deqs:
0 0 3 1 1 3 0 
pkts metadata: 
0 [29, 30] [35, 36] [43, 44]  | [31, 32]  | [11, 12]  | [14, 15] [16, 17] [18, 19]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[1, 6]: cenq(0, t) <= 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 2 3 1 
deqs:
0 0 2 3 0 2 3 
pkts metadata: 
0 [32, 33] [38, 39]  | [12, 13] [16, 17] [20, 21]  |  | [14, 15] [18, 19]  | [36, 37] [42, 43] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 0 0 0 10 
deqs:
0 0 3 3 2 0 0 
pkts metadata: 
0 [32, 33] [40, 41] [48, 49]  | [11, 12] [13, 14] [15, 16] [17, 19] [20, 21]  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 12
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 2 3 1 
deqs:
0 0 3 2 1 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 2 3 2 
deqs:
0 0 3 2 1 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 1 3 3 3 1 
deqs:
0 0 2 1 3 3 3 
pkts metadata: 
0 [25, 26] [33, 34]  | [11, 14]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 331 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 181ms
avg_check_time: 60.3333ms
max_check_time: 84ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 88
avg_cost_improvement_abs: 3.25376e+09
avg_cost_improvement_rel: 4.87083e+08
Timing Stats: 
sum_check_time: 373ms
avg_check_time: 74.6ms
max_check_time: 87ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.99346e+09
avg_cost_improvement_rel: 4.35023e+08
Timing Stats: 
sum_check_time: 121ms
avg_check_time: 121ms
max_check_time: 121ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 154
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.25927e+08
Timing Stats: 
sum_check_time: 860ms
avg_check_time: 86ms
max_check_time: 125ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 2.99346e+09
avg_cost_improvement_rel: 4.35023e+08
Timing Stats: 
sum_check_time: 161ms
avg_check_time: 161ms
max_check_time: 161ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 114
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59588e+08
Timing Stats: 
sum_check_time: 101ms
avg_check_time: 25.25ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59588e+08
Timing Stats: 
sum_check_time: 104ms
avg_check_time: 104ms
max_check_time: 104ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 85
avg_cost_improvement_abs: 0.181818
avg_cost_improvement_rel: 0.0339105
Timing Stats: 
sum_check_time: 328ms
avg_check_time: 82ms
max_check_time: 128ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 149ms
avg_check_time: 74.5ms
max_check_time: 104ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 10ms
avg_check_time: 3.33333ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 3 1 4 1 1 
deqs:
0 0 3 3 1 4 1 
pkts metadata: 
0 [23, 24] [25, 26] [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 0] [23, 27] [23, 24]  | [23, 24]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 3 1 4 1 1 
deqs:
0 0 3 3 1 4 1 
pkts metadata: 
0 [23, 24] [25, 26] [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 0] [23, 27] [23, 24]  | [23, 24]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[2, 3]: ecmp(0, t) = 24
[2, 6]: dst(0, t) = 23
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 24
[6, 6]: cenq(0, t) = 13

checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[2, 3]: ecmp(0, t) = 24
[2, 6]: dst(0, t) = 23
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[5, 6]: ecmp(0, t) = 24
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[2, 3]: ecmp(0, t) = 24
[2, 6]: dst(0, t) = 23
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[2, 3]: ecmp(0, t) = 24
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 3 1 1 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [32, 33] [40, 41] [48, 49]  | [14, 15] [16, 17] [18, 19] [20, 21]  | [34, 35]  | [36, 37] [44, 45] [52, 53]  | [38, 39]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 2 2 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47] [56, 57]  | [28, 29] [38, 39]  | [30, 31] [40, 41]  | [32, 33]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 0 2 3 1 1 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55] [64, 65] [74, 75]  |  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 1 1 
deqs:
0 0 3 2 3 3 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [14, 15] [16, 17]  | [30, 31] [38, 39] [48, 49]  | [32, 33] [40, 41] [50, 51]  | [34, 35]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 1 1 
deqs:
0 0 3 1 3 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 1 2 3 
deqs:
0 0 3 1 3 1 2 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 7
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 1 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [30, 31] [38, 39]  | [32, 33] [40, 41] [48, 49]  | [14, 15] [16, 17] [18, 19]  | [34, 35] [42, 43] [50, 51]  | [36, 37]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 0 2 4 
deqs:
0 0 1 3 3 0 2 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  |  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [26, 27]  | [28, 29] [36, 37] [44, 45]  | [11, 12] [13, 14] [15, 16]  | [30, 31]  | [32, 33]  | [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

Workload after combining: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 1 2 2 2 
deqs:
0 0 3 3 1 2 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54]  | [25, 26] [35, 36]  | [27, 28]  | [29, 30] [39, 40]  | [31, 32] [41, 42]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[1, 6]: cenq(0, t) <= 13
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 0 1 1 
deqs:
0 0 3 1 2 0 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36]  |  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 2 3 2 6 
deqs:
0 0 1 0 2 3 2 
pkts metadata: 
0 [22, 23]  |  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 1 1 
deqs:
0 0 1 3 3 3 1 
pkts metadata: 
0 [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

checking: 
[1, 2]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 1 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [36, 37] [42, 43] [48, 49]  | [14, 15] [18, 19] [22, 23]  | [16, 17] [20, 21] [24, 25] [58, 59]  | [38, 39]  | [40, 41]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 1 10 
deqs:
0 0 2 0 1 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 3 1 
deqs:
0 0 3 0 3 3 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

restrict_time_ranges took 313 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

Final Workload: 
[1, 3]: cenq(0, t) <= 7
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 149ms
avg_check_time: 49.6667ms
max_check_time: 54ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 91
avg_cost_improvement_abs: 3.28439e+09
avg_cost_improvement_rel: 4.88548e+08
Timing Stats: 
sum_check_time: 341ms
avg_check_time: 68.2ms
max_check_time: 91ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.03174e+09
avg_cost_improvement_rel: 4.38018e+08
Timing Stats: 
sum_check_time: 96ms
avg_check_time: 96ms
max_check_time: 96ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 159
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.25364e+08
Timing Stats: 
sum_check_time: 789ms
avg_check_time: 65.75ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.03174e+09
avg_cost_improvement_rel: 4.38018e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 117
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59384e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 26.3333ms
max_check_time: 35ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59384e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 87
avg_cost_improvement_abs: 0.176471
avg_cost_improvement_rel: 0.0329132
Timing Stats: 
sum_check_time: 308ms
avg_check_time: 61.6ms
max_check_time: 84ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 101ms
avg_check_time: 50.5ms
max_check_time: 66ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 10ms
avg_check_time: 3.33333ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 2 4 1 2 
deqs:
0 0 3 1 2 4 1 
pkts metadata: 
0 [22, 0] [23, 24] [22, 0]  | [22, 0]  | [22, 0] [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0]  | [22, 0] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 2 4 1 2 
deqs:
0 0 3 1 2 4 1 
pkts metadata: 
0 [22, 0] [23, 24] [22, 0]  | [22, 0]  | [22, 0] [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0]  | [22, 0] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 5]: dst(0, t) = 22
[2, 5]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 5]: dst(0, t) = 22
[2, 5]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 5]: dst(0, t) = 22
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 1 2 
deqs:
0 0 3 1 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 1 2 
deqs:
0 0 3 1 3 3 1 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44]  | [12, 14]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 5 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [11, 12] [16, 17] [20, 21]  | [14, 15] [18, 19] [22, 23]  | [36, 37]  | [38, 39]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 1 2 3 2 
deqs:
0 0 3 2 1 2 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43] [52, 53]  | [24, 25]  | [26, 27]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 6
[4, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 1 5 
deqs:
0 0 2 2 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 3 1 5 
deqs:
0 0 2 2 2 3 1 
pkts metadata: 
0 [24, 25] [32, 33]  | [11, 12] [34, 35]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 3 2 5 
deqs:
0 0 2 2 2 3 2 
pkts metadata: 
0 [27, 28] [35, 36]  | [12, 13] [14, 15]  | [29, 30] [37, 38]  | [31, 32] [39, 40] [49, 50]  | [33, 34] [41, 42]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

Workload after combining: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: cenq(0, t) = 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[1, 5]: cenq(0, t) <= 11
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 1 1 1 
deqs:
0 0 3 1 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24]  | [25, 26] [35, 36]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) = 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) <= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 2 3 10 
deqs:
0 0 2 2 2 2 3 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 3 6 
deqs:
0 0 2 0 3 3 3 
pkts metadata: 
0 [23, 24] [33, 34]  |  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 3 1 6 
deqs:
0 0 3 3 0 3 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39] [46, 47]  |  | [11, 12] [13, 14] [15, 17]  | [34, 35]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

checking: 
[1, 2]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 3 1 6 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  | [36, 37] [42, 43] [48, 49]  | [13, 14] [17, 19]  | [15, 16] [20, 21] [22, 23]  | [38, 39]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 320 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

Final Workload: 
[1, 3]: cenq(0, t) <= 6
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 174ms
avg_check_time: 58ms
max_check_time: 71ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 94
avg_cost_improvement_abs: 3.31326e+09
avg_cost_improvement_rel: 4.89928e+08
Timing Stats: 
sum_check_time: 332ms
avg_check_time: 66.4ms
max_check_time: 93ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.06783e+09
avg_cost_improvement_rel: 4.40843e+08
Timing Stats: 
sum_check_time: 90ms
avg_check_time: 90ms
max_check_time: 90ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 164
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.24833e+08
Timing Stats: 
sum_check_time: 572ms
avg_check_time: 57.2ms
max_check_time: 82ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.06783e+09
avg_cost_improvement_rel: 4.40843e+08
Timing Stats: 
sum_check_time: 60ms
avg_check_time: 60ms
max_check_time: 60ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 119
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59643e+08
Timing Stats: 
sum_check_time: 39ms
avg_check_time: 19.5ms
max_check_time: 20ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59643e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 90
avg_cost_improvement_abs: 0.171429
avg_cost_improvement_rel: 0.0319728
Timing Stats: 
sum_check_time: 317ms
avg_check_time: 79.25ms
max_check_time: 118ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 117ms
avg_check_time: 58.5ms
max_check_time: 70ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 9ms
avg_check_time: 3ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 2 4 2 1 
deqs:
0 0 3 1 2 4 2 
pkts metadata: 
0 [22, 23] [22, 24] [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23] [22, 23] [0, 0] [22, 23]  | [22, 23] [26, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 2 4 2 1 
deqs:
0 0 3 1 2 4 2 
pkts metadata: 
0 [22, 23] [22, 24] [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23] [22, 23] [0, 0] [22, 23]  | [22, 23] [26, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 3]: dst(0, t) = 22
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 3]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22

checking: 
[1, 1]: cenq(0, t) = 3
[1, 3]: dst(0, t) = 22
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 3]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 3]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 22

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[2, 3]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[5, 6]: ecmp(0, t) = 23
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 3 0 2 1 
deqs:
0 0 3 3 3 1 2 
pkts metadata: 
0 [31, 32] [39, 40] [47, 48]  | [11, 14] [15, 16] [17, 18] [19, 20]  | [33, 34] [41, 42] [49, 50]  |  | [37, 38] [45, 46]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 3 1 
deqs:
0 0 0 3 3 3 3 
pkts metadata: 
0  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 2 1 
deqs:
0 0 1 3 3 3 2 
pkts metadata: 
0 [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[6, 6]: cenq(0, t) = 13
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 3 3 1 
deqs:
0 0 0 3 3 3 3 
pkts metadata: 
0  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 3 1 
deqs:
0 0 2 2 3 3 3 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 3 1 
deqs:
0 0 2 3 1 3 3 
pkts metadata: 
0 [29, 30] [37, 38]  | [11, 14] [15, 16] [17, 18]  | [31, 32]  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 3 2 2 
deqs:
0 0 2 3 2 3 2 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 6

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 2 2 
deqs:
0 0 2 3 1 3 2 
pkts metadata: 
0 [35, 36] [41, 42]  | [12, 14] [17, 18] [21, 22]  | [37, 38]  | [15, 16] [19, 20] [23, 24]  | [39, 40] [45, 46]  | [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

Workload after combining: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 10

checking: 
[1, 3]: cenq(0, t) <= 6
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[1, 4]: cenq(0, t) <= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 0 1 2 0 
deqs:
0 0 2 3 0 1 2 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  |  | [27, 28]  | [29, 30] [39, 40]  |  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 1 3 2 0 
deqs:
0 0 2 3 1 3 2 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  |  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

checking: 
[1, 2]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 2 2 0 
deqs:
0 0 2 3 3 2 2 
pkts metadata: 
0 [28, 29] [36, 37]  | [11, 13] [14, 15] [16, 17]  | [30, 31] [38, 39] [46, 47]  | [32, 33] [40, 41]  | [34, 35] [42, 43]  |  | 

checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 295 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

Final Workload: 
[1, 3]: cenq(0, t) <= 6
[4, 6]: cenq(0, t) >= 10

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 155ms
avg_check_time: 77.5ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 96
avg_cost_improvement_abs: 3.34053e+09
avg_cost_improvement_rel: 4.96203e+08
Timing Stats: 
sum_check_time: 246ms
avg_check_time: 82ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.10192e+09
avg_cost_improvement_rel: 4.48481e+08
Timing Stats: 
sum_check_time: 69ms
avg_check_time: 69ms
max_check_time: 69ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 170
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.24331e+08
Timing Stats: 
sum_check_time: 745ms
avg_check_time: 57.3077ms
max_check_time: 82ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.10192e+09
avg_cost_improvement_rel: 4.48481e+08
Timing Stats: 
sum_check_time: 61ms
avg_check_time: 61ms
max_check_time: 61ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 123
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59058e+08
Timing Stats: 
sum_check_time: 89ms
avg_check_time: 22.25ms
max_check_time: 25ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59058e+08
Timing Stats: 
sum_check_time: 87ms
avg_check_time: 87ms
max_check_time: 87ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 94
avg_cost_improvement_abs: 0.166667
avg_cost_improvement_rel: 0.0310847
Timing Stats: 
sum_check_time: 292ms
avg_check_time: 58.4ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 62ms
avg_check_time: 62ms
max_check_time: 62ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 6 1 1 1 4 1 
deqs:
0 0 3 3 2 1 4 
pkts metadata: 
0 [0, 24] [25, 26] [0, 24] [0, 24] [0, 24] [0, 24]  | [0, 24]  | [0, 24]  | [0, 24]  | [0, 24] [22, 23] [22, 23] [22, 23]  | [0, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 6 1 1 1 4 1 
deqs:
0 0 3 3 2 1 4 
pkts metadata: 
0 [0, 24] [25, 26] [0, 24] [0, 24] [0, 24] [0, 24]  | [0, 24]  | [0, 24]  | [0, 24]  | [0, 24] [22, 23] [22, 23] [22, 23]  | [0, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[2, 4]: dst(0, t) = 0
[2, 4]: ecmp(0, t) = 24
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

checking: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[2, 4]: dst(0, t) = 0
[2, 4]: ecmp(0, t) = 24
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[2, 4]: dst(0, t) = 0
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 6
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 7
[2, 4]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 4]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 9 1 1 1 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [25, 26] [35, 36] [45, 46] [55, 56] [65, 66] [73, 74] [81, 82] [87, 88] [93, 94]  | [27, 28]  | [29, 30]  | [31, 32]  | [33, 34]  | [1000, 1000]  | 

checking: 
[2, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 4]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 7 1 1 1 3 1 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [27, 28] [33, 34] [43, 44] [53, 54] [63, 64] [73, 74] [83, 84]  | [11, 12]  | [15, 16]  | [29, 30]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[2, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 7 1 1 0 3 1 
deqs:
0 0 3 3 3 0 3 
pkts metadata: 
0 [27, 28] [33, 34] [43, 44] [53, 54] [63, 64] [73, 74] [83, 84]  | [11, 14]  | [15, 16]  |  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[2, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 8 1 0 0 0 5 
deqs:
0 0 3 3 3 0 0 
pkts metadata: 
0 [28, 29] [36, 37] [46, 47] [56, 57] [66, 67] [76, 77] [11, 12] [13, 15]  | [16, 17]  |  |  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 9
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 0 3 1 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48] [57, 58]  |  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 0 3 1 
deqs:
0 0 3 3 3 0 3 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [11, 14] [15, 16] [17, 18]  | [31, 32] [39, 40] [47, 48]  |  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 0 3 2 
deqs:
0 0 3 3 3 0 3 
pkts metadata: 
0 [35, 36] [41, 42] [47, 48]  | [11, 13] [17, 18] [21, 22]  | [15, 16] [19, 20] [23, 24]  |  | [39, 40] [45, 46] [51, 52]  | [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[1, 6]: cenq(0, t) <= 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 4 0 1 1 0 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  | [23, 24] [33, 34] [43, 44] [53, 54]  |  | [27, 28]  | [29, 30]  |  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 1 0 10 
deqs:
0 0 3 0 2 1 0 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36]  | [27, 28]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 13
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 3 1 
deqs:
0 0 3 3 1 2 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 3 2 
deqs:
0 0 3 3 1 2 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 2 3 1 
deqs:
0 0 3 3 2 2 3 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [11, 12] [15, 16] [17, 18]  | [31, 32] [39, 40]  | [33, 34] [41, 42]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 393 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 9
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 215ms
avg_check_time: 71.6667ms
max_check_time: 102ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 99
avg_cost_improvement_abs: 3.36633e+09
avg_cost_improvement_rel: 4.99375e+08
Timing Stats: 
sum_check_time: 353ms
avg_check_time: 70.6ms
max_check_time: 116ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.13417e+09
avg_cost_improvement_rel: 4.52943e+08
Timing Stats: 
sum_check_time: 87ms
avg_check_time: 87ms
max_check_time: 87ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 175
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23857e+08
Timing Stats: 
sum_check_time: 594ms
avg_check_time: 59.4ms
max_check_time: 128ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.13417e+09
avg_cost_improvement_rel: 4.52943e+08
Timing Stats: 
sum_check_time: 109ms
avg_check_time: 109ms
max_check_time: 109ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 127
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58506e+08
Timing Stats: 
sum_check_time: 103ms
avg_check_time: 25.75ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58506e+08
Timing Stats: 
sum_check_time: 81ms
avg_check_time: 81ms
max_check_time: 81ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 97
avg_cost_improvement_abs: 0.162162
avg_cost_improvement_rel: 0.0302445
Timing Stats: 
sum_check_time: 390ms
avg_check_time: 97.5ms
max_check_time: 217ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 114ms
avg_check_time: 57ms
max_check_time: 64ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 9ms
avg_check_time: 3ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 1 2 3 4 2 
deqs:
0 0 2 1 2 3 4 
pkts metadata: 
0 [0, 22] [0, 22]  | [0, 22]  | [0, 22] [0, 23]  | [0, 22] [0, 23] [0, 22]  | [0, 22] [0, 22] [0, 22] [0, 22]  | [0, 22] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 1 2 3 4 2 
deqs:
0 0 2 1 2 3 4 
pkts metadata: 
0 [0, 22] [0, 22]  | [0, 22]  | [0, 22] [0, 23]  | [0, 22] [0, 23] [0, 22]  | [0, 22] [0, 22] [0, 22] [0, 22]  | [0, 22] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 2]: ecmp(0, t) = 22
[1, 5]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 5]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 14

checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: ecmp(0, t) = 22
[1, 5]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 5]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 2]: ecmp(0, t) = 22
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 5]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[5, 5]: ecmp(0, t) = 22
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 3 1 1 3 2 
deqs:
0 0 3 3 2 1 3 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44] [53, 54]  | [27, 28] [35, 36] [45, 46]  | [11, 13]  | [29, 30]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 2 3 3 
deqs:
0 0 3 3 0 2 3 
pkts metadata: 
0 [27, 28] [35, 36] [43, 44]  | [29, 30] [37, 38] [45, 46]  |  | [12, 13] [15, 16]  | [33, 34] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 2 3 6 
deqs:
0 0 3 3 1 2 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 1 3 6 
deqs:
0 0 3 3 1 1 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28]  | [29, 30]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

Workload after combining: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 12

checking: 
[1, 4]: cenq(0, t) <= 8
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[1, 5]: cenq(0, t) <= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 0 3 6 
deqs:
0 0 3 3 2 0 3 
pkts metadata: 
0 [31, 32] [39, 40] [47, 48]  | [12, 13] [14, 15] [16, 18] [19, 20]  | [33, 34]  |  | [37, 38] [45, 46] [53, 54]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 3 6 
deqs:
0 0 2 0 3 3 3 
pkts metadata: 
0 [29, 30] [37, 38]  |  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44] [51, 52]  | [12, 13] [14, 15] [16, 18]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 3 3 6 
deqs:
0 0 3 0 3 3 3 
pkts metadata: 
0 [35, 36] [41, 42] [47, 48]  |  | [11, 13] [16, 17] [21, 22]  | [39, 40] [45, 46] [51, 52]  | [14, 15] [19, 20] [23, 24]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 483 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

Final Workload: 
[1, 4]: cenq(0, t) <= 8
[5, 6]: cenq(0, t) >= 12

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 125ms
avg_check_time: 62.5ms
max_check_time: 90ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 101
avg_cost_improvement_abs: 3.39076e+09
avg_cost_improvement_rel: 5.05071e+08
Timing Stats: 
sum_check_time: 248ms
avg_check_time: 82.6667ms
max_check_time: 105ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.16471e+09
avg_cost_improvement_rel: 4.59861e+08
Timing Stats: 
sum_check_time: 150ms
avg_check_time: 150ms
max_check_time: 150ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 180
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.24029e+08
Timing Stats: 
sum_check_time: 617ms
avg_check_time: 77.125ms
max_check_time: 120ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.16471e+09
avg_cost_improvement_rel: 4.59861e+08
Timing Stats: 
sum_check_time: 149ms
avg_check_time: 149ms
max_check_time: 149ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 130
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58767e+08
Timing Stats: 
sum_check_time: 91ms
avg_check_time: 30.3333ms
max_check_time: 44ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58767e+08
Timing Stats: 
sum_check_time: 89ms
avg_check_time: 89ms
max_check_time: 89ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 101
avg_cost_improvement_abs: 0.157895
avg_cost_improvement_rel: 0.0294486
Timing Stats: 
sum_check_time: 479ms
avg_check_time: 95.8ms
max_check_time: 157ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 57ms
avg_check_time: 57ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 4 1 4 1 1 
deqs:
0 0 3 3 2 4 1 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 4 1 4 1 1 
deqs:
0 0 3 3 2 4 1 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 23
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 23
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 1 3 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [34, 35] [40, 41] [48, 49]  | [36, 37] [42, 43] [50, 51] [58, 59] [16, 17]  | [20, 21]  | [11, 15] [18, 19] [22, 23]  | [38, 39]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [11, 15] [16, 17] [18, 19]  | [32, 33] [40, 41] [48, 49]  | [34, 35] [42, 43] [50, 51]  | [36, 37]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 13
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 8 0 1 3 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45] [54, 55] [64, 65] [74, 75] [82, 83] [90, 91]  |  | [11, 15]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 6 0 3 1 0 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [39, 40] [45, 46] [51, 52] [11, 12]  | [17, 18] [23, 24] [15, 16] [19, 20] [25, 26] [75, 76]  |  | [21, 22] [27, 28] [55, 56]  | [43, 44]  |  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 3 1 0 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  |  | 

checking: 
[3, 3]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 3 1 2 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39] [46, 47]  | [13, 15] [16, 17]  | [32, 33] [40, 41] [50, 51]  | [34, 35]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 8
[4, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [42, 43] [46, 47] [50, 51]  | [11, 15] [20, 21] [26, 27]  | [16, 17] [22, 23] [28, 29]  | [18, 19] [24, 25] [30, 31]  | [44, 45]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 2 3 2 1 
deqs:
0 0 3 3 2 3 2 
pkts metadata: 
0 [30, 31] [36, 37] [44, 45] [54, 55] [64, 65]  | [18, 19]  | [12, 15] [16, 17]  | [32, 33] [40, 41] [50, 51]  | [34, 35] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 2 3 1 1 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [30, 31] [36, 37] [44, 45] [54, 55] [64, 65]  | [18, 19]  | [14, 15] [16, 17]  | [32, 33] [40, 41] [50, 51]  | [34, 35]  | [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

Workload after combining: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) <= 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 0 3 3 4 
deqs:
0 0 3 1 0 3 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25]  |  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[1, 6]: cenq(0, t) <= 14
[5, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 1 3 1 1 
deqs:
0 0 2 0 1 3 1 
pkts metadata: 
0 [20, 21] [30, 31]  |  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 0
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 2 3 2 10 
deqs:
0 0 0 1 2 3 2 
pkts metadata: 
0  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 1 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

checking: 
[1, 2]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 1 1 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [36, 37] [42, 43] [48, 49]  | [11, 15] [18, 19] [22, 23]  | [16, 17] [20, 21] [24, 25]  | [38, 39] [44, 45] [50, 51]  | [40, 41]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 0 1 10 
deqs:
0 0 3 3 0 0 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  | [23, 24] [33, 34] [43, 44]  |  |  | [29, 30]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 3 1 
deqs:
0 0 3 3 1 3 3 
pkts metadata: 
0 [37, 38] [41, 42] [47, 48]  | [11, 12] [19, 20] [23, 24]  | [15, 16]  | [17, 18] [21, 22] [25, 26]  | [39, 40] [45, 46] [51, 52]  | [1000, 1000]  | 

restrict_time_ranges took 345 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

Final Workload: 
[1, 3]: cenq(0, t) <= 8
[5, 6]: aipg(0, t) >= 1
[6, 6]: cenq(0, t) >= 14

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 157ms
avg_check_time: 52.3333ms
max_check_time: 62ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 104
avg_cost_improvement_abs: 3.41395e+09
avg_cost_improvement_rel: 5.05887e+08
Timing Stats: 
sum_check_time: 291ms
avg_check_time: 58.2ms
max_check_time: 85ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.19369e+09
avg_cost_improvement_rel: 4.61836e+08
Timing Stats: 
sum_check_time: 69ms
avg_check_time: 69ms
max_check_time: 69ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
opt_count: 185
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23587e+08
Timing Stats: 
sum_check_time: 759ms
avg_check_time: 63.25ms
max_check_time: 106ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.19369e+09
avg_cost_improvement_rel: 4.61836e+08
Timing Stats: 
sum_check_time: 71ms
avg_check_time: 71ms
max_check_time: 71ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 132
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59015e+08
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 26.5ms
max_check_time: 31ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59015e+08
Timing Stats: 
sum_check_time: 91ms
avg_check_time: 91ms
max_check_time: 91ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 103
avg_cost_improvement_abs: 0.153846
avg_cost_improvement_rel: 0.0286935
Timing Stats: 
sum_check_time: 340ms
avg_check_time: 68ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 94ms
avg_check_time: 47ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 9ms
avg_check_time: 3ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 3 1 4 1 2 
deqs:
0 0 3 3 1 4 1 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 3 1 4 1 2 
deqs:
0 0 3 3 1 4 1 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 23
[1, 5]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 23
[1, 5]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 23
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 6
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 3 1 2 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [32, 33] [40, 41] [48, 49]  | [13, 15] [16, 17] [18, 19] [20, 21]  | [34, 35]  | [36, 37] [44, 45] [52, 53]  | [38, 39]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 2 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 0 2 3 1 2 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45] [54, 55] [64, 65] [74, 75]  |  | [13, 15] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 0 1 3 1 3 
deqs:
0 0 3 3 1 3 1 
pkts metadata: 
0 [27, 28] [35, 36] [45, 46] [55, 56] [65, 66] [15, 16]  |  | [12, 13]  | [31, 32] [41, 42] [51, 52]  | [33, 34]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 0 1 3 2 2 
deqs:
0 0 3 3 1 3 2 
pkts metadata: 
0 [25, 26] [33, 34] [43, 44] [53, 54] [63, 64] [73, 74]  |  | [11, 13]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 7
[4, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 1 5 
deqs:
0 0 2 3 3 3 1 
pkts metadata: 
0 [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 0 5 
deqs:
0 0 1 3 3 1 0 
pkts metadata: 
0 [28, 29]  | [11, 12] [14, 15] [16, 17]  | [30, 31] [38, 39] [46, 47]  | [32, 33]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 2 3 5 
deqs:
0 0 1 3 3 2 3 
pkts metadata: 
0 [35, 36]  | [11, 13] [16, 18] [21, 22]  | [14, 15] [19, 20] [23, 24]  | [37, 38] [43, 44]  | [39, 40] [45, 46] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

Workload after combining: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: cenq(0, t) = 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[1, 5]: cenq(0, t) <= 12
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 0 3 1 1 
deqs:
0 0 3 0 0 3 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  |  |  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) = 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) <= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 2 3 2 
deqs:
0 0 2 2 3 2 3 
pkts metadata: 
0 [39, 40] [43, 44]  | [11, 13] [19, 20]  | [15, 16] [21, 22] [25, 26]  | [41, 42] [45, 46]  | [17, 18] [23, 24] [27, 28]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 2 2 3 2 
deqs:
0 0 3 2 2 2 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54] [63, 64]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 2 3 1 1 
deqs:
0 0 3 2 2 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54] [63, 64]  |  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

checking: 
[1, 2]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 3 3 1 2 
deqs:
0 0 3 2 3 3 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47] [54, 55] [64, 65]  |  | [13, 15] [16, 17] [18, 19]  | [34, 35] [42, 43] [50, 51]  | [36, 37]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 277 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

Final Workload: 
[1, 3]: cenq(0, t) <= 7
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 181ms
avg_check_time: 60.3333ms
max_check_time: 79ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 1ms
avg_call_time: 1ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 107
avg_cost_improvement_abs: 3.43597e+09
avg_cost_improvement_rel: 5.06661e+08
Timing Stats: 
sum_check_time: 399ms
avg_check_time: 79.8ms
max_check_time: 121ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.63712e+08
Timing Stats: 
sum_check_time: 72ms
avg_check_time: 72ms
max_check_time: 72ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 190
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23167e+08
Timing Stats: 
sum_check_time: 803ms
avg_check_time: 73ms
max_check_time: 110ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.63712e+08
Timing Stats: 
sum_check_time: 95ms
avg_check_time: 95ms
max_check_time: 95ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 134
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5925e+08
Timing Stats: 
sum_check_time: 45ms
avg_check_time: 22.5ms
max_check_time: 25ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5925e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 106
avg_cost_improvement_abs: 0.15
avg_cost_improvement_rel: 0.0279762
Timing Stats: 
sum_check_time: 273ms
avg_check_time: 68.25ms
max_check_time: 103ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 136ms
avg_check_time: 68ms
max_check_time: 100ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 9ms
avg_check_time: 3ms
max_check_time: 3ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 1 3 4 2 1 
deqs:
0 0 3 1 3 4 2 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 1 3 4 2 1 
deqs:
0 0 3 1 3 4 2 
pkts metadata: 
0 [23, 24] [23, 24] [23, 24]  | [23, 24]  | [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24] [23, 24] [23, 24]  | [23, 24] [23, 24]  | [23, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 23
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: dst(0, t) = 23
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 6]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 3 2 1 
deqs:
0 0 3 3 2 3 2 
pkts metadata: 
0 [32, 33] [40, 41] [48, 49]  | [12, 15] [16, 17] [18, 19] [20, 21]  | [34, 35]  | [36, 37] [44, 45] [52, 53]  | [38, 39] [46, 47]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 0 3 3 1 
deqs:
0 0 3 3 1 3 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46] [55, 56]  |  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 2 1 
deqs:
0 0 3 2 3 3 2 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 14
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 3 1 
deqs:
0 0 1 3 3 3 3 
pkts metadata: 
0 [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 3 1 
deqs:
0 0 2 3 3 3 3 
pkts metadata: 
0 [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 3 3 1 
deqs:
0 0 2 3 2 3 3 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 2 3 3 3 
deqs:
0 0 3 3 2 3 3 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45] [54, 55] [64, 65]  | [30, 31]  | [12, 13] [15, 16]  | [32, 33] [40, 41] [50, 51]  | [34, 35] [42, 43] [52, 53]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 7

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 2 0 3 3 3 
deqs:
0 0 3 3 1 3 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54] [63, 64]  | [25, 26] [35, 36]  |  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

Workload after combining: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 11

checking: 
[1, 3]: cenq(0, t) <= 7
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[1, 4]: cenq(0, t) <= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 0 0 2 1 
deqs:
0 0 3 3 0 0 2 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23] [32, 33] [42, 43]  |  |  | [28, 29] [38, 39]  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 2 2 
deqs:
0 0 1 3 3 3 2 
pkts metadata: 
0 [29, 30]  | [31, 32] [39, 40] [47, 48]  | [11, 13] [15, 16] [17, 18]  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44]  | [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

checking: 
[1, 2]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 2 2 2 
deqs:
0 0 3 3 3 2 2 
pkts metadata: 
0 [36, 37] [42, 43] [48, 49]  | [12, 14] [18, 19] [22, 23]  | [16, 17] [20, 21] [24, 25]  | [38, 39] [44, 45]  | [40, 41] [46, 47]  | [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 324 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

Final Workload: 
[1, 3]: cenq(0, t) <= 7
[4, 6]: cenq(0, t) >= 11

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 152ms
avg_check_time: 76ms
max_check_time: 107ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 109
avg_cost_improvement_abs: 3.45692e+09
avg_cost_improvement_rel: 5.11763e+08
Timing Stats: 
sum_check_time: 185ms
avg_check_time: 61.6667ms
max_check_time: 67ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.24741e+09
avg_cost_improvement_rel: 4.69861e+08
Timing Stats: 
sum_check_time: 63ms
avg_check_time: 63ms
max_check_time: 63ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 196
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.22767e+08
Timing Stats: 
sum_check_time: 775ms
avg_check_time: 59.6154ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.24741e+09
avg_cost_improvement_rel: 4.69861e+08
Timing Stats: 
sum_check_time: 65ms
avg_check_time: 65ms
max_check_time: 65ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 136
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59474e+08
Timing Stats: 
sum_check_time: 48ms
avg_check_time: 24ms
max_check_time: 26ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59474e+08
Timing Stats: 
sum_check_time: 85ms
avg_check_time: 85ms
max_check_time: 85ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 110
avg_cost_improvement_abs: 0.146341
avg_cost_improvement_rel: 0.0272938
Timing Stats: 
sum_check_time: 321ms
avg_check_time: 64.2ms
max_check_time: 74ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 64ms
avg_check_time: 64ms
max_check_time: 64ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 1 2 3 3 4 2 
deqs:
0 0 1 2 3 3 4 
pkts metadata: 
0 [22, 23]  | [22, 23] [22, 23]  | [22, 23] [0, 23] [0, 32]  | [22, 23] [24, 25] [24, 25]  | [22, 23] [0, 0] [0, 0] [0, 0]  | [22, 23] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 1 2 3 3 4 2 
deqs:
0 0 1 2 3 3 4 
pkts metadata: 
0 [22, 23]  | [22, 23] [22, 23]  | [22, 23] [0, 23] [0, 32]  | [22, 23] [24, 25] [24, 25]  | [22, 23] [0, 0] [0, 0] [0, 0]  | [22, 23] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 1
[1, 2]: dst(0, t) = 22
[1, 2]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

checking: 
[1, 1]: cenq(0, t) = 1
[1, 2]: dst(0, t) = 22
[1, 2]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 1
[1, 2]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 1
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 3
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 3 3 2 
deqs:
0 0 2 2 3 3 3 
pkts metadata: 
0 [33, 34] [39, 40]  | [11, 12] [17, 18]  | [14, 16] [19, 20] [21, 22]  | [35, 36] [41, 42] [49, 50]  | [37, 38] [43, 44] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 9
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 3 2 3 3 
deqs:
0 0 2 2 3 2 3 
pkts metadata: 
0 [27, 28] [35, 36]  | [11, 13] [14, 16]  | [29, 30] [37, 38] [47, 48]  | [31, 32] [39, 40]  | [33, 34] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 1 3 0 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [30, 31] [40, 41] [50, 51]  |  | 

checking: 
[4, 4]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 0 3 1 
deqs:
0 0 3 3 3 0 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  |  | [31, 32] [41, 42] [51, 52]  | [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

Workload after combining: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 9
[5, 5]: cenq(0, t) = 13

checking: 
[1, 4]: cenq(0, t) <= 9
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[1, 5]: cenq(0, t) <= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 0 0 
deqs:
0 0 0 2 1 3 0 
pkts metadata: 
0  | [11, 12] [33, 34]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  |  |  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 3 2 3 1 
deqs:
0 0 3 1 3 2 3 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46] [53, 54]  |  | [11, 14] [15, 16] [17, 18]  | [33, 34] [41, 42]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

checking: 
[1, 3]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 3 3 3 0 
deqs:
0 0 3 1 3 3 3 
pkts metadata: 
0 [36, 37] [42, 43] [48, 49] [11, 12]  |  | [14, 15] [18, 19] [22, 23]  | [16, 17] [20, 21] [24, 25]  | [40, 41] [46, 47] [52, 53]  |  | 

checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 334 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

Final Workload: 
[1, 4]: cenq(0, t) <= 9
[5, 6]: cenq(0, t) >= 13

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 82ms
avg_check_time: 41ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 111
avg_cost_improvement_abs: 3.47688e+09
avg_cost_improvement_rel: 5.16622e+08
Timing Stats: 
sum_check_time: 275ms
avg_check_time: 91.6667ms
max_check_time: 125ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.27236e+09
avg_cost_improvement_rel: 4.75717e+08
Timing Stats: 
sum_check_time: 78ms
avg_check_time: 78ms
max_check_time: 78ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 7
opt_count: 200
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23604e+08
Timing Stats: 
sum_check_time: 567ms
avg_check_time: 81ms
max_check_time: 107ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.27236e+09
avg_cost_improvement_rel: 4.75717e+08
Timing Stats: 
sum_check_time: 99ms
avg_check_time: 99ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 138
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60601e+08
Timing Stats: 
sum_check_time: 63ms
avg_check_time: 31.5ms
max_check_time: 35ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60601e+08
Timing Stats: 
sum_check_time: 96ms
avg_check_time: 96ms
max_check_time: 96ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 114
avg_cost_improvement_abs: 0.142857
avg_cost_improvement_rel: 0.026644
Timing Stats: 
sum_check_time: 331ms
avg_check_time: 66.2ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 127ms
avg_check_time: 127ms
max_check_time: 127ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 2 2 3 3 4 1 
deqs:
0 0 2 2 3 3 4 
pkts metadata: 
0 [22, 23] [22, 23]  | [22, 23] [0, 0]  | [22, 23] [0, 0] [0, 0]  | [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 2 2 3 3 4 1 
deqs:
0 0 2 2 3 3 4 
pkts metadata: 
0 [22, 23] [22, 23]  | [22, 23] [0, 0]  | [22, 23] [0, 0] [0, 0]  | [22, 23] [22, 23] [22, 23]  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 22
[1, 1]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[4, 6]: dst(0, t) = 22
[4, 6]: ecmp(0, t) = 23
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 22
[1, 1]: ecmp(0, t) = 23
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[4, 6]: dst(0, t) = 22
[4, 6]: ecmp(0, t) = 23
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[4, 6]: dst(0, t) = 22
[4, 6]: ecmp(0, t) = 23
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[1, 1]: dst(0, t) = 22
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[4, 6]: dst(0, t) = 22
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[4, 6]: dst(0, t) = 22
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 2
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 7
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 3 1 
deqs:
0 0 2 3 3 3 3 
pkts metadata: 
0 [36, 37] [42, 43]  | [12, 13] [18, 19] [22, 23]  | [16, 17] [20, 21] [24, 25]  | [38, 39] [44, 45] [50, 51]  | [40, 41] [46, 47] [52, 53]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 3 3 3 1 1 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [38, 39] [44, 45] [50, 51] [11, 12]  | [18, 19] [22, 23] [16, 17]  | [20, 21] [24, 25] [26, 27]  | [40, 41] [46, 47] [52, 53]  | [42, 43]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 1 1 
deqs:
0 0 3 1 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 1 4 
deqs:
0 0 3 1 3 3 1 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 10
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 10
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 3 1 
deqs:
0 0 3 2 3 3 3 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  | [12, 13] [18, 19]  | [16, 17] [20, 21] [22, 23]  | [36, 37] [42, 43] [50, 51]  | [38, 39] [44, 45] [52, 53]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 0 2 3 3 1 
deqs:
0 0 3 2 2 3 3 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46] [53, 54] [63, 64]  |  | [33, 34] [41, 42]  | [11, 12] [15, 16] [17, 18]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 3 0 5 
deqs:
0 0 3 2 2 3 0 
pkts metadata: 
0 [30, 31] [36, 37] [42, 43]  | [11, 12] [16, 17]  | [13, 14] [18, 19]  | [32, 33] [38, 39] [48, 49]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[1, 6]: cenq(0, t) <= 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 0 3 0 1 1 
deqs:
0 0 3 1 3 0 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  |  | [25, 26] [35, 36] [45, 46]  |  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 2 1 9 
deqs:
0 0 3 2 3 2 1 
pkts metadata: 
0 [29, 30] [37, 38] [45, 46]  | [31, 32] [39, 40]  | [12, 13] [14, 15] [16, 17]  | [33, 34] [41, 42]  | [35, 36]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 14
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 3 1 
deqs:
0 0 1 3 3 3 3 
pkts metadata: 
0 [29, 30]  | [31, 32] [39, 40] [47, 48]  | [11, 12] [15, 16] [17, 18]  | [33, 34] [41, 42] [49, 50]  | [35, 36] [43, 44] [51, 52]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 3 0 5 
deqs:
0 0 1 3 3 3 0 
pkts metadata: 
0 [40, 41]  | [11, 12] [18, 19] [24, 25]  | [13, 14] [20, 21] [26, 27]  | [16, 17] [22, 23] [28, 29]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 3 1 
deqs:
0 0 3 2 3 3 3 
pkts metadata: 
0 [34, 35] [40, 41] [46, 47]  | [12, 13] [18, 19]  | [16, 17] [20, 21] [22, 23]  | [36, 37] [42, 43] [50, 51]  | [38, 39] [44, 45] [52, 53]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 777 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 10
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 251ms
avg_check_time: 83.6667ms
max_check_time: 113ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 114
avg_cost_improvement_abs: 3.4959e+09
avg_cost_improvement_rel: 5.18876e+08
Timing Stats: 
sum_check_time: 1264ms
avg_check_time: 252.8ms
max_check_time: 524ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.29614e+09
avg_cost_improvement_rel: 4.78923e+08
Timing Stats: 
sum_check_time: 189ms
avg_check_time: 189ms
max_check_time: 189ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 9
opt_count: 204
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23761e+08
Timing Stats: 
sum_check_time: 965ms
avg_check_time: 107.222ms
max_check_time: 177ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.29614e+09
avg_cost_improvement_rel: 4.78923e+08
Timing Stats: 
sum_check_time: 169ms
avg_check_time: 169ms
max_check_time: 169ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 142
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60416e+08
Timing Stats: 
sum_check_time: 115ms
avg_check_time: 28.75ms
max_check_time: 35ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60416e+08
Timing Stats: 
sum_check_time: 86ms
avg_check_time: 86ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 117
avg_cost_improvement_abs: 0.139535
avg_cost_improvement_rel: 0.0260244
Timing Stats: 
sum_check_time: 774ms
avg_check_time: 193.5ms
max_check_time: 246ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 168ms
avg_check_time: 84ms
max_check_time: 101ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 13ms
avg_check_time: 4.33333ms
max_check_time: 5ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 4 1 4 1 2 
deqs:
0 0 3 3 2 4 1 
pkts metadata: 
0 [24, 25] [24, 25] [24, 25]  | [24, 25] [30, 23] [30, 23] [24, 25]  | [24, 25]  | [24, 25] [24, 26] [27, 26] [0, 0]  | [24, 25]  | [24, 25] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 4 1 4 1 2 
deqs:
0 0 3 3 2 4 1 
pkts metadata: 
0 [24, 25] [24, 25] [24, 25]  | [24, 25] [30, 23] [30, 23] [24, 25]  | [24, 25]  | [24, 25] [24, 26] [27, 26] [0, 0]  | [24, 25]  | [24, 25] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 24
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 24
[5, 5]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 15

checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 24
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[5, 5]: dst(0, t) = 24
[5, 5]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 24
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[5, 5]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 24
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[5, 5]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[5, 5]: ecmp(0, t) = 25
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 1 3 1 2 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [36, 37] [42, 43] [50, 51]  | [11, 14] [18, 19] [22, 23] [16, 17] [20, 21]  | [24, 25]  | [38, 39] [46, 47] [54, 55]  | [40, 41]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 4 1 1 2 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48] [57, 58]  | [29, 30] [39, 40] [49, 50] [59, 60]  | [31, 32]  | [33, 34]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 4 2 2 1 2 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55]  | [26, 27] [36, 37] [46, 47] [56, 57]  | [28, 29] [38, 39]  | [30, 31] [40, 41]  | [32, 33]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 4 0 3 1 3 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55]  | [26, 27] [36, 37] [46, 47] [56, 57]  |  | [30, 31] [40, 41] [50, 51]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[6, 6]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 2 3 2 
deqs:
0 0 3 3 2 2 3 
pkts metadata: 
0 [31, 32] [37, 38] [43, 44]  | [11, 12] [17, 18] [45, 46]  | [14, 16] [19, 20]  | [33, 34] [39, 40]  | [35, 36] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[3, 3]: cenq(0, t) = 8
[4, 5]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 5]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 5]: cenq(0, t) = 4

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 2 3 1 4 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39] [46, 47] [56, 57]  | [11, 14] [15, 16]  | [32, 33] [40, 41] [50, 51]  | [34, 35]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 1 1 4 
deqs:
0 0 3 3 2 1 1 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29]  | [30, 31]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 2 3 3 
deqs:
0 0 2 3 3 2 3 
pkts metadata: 
0 [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

Workload after combining: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: cenq(0, t) = 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[1, 5]: cenq(0, t) <= 13
[5, 5]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 2 1 0 3 
deqs:
0 0 2 3 2 1 0 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28]  |  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) = 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) <= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 1 3 3 3 
deqs:
0 0 3 3 1 3 3 
pkts metadata: 
0 [37, 38] [41, 42] [47, 48]  | [11, 12] [19, 20] [23, 24]  | [14, 15]  | [17, 18] [21, 22] [25, 26]  | [39, 40] [45, 46] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 0
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 3 3 3 3 
deqs:
0 0 3 1 3 3 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 3 1 3 
deqs:
0 0 3 3 2 3 1 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [13, 14] [16, 17] [18, 19]  | [32, 33] [40, 41]  | [34, 35] [42, 43] [50, 51]  | [36, 37]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

checking: 
[1, 2]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 3 3 1 3 
deqs:
0 0 3 3 3 3 1 
pkts metadata: 
0 [40, 41] [44, 45] [50, 51] [56, 57] [18, 19]  | [24, 25]  | [11, 14] [20, 21] [26, 27]  | [15, 17] [22, 23] [28, 29]  | [42, 43]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 390 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

Final Workload: 
[1, 3]: cenq(0, t) <= 8
[5, 5]: aipg(0, t) >= 1
[5, 6]: cenq(0, t) >= 13

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 279ms
avg_check_time: 93ms
max_check_time: 114ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 117
avg_cost_improvement_abs: 3.51406e+09
avg_cost_improvement_rel: 5.19285e+08
Timing Stats: 
sum_check_time: 437ms
avg_check_time: 87.4ms
max_check_time: 120ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.31884e+09
avg_cost_improvement_rel: 4.8024e+08
Timing Stats: 
sum_check_time: 144ms
avg_check_time: 144ms
max_check_time: 144ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 11
opt_count: 209
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23376e+08
Timing Stats: 
sum_check_time: 843ms
avg_check_time: 76.6364ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.31884e+09
avg_cost_improvement_rel: 4.8024e+08
Timing Stats: 
sum_check_time: 138ms
avg_check_time: 138ms
max_check_time: 138ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 148
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59378e+08
Timing Stats: 
sum_check_time: 199ms
avg_check_time: 33.1667ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59378e+08
Timing Stats: 
sum_check_time: 99ms
avg_check_time: 99ms
max_check_time: 99ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 120
avg_cost_improvement_abs: 0.136364
avg_cost_improvement_rel: 0.0254329
Timing Stats: 
sum_check_time: 386ms
avg_check_time: 96.5ms
max_check_time: 119ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 176ms
avg_check_time: 88ms
max_check_time: 118ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 20ms
avg_check_time: 6.66667ms
max_check_time: 9ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 4 1 4 2 1 
deqs:
0 0 3 3 2 4 2 
pkts metadata: 
0 [24, 25] [24, 25] [24, 25]  | [24, 25] [24, 23] [24, 23] [24, 25]  | [24, 25]  | [24, 25] [24, 26] [24, 26] [0, 0]  | [24, 25] [0, 0]  | [24, 25]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 4 1 4 2 1 
deqs:
0 0 3 3 2 4 2 
pkts metadata: 
0 [24, 25] [24, 25] [24, 25]  | [24, 25] [24, 23] [24, 23] [24, 25]  | [24, 25]  | [24, 25] [24, 26] [24, 26] [0, 0]  | [24, 25] [0, 0]  | [24, 25]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 25
[1, 3]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 24
[6, 6]: ecmp(0, t) = 25

checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 25
[1, 3]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 24
[6, 6]: ecmp(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 25
[1, 3]: dst(0, t) = 24
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 25
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 25

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 25
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 4 1 3 2 1 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45] [54, 55]  | [28, 29] [36, 37] [46, 47] [56, 57]  | [11, 13]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 6 0 3 3 2 1 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55] [64, 65] [74, 75]  |  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 3 1 
deqs:
0 0 2 3 3 3 3 
pkts metadata: 
0 [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 2 1 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 15
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 3 1 
deqs:
0 0 3 2 3 3 3 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 2 1 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [30, 31] [38, 39] [46, 47]  | [11, 13] [16, 17] [48, 49]  | [32, 33] [40, 41] [50, 51]  | [34, 35] [42, 43]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 4 0 1 2 1 
deqs:
0 0 3 3 2 1 2 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44] [53, 54]  | [25, 26] [35, 36] [45, 46] [55, 56]  |  | [29, 30]  | [31, 32] [41, 42]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 1 3 2 10 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [32, 33] [38, 39] [46, 47]  | [34, 35] [40, 41] [48, 49] [56, 57] [66, 67]  | [17, 18]  | [11, 13] [15, 16] [19, 20]  | [36, 37] [44, 45]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 0 3 2 10 
deqs:
0 0 3 3 2 3 2 
pkts metadata: 
0 [34, 35] [42, 43] [50, 51]  | [12, 14] [15, 16] [17, 18] [19, 20] [21, 22]  |  | [38, 39] [46, 47] [54, 55]  | [40, 41] [48, 49]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

Workload after combining: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 12

checking: 
[1, 3]: cenq(0, t) <= 8
[4, 4]: cenq(0, t) = 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[1, 4]: cenq(0, t) <= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 2 3 0 1 
deqs:
0 0 2 0 2 3 0 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  |  | [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 2 3 2 9 
deqs:
0 0 3 3 2 3 2 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  | [30, 31] [40, 41] [50, 51]  | [32, 33] [42, 43]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

checking: 
[1, 2]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 2 4 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [32, 33] [40, 41] [48, 49]  | [11, 13] [15, 16] [17, 19]  | [34, 35] [42, 43] [50, 51]  | [36, 37] [44, 45]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 549 milliseconds
Workload after restricting time ranges: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

Final Workload: 
[1, 3]: cenq(0, t) <= 8
[4, 6]: cenq(0, t) >= 12

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 162ms
avg_check_time: 81ms
max_check_time: 106ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 119
avg_cost_improvement_abs: 3.53142e+09
avg_cost_improvement_rel: 5.23653e+08
Timing Stats: 
sum_check_time: 208ms
avg_check_time: 69.3333ms
max_check_time: 104ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.34053e+09
avg_cost_improvement_rel: 4.85475e+08
Timing Stats: 
sum_check_time: 51ms
avg_check_time: 51ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 215
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23007e+08
Timing Stats: 
sum_check_time: 1091ms
avg_check_time: 77.9286ms
max_check_time: 113ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.34053e+09
avg_cost_improvement_rel: 4.85475e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 79ms
max_check_time: 79ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 153
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58637e+08
Timing Stats: 
sum_check_time: 151ms
avg_check_time: 30.2ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58637e+08
Timing Stats: 
sum_check_time: 106ms
avg_check_time: 106ms
max_check_time: 106ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 124
avg_cost_improvement_abs: 0.133333
avg_cost_improvement_rel: 0.0248677
Timing Stats: 
sum_check_time: 545ms
avg_check_time: 109ms
max_check_time: 147ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 51ms
avg_check_time: 51ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 5 1 1 4 2 
deqs:
0 0 3 3 3 1 4 
pkts metadata: 
0 [22, 0] [22, 0] [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0]  | [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 5 1 1 4 2 
deqs:
0 0 3 3 3 1 4 
pkts metadata: 
0 [22, 0] [22, 0] [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0]  | [22, 0]  | [22, 0] [22, 0] [22, 0] [22, 0]  | [22, 0] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 22
[1, 5]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 8
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 22
[1, 5]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 8
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 5]: dst(0, t) = 22
[2, 2]: cenq(0, t) = 8
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 8
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 8
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 9
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 14
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 6 1 1 3 2 
deqs:
0 0 3 3 3 2 3 
pkts metadata: 
0 [28, 29] [34, 35] [44, 45]  | [30, 31] [36, 37] [46, 47] [56, 57] [66, 67] [76, 77]  | [12, 13]  | [15, 17]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 7 2 1 0 3 3 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [35, 36] [43, 44] [51, 52] [11, 12] [17, 18] [21, 22] [14, 15]  | [19, 20] [23, 24]  | [37, 38]  |  | [41, 42] [49, 50] [59, 60]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 4]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 6 1 1 3 3 
deqs:
0 0 3 3 3 2 3 
pkts metadata: 
0 [34, 35] [40, 41] [50, 51]  | [36, 37] [42, 43] [52, 53] [12, 13] [18, 19] [22, 23]  | [15, 16]  | [20, 21]  | [38, 39] [48, 49] [58, 59]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[3, 4]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 6 1 0 3 3 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36] [45, 46] [55, 56] [65, 66] [75, 76]  | [27, 28]  |  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 3 4 
deqs:
0 0 3 2 3 3 3 
pkts metadata: 
0 [28, 29] [36, 37] [44, 45]  | [12, 13] [15, 16]  | [30, 31] [38, 39] [48, 49]  | [32, 33] [40, 41] [50, 51]  | [34, 35] [42, 43] [52, 53]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 10

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 2 3 3 4 
deqs:
0 0 3 2 2 3 3 
pkts metadata: 
0 [33, 34] [39, 40] [45, 46]  | [11, 12] [16, 18]  | [35, 36] [41, 42]  | [14, 15] [19, 20] [21, 22]  | [37, 38] [43, 44] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

Workload after combining: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 10
[5, 5]: cenq(0, t) = 14

checking: 
[1, 4]: cenq(0, t) <= 10
[5, 5]: cenq(0, t) = 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[1, 5]: cenq(0, t) <= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 2 2 0 3 
deqs:
0 0 3 0 2 2 0 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38]  |  | [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 13

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 2 2 1 3 10 
deqs:
0 0 3 3 3 1 3 
pkts metadata: 
0 [22, 24] [33, 34] [43, 44] [53, 54] [63, 64]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30]  | [31, 32] [41, 42] [51, 52]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

checking: 
[1, 3]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 2 3 3 2 10 
deqs:
0 0 3 3 3 3 2 
pkts metadata: 
0 [34, 35] [40, 41] [48, 49] [11, 13]  | [17, 18] [42, 43]  | [15, 16] [19, 20] [21, 22]  | [36, 37] [44, 45] [52, 53]  | [38, 39] [46, 47]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 880 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

Final Workload: 
[1, 4]: cenq(0, t) <= 10
[5, 6]: cenq(0, t) >= 14

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 143ms
avg_check_time: 71.5ms
max_check_time: 82ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 121
avg_cost_improvement_abs: 3.54802e+09
avg_cost_improvement_rel: 5.2783e+08
Timing Stats: 
sum_check_time: 296ms
avg_check_time: 98.6667ms
max_check_time: 155ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.36128e+09
avg_cost_improvement_rel: 4.90483e+08
Timing Stats: 
sum_check_time: 115ms
avg_check_time: 115ms
max_check_time: 115ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 220
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23167e+08
Timing Stats: 
sum_check_time: 1169ms
avg_check_time: 116.9ms
max_check_time: 212ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.36128e+09
avg_cost_improvement_rel: 4.90483e+08
Timing Stats: 
sum_check_time: 200ms
avg_check_time: 200ms
max_check_time: 200ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 155
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59239e+08
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 39.5ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59239e+08
Timing Stats: 
sum_check_time: 157ms
avg_check_time: 157ms
max_check_time: 157ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 128
avg_cost_improvement_abs: 0.130435
avg_cost_improvement_rel: 0.0243271
Timing Stats: 
sum_check_time: 876ms
avg_check_time: 175.2ms
max_check_time: 217ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 53ms
max_check_time: 53ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 2 3 3 4 1 
deqs:
0 0 3 2 3 3 4 
pkts metadata: 
0 [0, 24] [0, 24] [0, 24]  | [0, 24] [25, 26]  | [0, 24] [0, 24] [0, 24]  | [0, 24] [27, 28] [27, 28]  | [0, 24] [23, 0] [23, 0] [23, 0]  | [0, 24]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 2 3 3 4 1 
deqs:
0 0 3 2 3 3 4 
pkts metadata: 
0 [0, 24] [0, 24] [0, 24]  | [0, 24] [25, 26]  | [0, 24] [0, 24] [0, 24]  | [0, 24] [27, 28] [27, 28]  | [0, 24] [23, 0] [23, 0] [23, 0]  | [0, 24]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[3, 3]: dst(0, t) = 0
[3, 3]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[3, 3]: dst(0, t) = 0
[3, 3]: ecmp(0, t) = 24
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[3, 3]: dst(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: dst(0, t) = 0
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[1, 1]: ecmp(0, t) = 24
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[3, 3]: dst(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[3, 3]: dst(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1
[6, 6]: ecmp(0, t) = 24

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 0
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 5
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 2 3 1 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [36, 37] [42, 43] [48, 49]  | [11, 13] [18, 19] [22, 23]  | [14, 17] [20, 21] [24, 25] [58, 59]  | [38, 39] [44, 45]  | [40, 41] [46, 47] [52, 53]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 3 3 1 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [42, 43] [46, 47] [50, 51]  | [11, 13] [20, 21] [26, 27]  | [14, 17] [22, 23] [28, 29]  | [44, 45] [48, 49] [52, 53]  | [18, 19] [24, 25] [30, 31]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 3 2 3 1 
deqs:
0 0 3 3 3 2 3 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55] [64, 65]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 3 2 3 2 
deqs:
0 0 3 3 3 2 3 
pkts metadata: 
0 [24, 25] [34, 35] [44, 45] [54, 55] [64, 65]  | [26, 27]  | [28, 29] [38, 39] [48, 49]  | [30, 31] [40, 41]  | [32, 33] [42, 43] [52, 53]  | [1000, 1000] [1000, 1000]  | 

Last valid workload: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[4, 4]: cenq(0, t) = 11
[5, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 2 5 1 1 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [42, 43] [44, 45] [48, 49]  | [11, 12] [20, 21] [26, 27] [13, 17]  | [22, 23] [28, 29]  | [18, 19] [24, 25] [52, 53] [60, 61] [70, 71]  | [30, 31]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 3 3 1 
deqs:
0 0 3 3 2 3 3 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [32, 33] [40, 41] [48, 49] [56, 57]  | [34, 35]  | [12, 13] [16, 17] [18, 19]  | [36, 37] [44, 45] [52, 53]  | [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 1 3 3 2 
deqs:
0 0 3 3 2 3 3 
pkts metadata: 
0 [32, 33] [38, 39] [46, 47]  | [34, 35] [40, 41] [48, 49] [56, 57]  | [15, 17]  | [12, 13] [18, 19] [20, 21]  | [36, 37] [44, 45] [52, 53]  | [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

Workload after combining: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) = 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[1, 6]: cenq(0, t) <= 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 5 3 0 1 1 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [32, 33] [38, 39] [46, 47]  | [14, 15] [40, 41] [48, 49] [56, 57] [66, 67]  | [20, 21] [16, 17] [18, 19]  |  | [36, 37]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 0 3 2 0 10 
deqs:
0 0 3 0 3 2 0 
pkts metadata: 
0 [22, 23] [32, 33] [42, 43]  |  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 15
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 3 1 
deqs:
0 0 2 3 3 3 3 
pkts metadata: 
0 [42, 43] [46, 47]  | [12, 13] [20, 21] [26, 27]  | [16, 17] [22, 23] [28, 29]  | [18, 19] [24, 25] [30, 31]  | [44, 45] [48, 49] [52, 53]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 3 3 3 0 5 
deqs:
0 0 2 3 3 3 0 
pkts metadata: 
0 [41, 42] [45, 46]  | [12, 13] [19, 20] [25, 26]  | [14, 15] [21, 22] [27, 28]  | [17, 18] [23, 24] [29, 30]  |  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

checking: 
[1, 3]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 9 2 0 1 3 1 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [43, 44] [49, 50] [57, 58] [13, 14] [21, 22] [27, 28] [17, 18] [23, 24] [29, 30]  | [19, 20] [25, 26]  |  | [31, 32]  | [47, 48] [55, 56] [65, 66]  | [1000, 1000]  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 1085 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

Final Workload: 
[1, 4]: cenq(0, t) <= 11
[6, 6]: cenq(0, t) >= 16
[6, 6]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 229ms
avg_check_time: 76.3333ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 124
avg_cost_improvement_abs: 3.56391e+09
avg_cost_improvement_rel: 5.29655e+08
Timing Stats: 
sum_check_time: 618ms
avg_check_time: 123.6ms
max_check_time: 224ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.38114e+09
avg_cost_improvement_rel: 4.93102e+08
Timing Stats: 
sum_check_time: 130ms
avg_check_time: 130ms
max_check_time: 130ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 9
opt_count: 224
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23321e+08
Timing Stats: 
sum_check_time: 789ms
avg_check_time: 87.6667ms
max_check_time: 138ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.38114e+09
avg_cost_improvement_rel: 4.93102e+08
Timing Stats: 
sum_check_time: 86ms
avg_check_time: 86ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 161
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58533e+08
Timing Stats: 
sum_check_time: 142ms
avg_check_time: 23.6667ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58533e+08
Timing Stats: 
sum_check_time: 97ms
avg_check_time: 97ms
max_check_time: 97ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 131
avg_cost_improvement_abs: 0.12766
avg_cost_improvement_rel: 0.0238095
Timing Stats: 
sum_check_time: 1081ms
avg_check_time: 270.25ms
max_check_time: 383ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 113ms
avg_check_time: 56.5ms
max_check_time: 57ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 17ms
avg_check_time: 5.66667ms
max_check_time: 7ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 3 4 1 3 4 2 
deqs:
0 0 3 3 2 3 4 
pkts metadata: 
0 [25, 0] [25, 0] [25, 0]  | [25, 0] [23, 24] [25, 24] [25, 0]  | [25, 0]  | [25, 0] [27, 28] [27, 28]  | [25, 0] [25, 0] [25, 0] [25, 0]  | [25, 0] [1000, 1000]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 3 4 1 3 4 2 
deqs:
0 0 3 3 2 3 4 
pkts metadata: 
0 [25, 0] [25, 0] [25, 0]  | [25, 0] [23, 24] [25, 24] [25, 0]  | [25, 0]  | [25, 0] [27, 28] [27, 28]  | [25, 0] [25, 0] [25, 0] [25, 0]  | [25, 0] [1000, 1000]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 0
[6, 6]: cenq(0, t) = 17

checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: dst(0, t) = 25
[3, 3]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 0
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[3, 3]: ecmp(0, t) = 0
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 0
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: dst(0, t) = 25
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 0
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[5, 5]: ecmp(0, t) = 0
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[1, 1]: ecmp(0, t) = 0
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[5, 5]: dst(0, t) = 25
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 3
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 7
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 8
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 15
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 4 1 2 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45]  | [28, 29] [36, 37] [46, 47]  | [30, 31] [38, 39] [48, 49] [58, 59]  | [32, 33] [40, 41] [50, 51] [60, 61]  | [11, 12]  | [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[6, 6]: cenq(0, t) = 17

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 4 1 1 5 
deqs:
0 0 3 3 3 2 1 
pkts metadata: 
0 [26, 27] [34, 35] [44, 45]  | [28, 29] [36, 37] [46, 47]  | [30, 31] [38, 39] [48, 49] [58, 59]  | [13, 14]  | [32, 33]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 5 1 3 10 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [24, 26] [35, 36] [45, 46] [55, 56] [65, 66]  | [27, 28]  | [29, 30] [39, 40] [49, 50] [59, 60] [69, 70]  | [31, 32]  | [33, 34] [43, 44] [53, 54]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[4, 4]: cenq(0, t) = 11

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 5 1 5 0 3 10 
deqs:
0 0 3 3 3 2 3 
pkts metadata: 
0 [23, 25] [34, 35] [44, 45] [54, 55] [64, 65]  | [26, 27]  | [28, 29] [38, 39] [48, 49] [58, 59] [68, 69]  |  | [32, 33] [42, 43] [52, 53]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

Workload after removing specs: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

Workload after combining: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[4, 4]: cenq(0, t) = 11
[5, 5]: cenq(0, t) = 15

checking: 
[1, 4]: cenq(0, t) <= 11
[5, 5]: cenq(0, t) = 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[1, 5]: cenq(0, t) <= 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 4 0 2 3 0 
deqs:
0 0 3 3 1 2 3 
pkts metadata: 
0 [30, 31] [38, 39] [46, 47]  | [11, 13] [14, 15] [16, 17] [18, 19]  |  | [34, 35] [42, 43]  | [36, 37] [44, 45] [52, 53]  |  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 14

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 3 3 3 0 
deqs:
0 0 3 2 3 3 3 
pkts metadata: 
0 [39, 40] [43, 44] [47, 48]  | [12, 13] [19, 20]  | [15, 16] [21, 22] [25, 26]  | [17, 18] [23, 24] [27, 28]  | [41, 42] [45, 46] [51, 52]  |  | 

Workload after tightening constant bounds: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

checking: 
[1, 3]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 3 3 4 2 0 
deqs:
0 0 3 3 3 3 3 
pkts metadata: 
0 [45, 46] [47, 48] [49, 50]  | [11, 12] [19, 20] [27, 28]  | [14, 16] [21, 22] [29, 30]  | [17, 18] [23, 24] [31, 32] [59, 60]  | [25, 26] [33, 34]  |  | 

checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 633 milliseconds
Workload after restricting time ranges: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

Final Workload: 
[1, 4]: cenq(0, t) <= 11
[5, 6]: cenq(0, t) >= 15

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 130ms
avg_check_time: 65ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 126
avg_cost_improvement_abs: 3.57914e+09
avg_cost_improvement_rel: 5.33533e+08
Timing Stats: 
sum_check_time: 437ms
avg_check_time: 145.667ms
max_check_time: 176ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.40018e+09
avg_cost_improvement_rel: 4.97742e+08
Timing Stats: 
sum_check_time: 220ms
avg_check_time: 220ms
max_check_time: 220ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
opt_count: 229
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23468e+08
Timing Stats: 
sum_check_time: 1175ms
avg_check_time: 146.875ms
max_check_time: 253ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.40018e+09
avg_cost_improvement_rel: 4.97742e+08
Timing Stats: 
sum_check_time: 230ms
avg_check_time: 230ms
max_check_time: 230ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 6
opt_count: 167
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.57857e+08
Timing Stats: 
sum_check_time: 249ms
avg_check_time: 41.5ms
max_check_time: 49ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.57857e+08
Timing Stats: 
sum_check_time: 313ms
avg_check_time: 313ms
max_check_time: 313ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 135
avg_cost_improvement_abs: 0.125
avg_cost_improvement_rel: 0.0233135
Timing Stats: 
sum_check_time: 630ms
avg_check_time: 126ms
max_check_time: 204ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 56ms
avg_check_time: 56ms
max_check_time: 56ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 1 4 1 1 1 
deqs:
0 0 0 1 4 1 1 
pkts metadata: 
0  | [0, 0]  | [0, 0] [0, 0] [0, 0] [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 1 4 1 1 1 
deqs:
0 0 0 1 4 1 1 
pkts metadata: 
0  | [0, 0]  | [0, 0] [0, 0] [0, 0] [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 0
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 0
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [25, 26]  | [27, 28]  | [11, 12]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 1 1 1 
deqs:
0 0 0 3 2 1 1 
pkts metadata: 
0  | [11, 12] [13, 14] [43, 44]  | [27, 28] [35, 36]  | [29, 30]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 4]: cenq(0, t) = 6
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 1 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [25, 26] [33, 34]  | [11, 12] [13, 14]  | [27, 28]  | [29, 30]  | [31, 32]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 1 1 1 
deqs:
0 0 2 2 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [22, 23] [30, 31] [40, 41]  | [11, 12]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [22, 23]  | [11, 12] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 2 3 1 1 
deqs:
0 0 0 1 2 3 1 
pkts metadata: 
0  | [22, 23]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

Last valid workload: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[2, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 1
[3, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[2, 2]: cenq(0, t) = 1
[3, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 2 3 1 1 
deqs:
0 0 1 0 2 3 1 
pkts metadata: 
0 [21, 22]  |  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

Workload after combining: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 1
[4, 6]: aipg(0, t) = 1

checking: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 2 3 3 10 
deqs:
0 0 0 1 2 3 3 
pkts metadata: 
0  | [23, 24]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  | [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000] [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1

checking: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 2 3 0 0 
deqs:
0 0 0 1 2 3 0 
pkts metadata: 
0  | [22, 23]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  |  |  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1

checking: 
[1, 1]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 1 0 0 
deqs:
0 0 0 2 3 1 0 
pkts metadata: 
0  | [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  |  |  | 

checking: 
[1, 2]: cenq(0, t) <= 1
[4, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[4, 5]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[4, 4]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 115 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 1
[4, 4]: aipg(0, t) >= 1

Final Workload: 
[1, 2]: cenq(0, t) <= 1
[4, 4]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 82ms
avg_check_time: 41ms
max_check_time: 47ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 128
avg_cost_improvement_abs: 3.59375e+09
avg_cost_improvement_rel: 5.37254e+08
Timing Stats: 
sum_check_time: 148ms
avg_check_time: 49.3333ms
max_check_time: 71ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.33079e+09
avg_cost_improvement_rel: 4.87584e+08
Timing Stats: 
sum_check_time: 45ms
avg_check_time: 45ms
max_check_time: 45ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 14
opt_count: 235
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23127e+08
Timing Stats: 
sum_check_time: 588ms
avg_check_time: 42ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.33079e+09
avg_cost_improvement_rel: 4.87584e+08
Timing Stats: 
sum_check_time: 21ms
avg_check_time: 21ms
max_check_time: 21ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 169
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58072e+08
Timing Stats: 
sum_check_time: 43ms
avg_check_time: 21.5ms
max_check_time: 24ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58072e+08
Timing Stats: 
sum_check_time: 88ms
avg_check_time: 88ms
max_check_time: 88ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 138
avg_cost_improvement_abs: 0.142857
avg_cost_improvement_rel: 0.0269193
Timing Stats: 
sum_check_time: 109ms
avg_check_time: 27.25ms
max_check_time: 35ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 44ms
avg_check_time: 44ms
max_check_time: 44ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 3.66667ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 4 1 1 1 1 
deqs:
0 0 0 4 1 1 1 
pkts metadata: 
0  | [21, 22] [21, 22] [23, 24] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 4 1 1 1 1 
deqs:
0 0 0 4 1 1 1 
pkts metadata: 
0  | [21, 22] [21, 22] [23, 24] [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | [21, 22]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 21
[3, 6]: ecmp(0, t) = 22
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 21
[3, 6]: ecmp(0, t) = 22
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[3, 6]: dst(0, t) = 21
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [21, 22]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 1 1 1 
deqs:
0 0 3 1 1 1 1 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42]  | [11, 12]  | [25, 26]  | [27, 28]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 7
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [24, 25]  | [11, 12] [13, 14] [42, 43]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 1 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 1 1 0 
deqs:
0 0 1 3 1 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 2 1 0 
deqs:
0 0 0 3 1 2 1 
pkts metadata: 
0  | [26, 27] [34, 35] [42, 43]  | [28, 29]  | [11, 12] [13, 14]  | [30, 31]  |  | 

Last valid workload: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 1]: cenq(0, t) = 0
[2, 6]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 6]: cenq(0, t) = t

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 6]: cenq(0, t) = 5

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 2 1 1 1 1 
deqs:
0 0 3 2 1 1 1 
pkts metadata: 
0 [24, 25] [32, 33] [40, 41]  | [11, 12] [13, 14]  | [26, 27]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 2 2 1 0 
deqs:
0 0 0 2 2 2 1 
pkts metadata: 
0  | [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37]  | [28, 29]  |  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

Workload after combining: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 0
[3, 6]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) <= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 3 0 
deqs:
0 0 0 3 2 3 3 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) >= 1

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) >= 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 3 3 0 
deqs:
0 0 0 2 3 3 3 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30] [39, 40] [49, 50]  |  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: aipg(0, t) >= 1

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 5]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 4]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 3 0 
deqs:
0 0 0 2 1 3 3 
pkts metadata: 
0  | [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29] [38, 39] [48, 49]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[4, 4]: aipg(0, t) >= 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 1 3 0 
deqs:
0 0 0 2 3 1 3 
pkts metadata: 
0  | [21, 22] [31, 32]  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  |  | 

restrict_time_ranges took 116 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 0
[3, 4]: aipg(0, t) >= 1

Final Workload: 
[1, 1]: cenq(0, t) <= 0
[3, 4]: aipg(0, t) >= 1

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 71ms
avg_check_time: 35.5ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 130
avg_cost_improvement_abs: 3.52187e+09
avg_cost_improvement_rel: 5.26508e+08
Timing Stats: 
sum_check_time: 77ms
avg_check_time: 25.6667ms
max_check_time: 41ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.26418e+09
avg_cost_improvement_rel: 4.77832e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 13
opt_count: 240
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.23272e+08
Timing Stats: 
sum_check_time: 374ms
avg_check_time: 28.7692ms
max_check_time: 56ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.26418e+09
avg_cost_improvement_rel: 4.77832e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 171
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58638e+08
Timing Stats: 
sum_check_time: 36ms
avg_check_time: 18ms
max_check_time: 20ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.58638e+08
Timing Stats: 
sum_check_time: 86ms
avg_check_time: 86ms
max_check_time: 86ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 140
avg_cost_improvement_abs: 0.16
avg_cost_improvement_rel: 0.030381
Timing Stats: 
sum_check_time: 114ms
avg_check_time: 28.5ms
max_check_time: 39ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 42ms
avg_check_time: 42ms
max_check_time: 42ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 10ms
avg_check_time: 3.33333ms
max_check_time: 4ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 1 4 2 1 1 
deqs:
0 0 0 1 4 2 1 
pkts metadata: 
0  | [20, 0]  | [20, 0] [20, 0] [20, 0] [20, 0]  | [20, 0] [20, 0]  | [20, 0]  | [20, 0]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 1 4 2 1 1 
deqs:
0 0 0 1 4 2 1 
pkts metadata: 
0  | [20, 0]  | [20, 0] [20, 0] [20, 0] [20, 0]  | [20, 0] [20, 0]  | [20, 0]  | [20, 0]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 20
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 20
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[2, 6]: dst(0, t) = 20
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 1
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: aipg(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 2 1 1 
deqs:
0 0 3 2 0 2 1 
pkts metadata: 
0 [22, 23] [30, 31] [40, 41] [50, 51]  | [11, 12]  |  | [26, 27] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 2 1 1 
deqs:
0 0 3 2 0 2 1 
pkts metadata: 
0 [21, 22] [31, 32] [41, 42] [51, 52]  | [23, 24]  |  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 1 1 
deqs:
0 0 1 0 3 3 1 
pkts metadata: 
0 [24, 25]  |  | [28, 29] [36, 37] [44, 45]  | [11, 12] [13, 14] [46, 47]  | [30, 31]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 2 1 1 
deqs:
0 0 2 0 3 2 1 
pkts metadata: 
0 [19, 20] [29, 30]  |  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 1 1 
deqs:
0 0 1 0 3 3 1 
pkts metadata: 
0 [21, 22]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 2 1 1 
deqs:
0 0 3 1 1 2 1 
pkts metadata: 
0 [22, 23] [30, 31] [40, 41]  | [11, 12]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 3 3 1 1 
deqs:
0 0 0 1 3 3 1 
pkts metadata: 
0  | [11, 12]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 3 1 1 
deqs:
0 0 3 1 1 3 1 
pkts metadata: 
0 [22, 23] [30, 31] [40, 41]  | [11, 12]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 1 2 3 1 1 
deqs:
0 0 0 1 2 3 1 
pkts metadata: 
0  | [11, 12]  | [25, 26] [35, 36]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 0 3 3 1 1 
deqs:
0 0 2 0 3 3 1 
pkts metadata: 
0 [21, 22] [31, 32]  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[2, 2]: cenq(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 1 1 
deqs:
0 0 1 0 3 3 1 
pkts metadata: 
0 [20, 21]  |  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

Workload after removing specs: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

Workload after combining: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[2, 2]: cenq(0, t) = 1
[3, 3]: cenq(0, t) = 5

checking: 
[1, 2]: cenq(0, t) <= 1
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[1, 3]: cenq(0, t) <= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 1 1 
deqs:
0 0 1 0 3 3 1 
pkts metadata: 
0 [20, 21]  |  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 0 3 3 1 1 
deqs:
0 0 1 0 3 3 1 
pkts metadata: 
0 [20, 21]  |  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

checking: 
[1, 1]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 3 3 1 1 
deqs:
0 0 1 1 3 3 1 
pkts metadata: 
0 [21, 22]  | [23, 24]  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 160 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

Final Workload: 
[1, 2]: cenq(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 76ms
avg_check_time: 38ms
max_check_time: 38ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 132
avg_cost_improvement_abs: 3.53703e+09
avg_cost_improvement_rel: 5.30221e+08
Timing Stats: 
sum_check_time: 70ms
avg_check_time: 23.3333ms
max_check_time: 33ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.28439e+09
avg_cost_improvement_rel: 4.82499e+08
Timing Stats: 
sum_check_time: 18ms
avg_check_time: 18ms
max_check_time: 18ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 246
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.22949e+08
Timing Stats: 
sum_check_time: 518ms
avg_check_time: 32.375ms
max_check_time: 51ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.28439e+09
avg_cost_improvement_rel: 4.82499e+08
Timing Stats: 
sum_check_time: 19ms
avg_check_time: 19ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 173
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5883e+08
Timing Stats: 
sum_check_time: 37ms
avg_check_time: 18.5ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5883e+08
Timing Stats: 
sum_check_time: 83ms
avg_check_time: 83ms
max_check_time: 83ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 144
avg_cost_improvement_abs: 0.156863
avg_cost_improvement_rel: 0.0297852
Timing Stats: 
sum_check_time: 155ms
avg_check_time: 31ms
max_check_time: 58ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 39ms
avg_check_time: 39ms
max_check_time: 39ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 4 1 2 1 1 
deqs:
0 0 0 4 1 2 1 
pkts metadata: 
0  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 4 1 2 1 1 
deqs:
0 0 0 4 1 2 1 
pkts metadata: 
0  | [22, 23] [22, 23] [22, 23] [22, 23]  | [22, 23]  | [22, 23] [22, 23]  | [22, 23]  | [22, 23]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 22
[2, 6]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 22
[2, 6]: ecmp(0, t) = 23
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 22
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 2 1 1 
deqs:
0 0 2 2 1 2 1 
pkts metadata: 
0 [20, 21] [30, 31]  | [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 1 2 1 1 
deqs:
0 0 2 2 1 2 1 
pkts metadata: 
0 [21, 22] [31, 32]  | [23, 24] [33, 34]  | [25, 26]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: aipg(0, t) = 1
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 1 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[4, 4]: cenq(0, t) = 7
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 2 1 1 
deqs:
0 0 0 3 2 2 1 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 1 2 1 1 
deqs:
0 0 3 1 1 2 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25]  | [26, 27] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 1 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [28, 29] [36, 37] [44, 45]  | [30, 31]  | [11, 12] [13, 14] [15, 16]  | [32, 33]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[5, 5]: cenq(0, t) = 8
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 3 2 1 1 
deqs:
0 0 0 2 3 2 1 
pkts metadata: 
0  | [22, 23] [32, 33]  | [24, 25] [34, 35] [44, 45]  | [26, 27] [36, 37]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 4 1 0 2 1 1 
deqs:
0 0 3 2 0 2 1 
pkts metadata: 
0 [23, 24] [31, 32] [41, 42] [51, 52]  | [11, 12]  |  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 1 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 1 0 
deqs:
0 0 0 3 2 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 3 1 0 
deqs:
0 0 1 3 1 3 1 
pkts metadata: 
0 [26, 27]  | [11, 12] [13, 14] [15, 16]  | [28, 29]  | [30, 31] [38, 39] [46, 47]  | [32, 33]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: aipg(0, t) = 1
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 0 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 1 0 
deqs:
0 0 0 3 2 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
checking: 
[1, 1]: cenq(0, t) = 0
[2, 3]: cenq(0, t) = 1

input feasible: UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 3]: cenq(0, t) = t

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 1 3 1 0 
deqs:
0 0 0 2 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 3]: cenq(0, t) = 2

input feasible: UNSAT
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 1 3 1 0 
deqs:
0 0 1 3 1 3 1 
pkts metadata: 
0 [26, 27]  | [11, 12] [13, 14] [15, 16]  | [28, 29]  | [30, 31] [38, 39] [46, 47]  | [32, 33]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 0 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 1 0 
deqs:
0 0 0 3 2 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

Workload after combining: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: cenq(0, t) = 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[1, 3]: cenq(0, t) <= 5
[3, 3]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 0 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) = 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) <= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 1 0 
deqs:
0 0 0 3 2 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 0
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 2 3 1 0 
deqs:
0 0 0 3 2 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 0 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  |  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 46 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

Final Workload: 
[1, 1]: cenq(0, t) <= 0
[3, 3]: aipg(0, t) >= 1
[3, 6]: cenq(0, t) >= 5

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 79ms
avg_check_time: 26.3333ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 135
avg_cost_improvement_abs: 3.46901e+09
avg_cost_improvement_rel: 5.20024e+08
Timing Stats: 
sum_check_time: 103ms
avg_check_time: 20.6ms
max_check_time: 31ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.7322e+08
Timing Stats: 
sum_check_time: 12ms
avg_check_time: 12ms
max_check_time: 12ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 19
opt_count: 251
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.22638e+08
Timing Stats: 
sum_check_time: 474ms
avg_check_time: 24.9474ms
max_check_time: 40ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.22123e+09
avg_cost_improvement_rel: 4.7322e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 175
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59014e+08
Timing Stats: 
sum_check_time: 31ms
avg_check_time: 15.5ms
max_check_time: 17ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.59014e+08
Timing Stats: 
sum_check_time: 81ms
avg_check_time: 81ms
max_check_time: 81ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 147
avg_cost_improvement_abs: 0.153846
avg_cost_improvement_rel: 0.0292125
Timing Stats: 
sum_check_time: 44ms
avg_check_time: 14.6667ms
max_check_time: 16ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 53ms
avg_check_time: 26.5ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 29ms
avg_check_time: 9.66667ms
max_check_time: 23ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 4 2 1 1 1 
deqs:
0 0 0 4 2 1 1 
pkts metadata: 
0  | [0, 0] [0, 0] [0, 0] [0, 0]  | [0, 0] [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 4 2 1 1 1 
deqs:
0 0 0 4 2 1 1 
pkts metadata: 
0  | [0, 0] [0, 0] [0, 0] [0, 0]  | [0, 0] [0, 0]  | [0, 0]  | [0, 0]  | [0, 0]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 0
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 0
[2, 6]: ecmp(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[2, 6]: dst(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[2, 2]: cenq(0, t) = 4
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 2 1 1 1 
deqs:
0 0 1 3 2 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 6
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 3 1 2 1 1 1 
deqs:
0 0 3 1 2 1 1 
pkts metadata: 
0 [20, 21] [30, 31] [40, 41]  | [22, 23]  | [24, 25] [34, 35]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[4, 4]: cenq(0, t) = 7
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 2 2 2 1 1 1 
deqs:
0 0 2 2 2 1 1 
pkts metadata: 
0 [22, 23] [32, 33]  | [24, 25] [34, 35]  | [26, 27] [36, 37]  | [28, 29]  | [30, 31]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[4, 6]: aipg(0, t) = 1
[5, 5]: cenq(0, t) = 8
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 0 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  |  | 

checking: 
[1, 1]: cenq(0, t) = 0
[4, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 9

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 4
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[4, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 3 3 1 1 1 
deqs:
0 0 1 3 3 1 1 
pkts metadata: 
0 [20, 21]  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) = 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

Workload after combining: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 1]: cenq(0, t) = 0
[2, 2]: cenq(0, t) = 4

checking: 
[1, 1]: cenq(0, t) <= 0
[2, 2]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[1, 2]: cenq(0, t) <= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 3 1 1 1 
deqs:
0 0 0 3 3 1 1 
pkts metadata: 
0  | [22, 23] [32, 33] [42, 43]  | [24, 25] [34, 35] [44, 45]  | [26, 27]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 3

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 2 1 1 
deqs:
0 0 0 3 1 2 1 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 62 milliseconds
Workload after restricting time ranges: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

Final Workload: 
[1, 1]: cenq(0, t) <= 0
[2, 6]: cenq(0, t) >= 4

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 56ms
avg_check_time: 28ms
max_check_time: 30ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 137
avg_cost_improvement_abs: 3.4846e+09
avg_cost_improvement_rel: 5.2642e+08
Timing Stats: 
sum_check_time: 56ms
avg_check_time: 18.6667ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.24148e+09
avg_cost_improvement_rel: 4.80499e+08
Timing Stats: 
sum_check_time: 14ms
avg_check_time: 14ms
max_check_time: 14ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 16
opt_count: 256
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.22784e+08
Timing Stats: 
sum_check_time: 390ms
avg_check_time: 24.375ms
max_check_time: 33ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.24148e+09
avg_cost_improvement_rel: 4.80499e+08
Timing Stats: 
sum_check_time: 11ms
avg_check_time: 11ms
max_check_time: 11ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 177
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5953e+08
Timing Stats: 
sum_check_time: 27ms
avg_check_time: 13.5ms
max_check_time: 14ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.5953e+08
Timing Stats: 
sum_check_time: 66ms
avg_check_time: 66ms
max_check_time: 66ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
opt_count: 151
avg_cost_improvement_abs: 0.150943
avg_cost_improvement_rel: 0.0286613
Timing Stats: 
sum_check_time: 59ms
avg_check_time: 14.75ms
max_check_time: 19ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 32ms
avg_check_time: 32ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

base example:
total time: 6
TBF.0
enqs:
0 0 0 4 2 1 1 
deqs:
0 0 0 0 4 2 1 
pkts metadata: 
0  |  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | 

zero_queues: {}
target_queues: {0, }
seed is: 14748
Base example: 
total time: 6
TBF.0
enqs:
0 0 0 4 2 1 1 
deqs:
0 0 0 0 4 2 1 
pkts metadata: 
0  |  | [20, 21] [20, 21] [20, 21] [20, 21]  | [20, 21] [20, 21]  | [20, 21]  | [20, 21]  | 

Cannot open file: 
Cannot open file: 
Original Workload: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[3, 6]: dst(0, t) = 20
[3, 6]: ecmp(0, t) = 21
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[3, 6]: dst(0, t) = 20
[3, 6]: ecmp(0, t) = 21
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Removing meta-data specs...
checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[3, 6]: dst(0, t) = 20
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
Finished removing meta-data specs
Starting random approach...
checking: 
[1, 2]: cenq(0, t) = 0
[4, 4]: cenq(0, t) = 6
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [27, 28] [35, 36] [45, 46]  | [29, 30] [37, 38] [47, 48]  | [11, 12]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = 0
[5, 5]: cenq(0, t) = 7
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = 0
[5, 6]: aipg(0, t) = 1
[6, 6]: cenq(0, t) = 8

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) = 0
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[3, 3]: cenq(0, t) = 4
[5, 6]: aipg(0, t) = 1

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 3 1 3 1 1 
deqs:
0 0 0 3 1 3 1 
pkts metadata: 
0  | [23, 24] [33, 34] [43, 44]  | [25, 26]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Last valid workload: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Starting improvement process
checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 1
Refining 1th workload
checking: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 1 1 2 3 1 1 
deqs:
0 0 1 1 2 3 1 
pkts metadata: 
0 [22, 23]  | [11, 12]  | [24, 25] [34, 35]  | [26, 27] [36, 37] [46, 47]  | [28, 29]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) = 0

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

Workload after removing specs: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

Workload after combining: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

zero_in_base: {}
in_wl: {0, }
Workload after aggregating indivs to sums: 
[1, 2]: cenq(0, t) = 0
[3, 3]: cenq(0, t) = 4

checking: 
[1, 2]: cenq(0, t) <= 0
[3, 3]: cenq(0, t) = 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 0
[1, 3]: cenq(0, t) <= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
Workload after broadening operations: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 3

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 0 3 3 1 1 
deqs:
0 0 0 0 3 3 1 
pkts metadata: 
0  |  | [25, 26] [35, 36] [45, 46]  | [27, 28] [37, 38] [47, 48]  | [29, 30]  | [1000, 1000]  | 

Workload after tightening constant bounds: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

checking: 
[1, 1]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied SAT
total time: 6
TBF.0
enqs:
0 0 2 2 2 1 1 
deqs:
0 0 0 2 2 2 1 
pkts metadata: 
0  | [23, 24] [33, 34]  | [25, 26] [35, 36]  | [27, 28] [37, 38]  | [29, 30]  | [1000, 1000]  | 

checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
checking: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

input feasible: SAT
not query satisfied UNSAT
restrict_time_ranges took 99 milliseconds
Workload after restricting time ranges: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

Final Workload: 
[1, 2]: cenq(0, t) <= 0
[3, 6]: cenq(0, t) >= 4

-------------------- STATS -----------------------
Function: 
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 59ms
avg_check_time: 29.5ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 3
opt_count: 139
avg_cost_improvement_abs: 3.4996e+09
avg_cost_improvement_rel: 5.32578e+08
Timing Stats: 
sum_check_time: 52ms
avg_check_time: 17.3333ms
max_check_time: 27ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.26099e+09
avg_cost_improvement_rel: 4.87508e+08
Timing Stats: 
sum_check_time: 12ms
avg_check_time: 12ms
max_check_time: 12ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: random_approach
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 10
opt_count: 260
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 3.24037e+08
Timing Stats: 
sum_check_time: 206ms
avg_check_time: 20.6ms
max_check_time: 32ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 3.26099e+09
avg_cost_improvement_rel: 4.87508e+08
Timing Stats: 
sum_check_time: 15ms
avg_check_time: 15ms
max_check_time: 15ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 2
opt_count: 179
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60842e+08
Timing Stats: 
sum_check_time: 30ms
avg_check_time: 15ms
max_check_time: 16ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
avg_cost_improvement_abs: 4.29497e+09
avg_cost_improvement_rel: 2.60842e+08
Timing Stats: 
sum_check_time: 72ms
avg_check_time: 72ms
max_check_time: 72ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 5
opt_count: 155
avg_cost_improvement_abs: 0.148148
avg_cost_improvement_rel: 0.0281305
Timing Stats: 
sum_check_time: 96ms
avg_check_time: 19.2ms
max_check_time: 33ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
opt_count: 0
Skipping calculation at index 0 due to missing data or zero division risk.
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 31ms
avg_check_time: 31ms
max_check_time: 31ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 0
opt_count: 0
avg_cost_improvement_abs: 0
avg_cost_improvement_rel: 0
Timing Stats: 
sum_check_time: 0ms
avg_check_time: 0ms
max_check_time: 0ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Current working directory: "/Users/lucedes/Documents/GitHub/fperf"
Saving to "benchmarks/csv/tbf.csv"
#QM: 1 2
#bool_vars: 360
#int_vars:  510
#constrs: 2819
base workload: 
[3, 6]: cenq(0, t) >= 3
[4, 6]: cenq(0, t) >= 6

Could not find base example. Solver returned: unsat
ERROR: couldn't generate base example
Test execution time: 124 seconds.
