loom
#QM: 11 29
#bool_vars: 7040
#int_vars:  8700
#constrs: 64689
base workload: 
[1, 10]: SUM_[q in {0, 3, 6, 9, }] cenq(q ,t) >= t
[1, 10]: SUM_[q in {1, 4, 7, 10, }] cenq(q ,t) >= t
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(11, t) <= 0

cp setup: 2.507 s
base example:
total time: 10
EndDemux.sink.1
enqs:
0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 
2 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 
4 1 1 1 1 1 1 1 1 1 1 
5 0 0 0 0 0 0 0 0 0 0 
6 1 1 1 1 1 1 1 1 1 1 
7 1 1 1 1 1 1 1 1 1 1 
8 0 0 0 0 0 0 0 0 0 0 
9 0 0 0 0 0 0 0 0 0 0 
10 1 1 1 1 1 1 1 1 1 1 
11 0 0 0 0 0 0 0 0 0 0 
deqs:
0 0 0 0 0 0 0 0 0 0 0 
1 0 0 0 0 0 0 0 0 0 0 
2 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 
4 1 1 1 1 1 1 1 1 1 1 
5 0 0 0 0 0 0 0 0 0 0 
6 1 1 1 1 1 1 1 1 1 1 
7 1 1 1 1 1 1 1 1 1 1 
8 0 0 0 0 0 0 0 0 0 0 
9 0 0 0 0 0 0 0 0 0 0 
10 1 1 1 1 1 1 1 1 1 1 
11 0 0 0 0 0 0 0 0 0 0 
pkts metadata: 
0  |  |  |  |  |  |  |  |  |  | 
1  |  |  |  |  |  |  |  |  |  | 
2  |  |  |  |  |  |  |  |  |  | 
3  |  |  |  |  |  |  |  |  |  | 
4 [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | 
5  |  |  |  |  |  |  |  |  |  | 
6 [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | [1, 256]  | 
7 [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | [2, 158]  | 
8  |  |  |  |  |  |  |  |  |  | 
9  |  |  |  |  |  |  |  |  |  | 
10 [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | [2, 256]  | 
11  |  |  |  |  |  |  |  |  |  | 

zero_queues: {0, 1, 2, 3, 5, 8, 9, 11, }
target_queues: {4, 6, 7, 10, }
base example generation: 277.305 s
seed is: 13388
Original Workload: 
[1, 1]: cenq(4, t) = 1
[1, 1]: cenq(6, t) = 1
[1, 1]: cenq(7, t) = 1
[1, 1]: cenq(10, t) = 1
[1, 10]: cenq(0, t) = 0
[1, 10]: cenq(1, t) = 0
[1, 10]: cenq(2, t) = 0
[1, 10]: cenq(3, t) = 0
[1, 10]: cenq(5, t) = 0
[1, 10]: cenq(8, t) = 0
[1, 10]: cenq(9, t) = 0
[1, 10]: cenq(11, t) = 0
[2, 2]: cenq(4, t) = 2
[2, 2]: cenq(6, t) = 2
[2, 2]: cenq(7, t) = 2
[2, 2]: cenq(10, t) = 2
[3, 3]: cenq(4, t) = 3
[3, 3]: cenq(6, t) = 3
[3, 3]: cenq(7, t) = 3
[3, 3]: cenq(10, t) = 3
[4, 4]: cenq(4, t) = 4
[4, 4]: cenq(6, t) = 4
[4, 4]: cenq(7, t) = 4
[4, 4]: cenq(10, t) = 4
[5, 5]: cenq(4, t) = 5
[5, 5]: cenq(6, t) = 5
[5, 5]: cenq(7, t) = 5
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(4, t) = 6
[6, 6]: cenq(6, t) = 6
[6, 6]: cenq(7, t) = 6
[6, 6]: cenq(10, t) = 6
[7, 7]: cenq(4, t) = 7
[7, 7]: cenq(6, t) = 7
[7, 7]: cenq(7, t) = 7
[7, 7]: cenq(10, t) = 7
[8, 8]: cenq(4, t) = 8
[8, 8]: cenq(6, t) = 8
[8, 8]: cenq(7, t) = 8
[8, 8]: cenq(10, t) = 8
[9, 9]: cenq(4, t) = 9
[9, 9]: cenq(6, t) = 9
[9, 9]: cenq(7, t) = 9
[9, 9]: cenq(10, t) = 9
[10, 10]: cenq(4, t) = 10
[10, 10]: cenq(6, t) = 10
[10, 10]: cenq(7, t) = 10
[10, 10]: cenq(10, t) = 10

Cannot open file: 
Cannot open file: 
Last valid workload: 
[1, 1]: cenq(4, t) = 1
[1, 1]: cenq(10, t) = 1
[1, 10]: cenq(0, t) = 0
[1, 10]: cenq(3, t) = 0
[1, 10]: cenq(9, t) = 0
[2, 2]: cenq(4, t) = 2
[2, 2]: cenq(7, t) = 2
[2, 2]: cenq(10, t) = 2
[3, 3]: cenq(4, t) = 3

Workload after removing specs: 
[1, 1]: cenq(4, t) = 1
[1, 1]: cenq(10, t) = 1
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(9, t) <= 0
[2, 2]: cenq(4, t) = 2
[2, 2]: cenq(7, t) = 2
[2, 2]: cenq(10, t) = 2
[3, 3]: cenq(4, t) = 3

Workload after combining: 
[1, 2]: cenq(10, t) = t
[1, 3]: cenq(4, t) = t
[1, 10]: SUM_[q in {0, 3, 9, }] cenq(q ,t) <= 0
[2, 2]: cenq(7, t) = 2

Workload after aggregating indivs to sums: 
[1, 2]: SUM_[q in {1, 10, }] cenq(q ,t) = t
[1, 3]: cenq(4, t) = t
[1, 10]: SUM_[q in {0, 3, 9, }] cenq(q ,t) <= 0
[2, 2]: cenq(7, t) = 2

Workload after tightening constant bounds: 
[1, 2]: SUM_[q in {1, 10, }] cenq(q ,t) = t
[1, 3]: cenq(4, t) = t
[1, 10]: SUM_[q in {0, 3, 9, }] cenq(q ,t) <= 0
[2, 2]: cenq(7, t) = 2

Final Workload after broadening operations: 
[1, 2]: SUM_[q in {1, 10, }] cenq(q ,t) >= t
[1, 3]: cenq(4, t) >= t
[1, 10]: SUM_[q in {0, 3, 9, }] cenq(q ,t) <= 0
[2, 10]: cenq(7, t) >= 2

