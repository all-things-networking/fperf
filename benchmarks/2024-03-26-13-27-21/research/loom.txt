loom
cp setup: 1.34 s
base example generation: 187.612 s
seed is: 13388
Base example: 
total time: 10
EndDemux.sink.1
enqs:
0 0 0 0 0 0 0 0 0 0 0 
1 1 1 1 1 1 1 1 1 1 1 
2 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 
4 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0 0 0 0 0 0 
6 1 1 1 1 1 1 1 1 1 1 
7 1 1 1 1 1 1 1 1 1 1 
8 0 0 0 0 0 0 0 0 0 0 
9 0 0 0 0 0 0 0 0 0 0 
10 1 1 1 1 1 1 1 1 1 1 
11 0 0 0 0 0 0 0 0 0 0 
deqs:
0 0 0 0 0 0 0 0 0 0 0 
1 1 1 1 1 1 1 1 1 1 1 
2 0 0 0 0 0 0 0 0 0 0 
3 0 0 0 0 0 0 0 0 0 0 
4 0 0 0 0 0 0 0 0 0 0 
5 0 0 0 0 0 0 0 0 0 0 
6 1 1 1 1 1 1 1 1 1 1 
7 1 1 1 1 1 1 1 1 1 1 
8 0 0 0 0 0 0 0 0 0 0 
9 0 0 0 0 0 0 0 0 0 0 
10 1 1 1 1 1 1 1 1 1 1 
11 0 0 0 0 0 0 0 0 0 0 
pkts metadata: 
0  |  |  |  |  |  |  |  |  |  | 
1 [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | 
2  |  |  |  |  |  |  |  |  |  | 
3  |  |  |  |  |  |  |  |  |  | 
4  |  |  |  |  |  |  |  |  |  | 
5  |  |  |  |  |  |  |  |  |  | 
6 [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | [1, 0]  | 
7 [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | 
8  |  |  |  |  |  |  |  |  |  | 
9  |  |  |  |  |  |  |  |  |  | 
10 [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | [2, 136]  | 
11  |  |  |  |  |  |  |  |  |  | 

Original Workload: 
[1, 1]: cenq(1, t) = 1
[1, 1]: cenq(6, t) = 1
[1, 1]: cenq(7, t) = 1
[1, 1]: cenq(10, t) = 1
[1, 10]: cenq(0, t) = 0
[1, 10]: cenq(2, t) = 0
[1, 10]: cenq(3, t) = 0
[1, 10]: cenq(4, t) = 0
[1, 10]: cenq(5, t) = 0
[1, 10]: cenq(8, t) = 0
[1, 10]: cenq(9, t) = 0
[1, 10]: cenq(11, t) = 0
[1, 10]: dst(1, t) = 2
[1, 10]: dst(6, t) = 1
[1, 10]: dst(7, t) = 2
[1, 10]: dst(10, t) = 2
[1, 10]: ecmp(1, t) = 136
[1, 10]: ecmp(6, t) = 0
[1, 10]: ecmp(7, t) = 136
[1, 10]: ecmp(10, t) = 136
[2, 2]: cenq(1, t) = 2
[2, 2]: cenq(6, t) = 2
[2, 2]: cenq(7, t) = 2
[2, 2]: cenq(10, t) = 2
[3, 3]: cenq(1, t) = 3
[3, 3]: cenq(6, t) = 3
[3, 3]: cenq(7, t) = 3
[3, 3]: cenq(10, t) = 3
[4, 4]: cenq(1, t) = 4
[4, 4]: cenq(6, t) = 4
[4, 4]: cenq(7, t) = 4
[4, 4]: cenq(10, t) = 4
[5, 5]: cenq(1, t) = 5
[5, 5]: cenq(6, t) = 5
[5, 5]: cenq(7, t) = 5
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6
[6, 6]: cenq(6, t) = 6
[6, 6]: cenq(7, t) = 6
[6, 6]: cenq(10, t) = 6
[7, 7]: cenq(1, t) = 7
[7, 7]: cenq(6, t) = 7
[7, 7]: cenq(7, t) = 7
[7, 7]: cenq(10, t) = 7
[8, 8]: cenq(1, t) = 8
[8, 8]: cenq(6, t) = 8
[8, 8]: cenq(7, t) = 8
[8, 8]: cenq(10, t) = 8
[9, 9]: cenq(1, t) = 9
[9, 9]: cenq(6, t) = 9
[9, 9]: cenq(7, t) = 9
[9, 9]: cenq(10, t) = 9
[10, 10]: cenq(1, t) = 10
[10, 10]: cenq(6, t) = 10
[10, 10]: cenq(7, t) = 10
[10, 10]: cenq(10, t) = 10

Cannot open file: 
Cannot open file: 
Removing meta-data specs...
Finished removing meta-data specs
Starting random approach...
Last valid workload: 
[1, 10]: cenq(0, t) = 0
[1, 10]: cenq(3, t) = 0
[1, 10]: cenq(9, t) = 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Starting improvement process
Transforming aipg to cenq
Done transforming aipg to cenq
Number of possible workloads: 8
Refining 1th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

restrict_time_ranges took 208532 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[2, 9]: aipg(1, t) >= 1
[2, 9]: aipg(7, t) >= 1
[2, 9]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

Refining 2th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(10, t) = t
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(7, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(7, t) >= 1
[6, 10]: cenq(1, t) >= 6

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(7, t) >= 1
[6, 10]: cenq(1, t) >= 6

restrict_time_ranges took 220582 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(10, t) >= t
[2, 9]: aipg(1, t) >= 1
[2, 9]: aipg(7, t) >= 1
[6, 10]: cenq(1, t) >= 6

Refining 3th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) = 1
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) = 1
[2, 10]: aipg(1, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5
[6, 6]: cenq(1, t) = 6

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) >= 1
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) >= 1
[2, 10]: aipg(1, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

restrict_time_ranges took 187713 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) >= 1
[2, 9]: aipg(1, t) >= 1
[2, 9]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5
[6, 10]: cenq(1, t) >= 6

Refining 4th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(10, t) = t
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(1, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(1, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(1, t) = 1
[6, 6]: cenq(1, t) = 6

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) >= 1
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(1, t) >= 1
[6, 10]: cenq(1, t) >= 6

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(7, t) >= 1
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(1, t) >= 1
[6, 10]: cenq(1, t) >= 6

restrict_time_ranges took 208406 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(10, t) >= t
[1, 10]: cenq(7, t) >= 1
[2, 9]: aipg(1, t) >= 1
[6, 10]: cenq(1, t) >= 6

Refining 5th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[2, 10]: aipg(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[2, 10]: aipg(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[2, 10]: aipg(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

restrict_time_ranges took 241895 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(1, t) >= t
[2, 9]: aipg(7, t) >= 1
[2, 9]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

Refining 6th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(10, t) = t
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(7, t) = 1

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(7, t) = 1

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(10, t) = t
[2, 10]: aipg(7, t) = 1

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(7, t) >= 1

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(10, t) >= t
[2, 10]: aipg(7, t) >= 1

restrict_time_ranges took 227352 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(1, t) >= t
[1, 9]: cenq(10, t) >= t
[2, 9]: aipg(7, t) >= 1

Refining 7th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(11, t) <= 0
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(7, t) = 1
[2, 10]: aipg(10, t) = 1
[5, 5]: cenq(10, t) = 5

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(7, t) >= 1
[2, 10]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

restrict_time_ranges took 235305 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(1, t) >= t
[1, 10]: cenq(7, t) >= 1
[2, 9]: aipg(10, t) >= 1
[5, 10]: cenq(10, t) >= 5

Refining 8th workload
Workload after removing specs: 
[1, 10]: cenq(0, t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(2, t) <= 0
[1, 10]: cenq(3, t) <= 0
[1, 10]: cenq(4, t) <= 0
[1, 10]: cenq(5, t) <= 0
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(8, t) <= 0
[1, 10]: cenq(9, t) <= 0
[1, 10]: cenq(10, t) = t
[1, 10]: cenq(11, t) <= 0

Workload after combining: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(10, t) = t

Workload after aggregating indivs to sums: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) = t
[1, 10]: cenq(7, t) = 1
[1, 10]: cenq(10, t) = t

Workload after broadening operations: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(7, t) >= 1
[1, 10]: cenq(10, t) >= t

Workload after tightening constant bounds: 
[1, 10]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 10]: cenq(1, t) >= t
[1, 10]: cenq(7, t) >= 1
[1, 10]: cenq(10, t) >= t

restrict_time_ranges took 236192 milliseconds
Final Workload after restricting time ranges: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(1, t) >= t
[1, 9]: cenq(10, t) >= t
[1, 10]: cenq(7, t) >= 1

Final Workload after improving: 
[1, 9]: SUM_[q in {0, 2, 3, 4, 5, 8, 9, 11, }] cenq(q ,t) <= 0
[1, 9]: cenq(1, t) >= t
[1, 9]: cenq(10, t) >= t
[1, 10]: cenq(7, t) >= 1

-------------------- STATS -----------------------
infeasible_input_cnt: 1410564108
Function: aggregate_indivs_to_sums
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 20
Timing Stats: 
sum_check_time: 15762ms
max_check_time: 2388ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: broaden_operations
no_solver_call: 17
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 47
Timing Stats: 
sum_check_time: 192160ms
max_check_time: 8269ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: improve
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
Timing Stats: 
sum_check_time: 7708ms
max_check_time: 7708ms
sum_call_time: 3ms
avg_call_time: 3ms
--------------------------------------------------
Function: random_approach
no_solver_call: 82
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 65
Timing Stats: 
sum_check_time: 159103ms
max_check_time: 10750ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: refine
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
Timing Stats: 
sum_check_time: 47888ms
max_check_time: 8612ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: remove_meta_data
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 8
Timing Stats: 
sum_check_time: 3180ms
max_check_time: 420ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: research
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 1
Timing Stats: 
sum_check_time: 2509ms
max_check_time: 2509ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: restrict_time_ranges
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 312
Timing Stats: 
sum_check_time: 1765698ms
max_check_time: 10282ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: tighten_constant_bounds
no_solver_call: 20
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 4
Timing Stats: 
sum_check_time: 11058ms
max_check_time: 3561ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Function: transform_aipg_to_cenq
no_solver_call: 0
input_only_solver_call: 0
query_only_solver_call: 0
full_solver_call: 12
Timing Stats: 
sum_check_time: 47952ms
max_check_time: 7658ms
sum_call_time: 0ms
avg_call_time: 0ms
--------------------------------------------------
Test execution time: 2443 seconds.
